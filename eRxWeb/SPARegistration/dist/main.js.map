{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/Utils/String.Extension.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/global.errorhandler.ts","webpack:///./src/app/loader.interceptor.ts","webpack:///./src/app/registration/account-creation/account-creation.component.css","webpack:///./src/app/registration/account-creation/account-creation.component.html","webpack:///./src/app/registration/account-creation/account-creation.component.ts","webpack:///./src/app/registration/account-creation/account-creation.model.ts","webpack:///./src/app/registration/activate-user/activation-code.model.ts","webpack:///./src/app/registration/activate-user/link-account-confirmation-popup/link-account-confirmation-popup-component.ts","webpack:///./src/app/registration/activate-user/link-account-confirmation-popup/link-account-confirmation-popup-template.html","webpack:///./src/app/registration/activate-user/link-account-confirmation-popup/link-account-confirmation-popup.style.css","webpack:///./src/app/registration/activate-user/link-account-request-model.ts","webpack:///./src/app/registration/activate-user/link-existing-account/link-existing-account-component.ts","webpack:///./src/app/registration/activate-user/link-existing-account/link-existing-account-template.html","webpack:///./src/app/registration/activate-user/link-existing-account/link-existing-account.style.css","webpack:///./src/app/registration/activate-user/user-activation-popup/user-activation-popup.component.css","webpack:///./src/app/registration/activate-user/user-activation-popup/user-activation-popup.component.html","webpack:///./src/app/registration/activate-user/user-activation-popup/user-activation-popup.component.ts","webpack:///./src/app/registration/activate-user/user-activation/user-activation.component.css","webpack:///./src/app/registration/activate-user/user-activation/user-activation.component.html","webpack:///./src/app/registration/activate-user/user-activation/user-activation.component.ts","webpack:///./src/app/registration/can-load-registration.guard.ts","webpack:///./src/app/registration/error-registration/error-registration.component.css","webpack:///./src/app/registration/error-registration/error-registration.component.html","webpack:///./src/app/registration/error-registration/error-registration.component.ts","webpack:///./src/app/registration/license-creation/license-creation.component.css","webpack:///./src/app/registration/license-creation/license-creation.component.html","webpack:///./src/app/registration/license-creation/license-creation.component.ts","webpack:///./src/app/registration/license-creation/license-creation.model.ts","webpack:///./src/app/registration/max-try-failure-popup/max-try-failure.component.css","webpack:///./src/app/registration/max-try-failure-popup/max-try-failure.component.html","webpack:///./src/app/registration/max-try-failure-popup/max-try-failure.component.ts","webpack:///./src/app/registration/registration-routing.module.ts","webpack:///./src/app/registration/registration.module.ts","webpack:///./src/app/registration/show-captcha/show-captcha.component.css","webpack:///./src/app/registration/show-captcha/show-captcha.component.html","webpack:///./src/app/registration/show-captcha/show-captcha.component.ts","webpack:///./src/app/registration/show-captcha/show-captcha.model.ts","webpack:///./src/app/registration/subscription/subscription.component.css","webpack:///./src/app/registration/subscription/subscription.component.html","webpack:///./src/app/registration/subscription/subscription.component.ts","webpack:///./src/app/registration/subscription/subscription.model.ts","webpack:///./src/app/registration/user-account-name/user-account-name.component.css","webpack:///./src/app/registration/user-account-name/user-account-name.component.html","webpack:///./src/app/registration/user-account-name/user-account-name.component.ts","webpack:///./src/app/registration/user-account-name/user-account-name.model.ts","webpack:///./src/app/registration/user-creation/user-creation.component.css","webpack:///./src/app/registration/user-creation/user-creation.component.html","webpack:///./src/app/registration/user-creation/user-creation.component.ts","webpack:///./src/app/registration/user-creation/user-creation.model.ts","webpack:///./src/app/registration/user-csp-updater/user-csp-updater.component.ts","webpack:///./src/app/registration/user-csp-updater/user-csp-updater.template.html","webpack:///./src/app/registration/user-existing-account/user-existing-account.component.css","webpack:///./src/app/registration/user-existing-account/user-existing-account.component.html","webpack:///./src/app/registration/user-existing-account/user-existing-account.component.ts","webpack:///./src/app/registration/user-existing-account/user-existing-account.model.ts","webpack:///./src/app/registration/user-password/user-password.component.css","webpack:///./src/app/registration/user-password/user-password.component.html","webpack:///./src/app/registration/user-password/user-password.component.ts","webpack:///./src/app/registration/user-password/user-password.model.ts","webpack:///./src/app/registration/user-security-questions/user-security-questions.component.css","webpack:///./src/app/registration/user-security-questions/user-security-questions.component.html","webpack:///./src/app/registration/user-security-questions/user-security-questions.component.ts","webpack:///./src/app/registration/user-security-questions/user-security-questions.model.ts","webpack:///./src/app/registration/welcome-page/welcome-page.component.css","webpack:///./src/app/registration/welcome-page/welcome-page.component.html","webpack:///./src/app/registration/welcome-page/welcome-page.component.ts","webpack:///./src/app/service/activation-code.service.ts","webpack:///./src/app/service/captcha.service.ts","webpack:///./src/app/service/data.service.ts","webpack:///./src/app/service/license-create.service.ts","webpack:///./src/app/service/loader.service.ts","webpack:///./src/app/service/message.service.ts","webpack:///./src/app/service/registration.service.ts","webpack:///./src/app/service/user-create.service.ts","webpack:///./src/app/service/welcome-service.ts","webpack:///./src/app/utils/string-validator.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","﻿declare global {\r\n    interface String {\r\n        PasswordValidator(): boolean;\r\n    }\r\n}\r\nString.prototype.PasswordValidator = function (): boolean {\r\n    \r\n    let inputString = String(this);\r\n    let options: number = 0;\r\n    if (inputString) {\r\n        if (/[a-z]/.test(inputString))\r\n            options++;\r\n        if (/[A-Z]/.test(inputString))\r\n            options++;\r\n        if (/[!@#\\$%\\^\\&*\\)\\(+=._-]/.test(inputString))\r\n            options++;\r\n        if (/[0-9]/.test(inputString))\r\n            options++;\r\n        if (inputString.length < 8 || inputString.length > 25 || options < 3) {            \r\n            return false;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport { };   ","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot([])],\r\n    providers: [],\r\n    exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n\r\n\r\n","module.exports = \".reg-header {\\r\\n    padding: 5px 0px;\\r\\n}\\r\\n\\r\\n.reg-footer {\\r\\n    clear: both;\\r\\n    min-height: 200px;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.reg-content {\\r\\n    min-height: 100px;\\r\\n}\\r\\n\\r\\n.reg-divider {\\r\\n    height: 10px;\\r\\n    border: 0px;\\r\\n    margin-top: 0px;\\r\\n}\\r\\n\\r\\n.reg-container {\\r\\n    font-family: verdana, arial, sans-serif;\\r\\n    font-size: 13px;\\r\\n}\\r\\n\\r\\n.reg-contactus {\\r\\n    padding: 10px 0px 5px;\\r\\n    font-size: 13px;\\r\\n    font-weight: bold;\\r\\n    letter-spacing: 0.2px;\\r\\n}\\r\\n\\r\\n.reg-supportlink-anchor {\\r\\n    font-size: 11px;\\r\\n}\\r\\n\\r\\n.reg-supportlink {\\r\\n    color: #ffffff;\\r\\n}\\r\\n\\r\\n.reg-app-version {\\r\\n    display: none;\\r\\n}\\r\\n\\r\\na {\\r\\n    text-decoration: none;\\r\\n}\\r\\n\\r\\n.loader {\\r\\n    display: block;\\r\\n    z-index: 999999999;\\r\\n    background-color: #fefefe;\\r\\n    background-image: url('SPARegistration/dist/loading.gif');\\r\\n    -ms-opacity: 0.6;\\r\\n    opacity: 0.6;\\r\\n    -ms-background-repeat: no-repeat;\\r\\n    background-repeat: no-repeat;\\r\\n    -ms-background-position: center;\\r\\n    position: fixed;\\r\\n    background-position: center;\\r\\n    left: 0;\\r\\n    bottom: 0;\\r\\n    right: 0;\\r\\n    top: 0;\\r\\n}\\r\\n\\r\\n.reg-error-message {\\r\\n    color: #a94442;\\r\\n    background-color: #f2dede;\\r\\n    border-color: #ebccd1;\\r\\n    padding: .9em;\\r\\n    margin-bottom: 20px;\\r\\n    border: 1px solid transparent;\\r\\n    border-radius: 4px;\\r\\n    margin: 1em;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNQQVJlZ2lzdHJhdGlvbi9zcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksV0FBVztJQUNYLGlCQUFpQjtJQUNqQixrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxpQkFBaUI7QUFDckI7O0FBRUE7SUFDSSxZQUFZO0lBQ1osV0FBVztJQUNYLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSx1Q0FBdUM7SUFDdkMsZUFBZTtBQUNuQjs7QUFFQTtJQUNJLHFCQUFxQjtJQUNyQixlQUFlO0lBQ2YsaUJBQWlCO0lBQ2pCLHFCQUFxQjtBQUN6Qjs7QUFFQTtJQUNJLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxjQUFjO0FBQ2xCOztBQUVBO0lBQ0ksYUFBYTtBQUNqQjs7QUFFQTtJQUNJLHFCQUFxQjtBQUN6Qjs7QUFFQTtJQUNJLGNBQWM7SUFDZCxrQkFBa0I7SUFDbEIseUJBQXlCO0lBQ3pCLHlEQUFvRDtJQUNwRCxnQkFBZ0I7SUFDaEIsWUFBWTtJQUNaLGdDQUFnQztJQUNoQyw0QkFBNEI7SUFDNUIsK0JBQStCO0lBQy9CLGVBQWU7SUFDZiwyQkFBMkI7SUFDM0IsT0FBTztJQUNQLFNBQVM7SUFDVCxRQUFRO0lBQ1IsTUFBTTtBQUNWOztBQUVBO0lBQ0ksY0FBYztJQUNkLHlCQUF5QjtJQUN6QixxQkFBcUI7SUFDckIsYUFBYTtJQUNiLG1CQUFtQjtJQUNuQiw2QkFBNkI7SUFDN0Isa0JBQWtCO0lBQ2xCLFdBQVc7QUFDZiIsImZpbGUiOiJTUEFSZWdpc3RyYXRpb24vc3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5yZWctaGVhZGVyIHtcclxuICAgIHBhZGRpbmc6IDVweCAwcHg7XHJcbn1cclxuXHJcbi5yZWctZm9vdGVyIHtcclxuICAgIGNsZWFyOiBib3RoO1xyXG4gICAgbWluLWhlaWdodDogMjAwcHg7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuXHJcbi5yZWctY29udGVudCB7XHJcbiAgICBtaW4taGVpZ2h0OiAxMDBweDtcclxufVxyXG5cclxuLnJlZy1kaXZpZGVyIHtcclxuICAgIGhlaWdodDogMTBweDtcclxuICAgIGJvcmRlcjogMHB4O1xyXG4gICAgbWFyZ2luLXRvcDogMHB4O1xyXG59XHJcblxyXG4ucmVnLWNvbnRhaW5lciB7XHJcbiAgICBmb250LWZhbWlseTogdmVyZGFuYSwgYXJpYWwsIHNhbnMtc2VyaWY7XHJcbiAgICBmb250LXNpemU6IDEzcHg7XHJcbn1cclxuXHJcbi5yZWctY29udGFjdHVzIHtcclxuICAgIHBhZGRpbmc6IDEwcHggMHB4IDVweDtcclxuICAgIGZvbnQtc2l6ZTogMTNweDtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgbGV0dGVyLXNwYWNpbmc6IDAuMnB4O1xyXG59XHJcblxyXG4ucmVnLXN1cHBvcnRsaW5rLWFuY2hvciB7XHJcbiAgICBmb250LXNpemU6IDExcHg7XHJcbn1cclxuXHJcbi5yZWctc3VwcG9ydGxpbmsge1xyXG4gICAgY29sb3I6ICNmZmZmZmY7XHJcbn1cclxuXHJcbi5yZWctYXBwLXZlcnNpb24ge1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxufVxyXG5cclxuYSB7XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbn1cclxuXHJcbi5sb2FkZXIge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICB6LWluZGV4OiA5OTk5OTk5OTk7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmVmZWZlO1xyXG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCcuLi8uLi8uLi9pbWFnZXMvbG9hZGluZy5naWYnKTtcclxuICAgIC1tcy1vcGFjaXR5OiAwLjY7XHJcbiAgICBvcGFjaXR5OiAwLjY7XHJcbiAgICAtbXMtYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcclxuICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XHJcbiAgICAtbXMtYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xyXG4gICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xyXG4gICAgbGVmdDogMDtcclxuICAgIGJvdHRvbTogMDtcclxuICAgIHJpZ2h0OiAwO1xyXG4gICAgdG9wOiAwO1xyXG59XHJcblxyXG4ucmVnLWVycm9yLW1lc3NhZ2Uge1xyXG4gICAgY29sb3I6ICNhOTQ0NDI7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjJkZWRlO1xyXG4gICAgYm9yZGVyLWNvbG9yOiAjZWJjY2QxO1xyXG4gICAgcGFkZGluZzogLjllbTtcclxuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCB0cmFuc3BhcmVudDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcclxuICAgIG1hcmdpbjogMWVtO1xyXG59XHJcbiJdfQ== */\"","module.exports = \"<div class=\\\"reg-container\\\">\\r\\n    <div class=\\\"reg-header\\\">\\r\\n        <div class=\\\"branded-logo\\\"></div>\\r\\n    </div>\\r\\n    <ng-container *ngIf=\\\"{ isPageLoadInProgress: this.loadingNavigation | async, isApiInProgress: this.loaderService.isLoading | async} as spinner;\\\">\\r\\n        <div id=\\\"divLoading\\\" *ngIf=\\\"spinner.isApiInProgress || spinner.isPageLoadInProgress\\\" class=\\\"loader\\\">\\r\\n        </div>\\r\\n    </ng-container>\\r\\n    <div class=\\\"reg-content\\\">\\r\\n        <router-outlet></router-outlet>\\r\\n    </div>\\r\\n    <div class=\\\"reg-footer branded-footer-color\\\">\\r\\n        <hr class=\\\"reg-divider branded-footer-stripe\\\" />\\r\\n        <div class=\\\"reg-contactus\\\">ePrescribe Customer Support</div>\\r\\n        <a class=\\\"reg-supportlink-anchor\\\" [href]=\\\"supportMailAddressHref\\\">\\r\\n            <span class=\\\"reg-supportlink\\\">{{supportMailAddress}}</span>\\r\\n        </a>\\r\\n        <span class=\\\"reg-app-version\\\">{{version}}</span>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\"","import { Component, Inject, AfterViewInit } from '@angular/core';\nimport { Router, NavigationStart, NavigationEnd, NavigationCancel, NavigationError } from '@angular/router';\r\nimport { LoaderService } from './service/loader.service';\r\nimport { Subject } from 'rxjs';\r\nimport { MessageService } from './service/message.service';\r\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent implements AfterViewInit {\n    public version: string;\r\n    public supportMailAddress: string;\r\n    public supportMailAddressHref: string;\r\n    public loadingNavigation: Subject<boolean> = new Subject<boolean>();\n\n    constructor(@Inject('window') private window: any,\n        private router: Router,\n        public loaderService: LoaderService,\n        private messageService: MessageService) {\n        this.version = this.window?.appcontext?.version;\r\n        this.supportMailAddress = this.window?.appcontext?.supportMailAddress;\r\n        this.supportMailAddressHref = \"mailto:\" + this.supportMailAddress + \"?Subject=ePrescribe%20Registration\";\r\n    }\n\n    ngAfterViewInit() {\r\n        this.router.events\r\n            .subscribe((event) => {\r\n                if (event instanceof NavigationStart) {\r\n                    this.loadingNavigation.next(true);\r\n                }\r\n                else if (event instanceof NavigationEnd ||\r\n                    event instanceof NavigationCancel ||\r\n                    event instanceof NavigationError) {\r\n                    this.loadingNavigation.next(false);\r\n                }\r\n            });\r\n    }\n}\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule, ErrorHandler } from '@angular/core';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { RegistrationModule } from './registration/registration.module';\r\nimport { DataService } from './service/data.service';\r\n\r\n\r\n\r\nimport { LoaderService } from './service/loader.service';\r\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\r\nimport { LoaderInterceptor } from './loader.interceptor';\r\nimport { GlobalErrorHandler } from './global.errorhandler';\r\nimport { MessageService } from './service/message.service';\r\n\r\nexport function getWindow() {\r\n    return (typeof window !== \"undefined\") ? window : null;\r\n}\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent\r\n\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        AppRoutingModule,\r\n        RegistrationModule,\r\n        HttpClientModule\r\n    ],\r\n    providers: [LoaderService, DataService, MessageService,\r\n        { provide: 'window', useFactory: getWindow },\r\n        { provide: HTTP_INTERCEPTORS, useClass: LoaderInterceptor, multi: true },\r\n        { provide: ErrorHandler, useClass: GlobalErrorHandler }],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","﻿import { ErrorHandler } from \"@angular/core\";\r\n\r\nexport class GlobalErrorHandler implements ErrorHandler {\r\n    handleError(error) {\r\n        console.error(error);\r\n        //TODO: Send to app-insight framework\r\n    }\r\n}","﻿import { Injectable } from \"@angular/core\";\r\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs\";\r\nimport { finalize, map } from \"rxjs/operators\";\r\nimport { LoaderService } from \"./service/loader.service\";\r\n\r\n@Injectable()\r\nexport class LoaderInterceptor implements HttpInterceptor {\r\n    private apiCallsInProgress: string[] = [];\r\n\r\n    constructor(public loaderService: LoaderService) {\r\n    }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        if (req.url && req.url.length > 0)\r\n            this.apiCallsInProgress.push(req.url.toLowerCase());\r\n\r\n        if (this.apiCallsInProgress.length > 0)\r\n            this.loaderService.show();\r\n\r\n        return next.handle(req)\r\n            .pipe(finalize(() => {\r\n                this.apiCallsInProgress = this.apiCallsInProgress.filter(api => api !== req.url.toLowerCase());\r\n                if (this.apiCallsInProgress.length <= 0 && !this.loaderService.overrideLoading)\r\n                    this.loaderService.hide();\r\n\r\n            }));\r\n    }\r\n}","module.exports = \".account-creation-form-label-spacing {\\r\\n    width: 155px;\\r\\n}\\r\\n\\r\\n.account-creation-user-name-control-spacing {\\r\\n    padding-left: 59px;\\r\\n}\\r\\n\\r\\n.account-creation-user-password-control-spacing {\\r\\n    padding-left: 0px;\\r\\n}\\r\\n\\r\\n.account-creation-security-control-spacing {\\r\\n    padding-left: 154px;\\r\\n}\\r\\n\\r\\n.account-creation-captcha-control-spacing {\\r\\n    padding-left: 85px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNQQVJlZ2lzdHJhdGlvbi9zcmMvYXBwL3JlZ2lzdHJhdGlvbi9hY2NvdW50LWNyZWF0aW9uL2FjY291bnQtY3JlYXRpb24uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxpQkFBaUI7QUFDckI7O0FBRUE7SUFDSSxtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxrQkFBa0I7QUFDdEIiLCJmaWxlIjoiU1BBUmVnaXN0cmF0aW9uL3NyYy9hcHAvcmVnaXN0cmF0aW9uL2FjY291bnQtY3JlYXRpb24vYWNjb3VudC1jcmVhdGlvbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmFjY291bnQtY3JlYXRpb24tZm9ybS1sYWJlbC1zcGFjaW5nIHtcclxuICAgIHdpZHRoOiAxNTVweDtcclxufVxyXG5cclxuLmFjY291bnQtY3JlYXRpb24tdXNlci1uYW1lLWNvbnRyb2wtc3BhY2luZyB7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDU5cHg7XHJcbn1cclxuXHJcbi5hY2NvdW50LWNyZWF0aW9uLXVzZXItcGFzc3dvcmQtY29udHJvbC1zcGFjaW5nIHtcclxuICAgIHBhZGRpbmctbGVmdDogMHB4O1xyXG59XHJcblxyXG4uYWNjb3VudC1jcmVhdGlvbi1zZWN1cml0eS1jb250cm9sLXNwYWNpbmcge1xyXG4gICAgcGFkZGluZy1sZWZ0OiAxNTRweDtcclxufVxyXG5cclxuLmFjY291bnQtY3JlYXRpb24tY2FwdGNoYS1jb250cm9sLXNwYWNpbmcge1xyXG4gICAgcGFkZGluZy1sZWZ0OiA4NXB4O1xyXG59Il19 */\"","module.exports = \"<form #userAccountForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(userAccountForm)\\\">\\r\\n    <div id=\\\"user-creation-title\\\" class=\\\"title-bar title-bar-heading branded-background-color branded-font-color\\\">\\r\\n        Create New Account\\r\\n    </div>\\r\\n    <div>\\r\\n        <span *ngIf=\\\"isValidationFailed\\\" class=\\\"validation-color\\\">\\r\\n            {{errorMessage}}\\r\\n        </span>\\r\\n        \\r\\n    </div>\\r\\n    <div class=\\\"erx-form-content-offset font-color-dimmed-black\\\">\\r\\n        <div class=\\\"erx-form-sub-heading font-setting-bold font-uppercase\\\">\\r\\n            Personal Information\\r\\n        </div>\\r\\n        <div>\\r\\n                <div class=\\\"erx-form-row\\\">\\r\\n                    <span class=\\\"erx-form-label account-creation-form-label-spacing\\\">\\r\\n                        <label><span class=\\\"highlight-star erx-form-star-position\\\">*</span>First Name</label>\\r\\n                    </span>\\r\\n\\r\\n                    <span class=\\\"erx-form-input\\\">\\r\\n                        <input id=\\\"firstname\\\" name=\\\"firstname\\\" class=\\\"input-large\\\" type=\\\"text\\\"\\r\\n                               required maxlength=\\\"35\\\" [pattern]=\\\"namePattern\\\"\\r\\n                               [(ngModel)]=\\\"userAccount.firstname\\\" #firstname=\\\"ngModel\\\">\\r\\n                        <span *ngIf=\\\"firstname.invalid && (firstname.dirty || firstname.touched)\\\">\\r\\n                            <span id=\\\"firstNameRequiredError\\\" *ngIf=\\\"firstname.errors.required\\\" class=\\\"validation-color\\\">\\r\\n                                First Name is required.\\r\\n                            </span>\\r\\n                            <span id=\\\"firstnamePatternError\\\" *ngIf=\\\"firstname.errors.pattern\\\" class=\\\"validation-color\\\">\\r\\n                                Invalid first name. First name has to be characters, maximum of 35.\\r\\n                            </span>\\r\\n                        </span>\\r\\n\\r\\n                    </span>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"erx-form-row\\\">\\r\\n                    <span class=\\\"erx-form-label account-creation-form-label-spacing\\\">\\r\\n                        <label>Middle Name</label>\\r\\n                    </span>\\r\\n                    <span class=\\\"erx-form-input\\\">\\r\\n                        <input id=\\\"middlename\\\" name=\\\"middleName\\\" class=\\\"input-large\\\"\\r\\n                               maxlength=\\\"35\\\" [pattern]=\\\"namePattern\\\"\\r\\n                               [(ngModel)]=\\\"userAccount.middleName\\\" #middleName=\\\"ngModel\\\" />\\r\\n                    </span>\\r\\n                    <span *ngIf=\\\"middleName.invalid && (middleName.dirty || middleName.touched)\\\">\\r\\n                        <span id=\\\"middleNamePatternError\\\" *ngIf=\\\"middleName.errors.pattern\\\" class=\\\"validation-color\\\">\\r\\n                            Invalid middle name. Middle name has to be characters, maximum of 35.\\r\\n                        </span>\\r\\n                    </span>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"erx-form-row\\\">\\r\\n                    <span class=\\\"erx-form-label account-creation-form-label-spacing\\\">\\r\\n                        <label><span class=\\\"highlight-star erx-form-star-position\\\">*</span>Last Name</label>\\r\\n                    </span>\\r\\n                    <span class=\\\"erx-form-input\\\">\\r\\n                        <input type=\\\"text\\\" id=\\\"lastName\\\" name=\\\"lastName\\\" class=\\\"input-large\\\"\\r\\n                               [pattern]=\\\"namePattern\\\"\\r\\n                               required maxlength=\\\"35\\\" [(ngModel)]=\\\"userAccount.lastName\\\" #lastName=\\\"ngModel\\\" />\\r\\n                        <span *ngIf=\\\"lastName.invalid && (lastName.dirty || lastName.touched)\\\">\\r\\n                            <span id=\\\"lastNameRequiredError\\\" *ngIf=\\\"lastName.errors.required\\\" class=\\\"validation-color\\\">\\r\\n                                Last Name is required.\\r\\n                            </span>\\r\\n                            <span id=\\\"firstnamePatternError\\\" *ngIf=\\\"lastName.errors.pattern\\\" class=\\\"validation-color\\\">\\r\\n                                Invalid first name. Last name has to be characters, maximum of 35.\\r\\n                            </span>\\r\\n                        </span>\\r\\n\\r\\n                    </span>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"erx-form-row\\\">\\r\\n                    <span class=\\\"erx-form-label account-creation-form-label-spacing\\\">\\r\\n                        <label><span class=\\\"highlight-star erx-form-star-position\\\">*</span>Personal Email</label>\\r\\n                    </span>\\r\\n                    <span class=\\\"erx-form-input\\\">\\r\\n                        <input type=\\\"email\\\" id=\\\"personalEmail\\\" name=\\\"personalEmail\\\" class=\\\"input-large\\\"\\r\\n                               required maxlength=\\\"70\\\"\\r\\n                               [(ngModel)]=\\\"userAccount.personalEmail\\\" #personalEmail=\\\"ngModel\\\" email />\\r\\n                        <span *ngIf=\\\"personalEmail.invalid && (personalEmail.dirty || personalEmail.touched)\\\">\\r\\n                            <span id=\\\"emailRequiredError\\\" *ngIf=\\\"personalEmail.errors.required\\\" class=\\\"validation-color\\\">\\r\\n                                Personal Email is required.\\r\\n                            </span>\\r\\n                            <span id=\\\"emailPatternError\\\" *ngIf=\\\"personalEmail.errors.email && !personalEmail.errors.required \\\" class=\\\"validation-color\\\">\\r\\n                                Enter valid email address.\\r\\n                            </span>\\r\\n                        </span>\\r\\n                    </span>\\r\\n                </div>\\r\\n                <!--</div>-->\\r\\n            </div>\\r\\n\\r\\n        <div class=\\\"erx-form-sub-heading font-setting-bold font-uppercase\\\">\\r\\n            USER CREDENTIALS & SECURITY\\r\\n        </div>\\r\\n        <div>\\r\\n            <div class=\\\"account-creation-user-name-control-spacing\\\">\\r\\n                <app-user-account #userNameChild [userExistsErrorMessage]=\\\"userExistsErrorMessage\\\" [userNameLabel]=\\\"userNameLabel\\\"></app-user-account>\\r\\n            </div>\\r\\n            <div class=\\\"account-creation-user-password-control-spacing\\\">\\r\\n                <app-user-password #pwdChild></app-user-password>\\r\\n            </div>\\r\\n            <div class=\\\"account-creation-security-control-spacing\\\">\\r\\n                <app-user-security-questions #securityQuestion></app-user-security-questions>\\r\\n            </div>\\r\\n        </div>\\r\\n     \\r\\n        <div class=\\\"erx-form-sub-heading font-setting-bold font-uppercase\\\">\\r\\n            ACKNOWLEDGEMENT\\r\\n        </div>\\r\\n        <div>\\r\\n            <div class=\\\"erx-form-row account-creation-captcha-control-spacing\\\">\\r\\n                <show-captcha #captchaControl></show-captcha>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"erx-form-row\\\">\\r\\n                <input type=\\\"checkbox\\\" [(ngModel)]=\\\"userAccount.isTermsAccepted\\\" id=\\\"chkAcceptedIDmeTerms\\\"\\r\\n                       name=\\\"isTermsAccepted\\\" #isTermsAccepted=\\\"ngModel\\\" required> I have reviewed my registration entries\\r\\n\\r\\n                <span *ngIf=\\\"isTermsAccepted.invalid && (isTermsAccepted.dirty || isTermsAccepted.touched)\\\" class=\\\"validation-color\\\">\\r\\n                    Kindly acknowledge the registration entries.\\r\\n                </span>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"erx-form-row\\\">\\r\\n            <button id=\\\"btnSubmit\\\" type=\\\"submit\\\" class=\\\"button-style\\\">Submit</button>\\r\\n            <span *ngIf=\\\"isValidationFailed\\\" class=\\\"validation-color\\\">\\r\\n                Kindly review the form, there seems to be an incomplete entry.\\r\\n            </span>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit, Inject, Input, ViewChild } from '@angular/core';\r\nimport { AccountDetails, ValidateCreateUser, SecretAnswers, SecretQuestionsAns } from '../account-creation/account-creation.model';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { UserCreateService } from '../../service/user-create.service';\r\nimport { Router, NavigationExtras } from '@angular/router';\r\nimport '../../Utils/String.Extension';\r\nimport { ShowCaptchaComponent } from '../../registration/show-captcha/show-captcha.component'\r\nimport { UserPasswordComponent } from '../user-password/user-password.component';\r\nimport { UserAccountNameComponent } from '../user-account-name/user-account-name.component';\r\nimport { UserSecurityQuestionsComponent } from '../user-security-questions/user-security-questions.component';\r\nimport { LoaderService } from '../../service/loader.service';\r\nimport { CaptchaModel } from '../show-captcha/show-captcha.model';\r\nimport { UserAccountName } from '../user-account-name/user-account-name.model';\r\nimport { UserPassword } from '../user-password/user-password.model';\r\nimport { SecurityQuestionAnswerModel } from '../user-security-questions/user-security-questions.model';\r\n\r\n@Component({\r\n    selector: 'app-create-account',\r\n    templateUrl: './account-creation.component.html',\r\n    styleUrls: ['./account-creation.component.css']\r\n})\r\nexport class AccountCreationComponent implements OnInit {\r\n    errorMessage: string;\r\n    isValidationFailed: boolean=false;\r\n    userAccount: AccountDetails = new AccountDetails();\r\n    isPasswordValid: boolean = false;\r\n    isSecurityQuestionAnswerValid: boolean = false;\r\n    isUserNameValid: boolean = true;\r\n    userExistsErrorMessage: string;\r\n    userNameLabel: string;\r\n    isValidCaptcha: boolean = false;\r\n    captcha: string = \"\";\r\n    componentState: NavigationExtras[\"state\"];\r\n    namePattern = \"^([a-zA-Z]+[\\\\s-'.]{0,35})*\";\r\n    @ViewChild(ShowCaptchaComponent) captchaComponent: ShowCaptchaComponent;\r\n    @ViewChild('pwdChild') pwdChild: UserPasswordComponent;\r\n    @ViewChild('userNameChild') userNameChild: UserAccountNameComponent;\r\n    @ViewChild('securityQuestion') securityQuestion: UserSecurityQuestionsComponent;\r\n    @ViewChild('captchaControl') captchaControl: ShowCaptchaComponent;\r\n\r\n    \r\n    constructor(private userCreateService: UserCreateService,\r\n        private loaderService: LoaderService,\r\n        @Inject('window') private window: any, ) {\r\n    }\r\n    ngOnInit() {\r\n        this.userExistsErrorMessage = \"Username is not available\";\r\n        this.userNameLabel = \"Username\";\r\n    }\r\n\r\n    validateShieldUserAccount() {\r\n\r\n        this.getUserAccountNameDetails();\r\n        this.getPasswordDetails();\r\n        this.getSecurityQuestionAnswerDetails();\r\n        return (this.isPasswordValid && this.isUserNameValid && this.isSecurityQuestionAnswerValid);\r\n\r\n    }\r\n\r\n    isUserAccountFormValid(data: any) {\r\n        this.markFormControlsTouched(data);\r\n        this.getCaptchaDetails();\r\n        let isShieldUserAccountValid = this.validateShieldUserAccount();\r\n        return data.valid\r\n            && isShieldUserAccountValid\r\n            && this.isValidCaptcha;\r\n    }\r\n     markFormControlsTouched(userAccountForm: any) {\r\n        Object.keys(userAccountForm.controls).forEach(field => {\r\n            const control = userAccountForm.controls[field];\r\n            control.markAsTouched({ onlySelf: true });\r\n        });\r\n    }\r\n    onSubmit(userAccountForm: any) {\r\n        this.isValidationFailed = false;\r\n        if (this.isUserAccountFormValid(userAccountForm)) {\r\n            this.userAccount.secretQuestionsField = this.generateScretAnswer();\r\n            this.userCreateService\r\n                .saveUserData(this.userAccount).subscribe((validateCreateUser: ValidateCreateUser) => {\r\n                    if (validateCreateUser.IsDataSaved) {\r\n                        this.loaderService.show(true);\r\n                        this.window.open(validateCreateUser.RedirectUrl, \"_self\");\r\n                    }\r\n                    else {\r\n                        this.isValidationFailed = true;\r\n                        if (!validateCreateUser.IsValidCaptcha) {\r\n                            this.captchaControl.ShowInValidCaptchaError = true;\r\n                        }\r\n                        else {\r\n                            this.errorMessage = validateCreateUser.ErrorMessage;\r\n                        }\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    generateScretAnswer() {\r\n        let secretAnsweList: SecretAnswers[] = [];\r\n        let secretAnswer: SecretAnswers = new SecretAnswers();\r\n        let secretAnswer2: SecretAnswers = new SecretAnswers();\r\n        let secretAnswer3: SecretAnswers = new SecretAnswers();\r\n        secretAnswer.questionIDField = Number(this.userAccount.securityQuestion1);\r\n        secretAnswer.answerField = this.userAccount.securityAnswer1;\r\n        secretAnsweList.push(secretAnswer);\r\n        secretAnswer2.questionIDField = Number(this.userAccount.securityQuestion2);\r\n        secretAnswer2.answerField = this.userAccount.securityAnswer2;\r\n        secretAnsweList.push(secretAnswer2);\r\n        secretAnswer3.questionIDField = Number(this.userAccount.securityQuestion3);\r\n        secretAnswer3.answerField = this.userAccount.securityAnswer3;\r\n        secretAnsweList.push(secretAnswer3);\r\n        return secretAnsweList;\r\n    }\r\n\r\n    getCaptchaDetails() {\r\n        let captchaModel: CaptchaModel;\r\n        captchaModel = this.captchaControl.GetCaptchaDetails()\r\n        this.userAccount.CapchaText = captchaModel.captchaText;\r\n        this.isValidCaptcha = captchaModel.isValid;\r\n    }\r\n\r\n    getUserAccountNameDetails() {\r\n        let userAccountName: UserAccountName;\r\n        userAccountName = this.userNameChild.GetUserAccountNameDetails();\r\n        this.userAccount.userName = userAccountName.shieldUserName;\r\n        this.isUserNameValid = userAccountName.isValid;\r\n    }\r\n\r\n    getPasswordDetails() {\r\n        let userPassword: UserPassword;\r\n        userPassword = this.pwdChild.GetPasswordDetails();\r\n        this.userAccount.password = userPassword.password;\r\n        this.userAccount.confirmPassword = userPassword.confirmPassword;\r\n        this.isPasswordValid = userPassword.isValid;\r\n    }\r\n\r\n    getSecurityQuestionAnswerDetails() {\r\n        let securityQuestionAnswerModel: SecurityQuestionAnswerModel;\r\n        securityQuestionAnswerModel = this.securityQuestion.GetSecurityQuestionAnswerDetails();\r\n        this.userAccount.securityQuestion1 = securityQuestionAnswerModel.selectedShieldQuestionOne;\r\n        this.userAccount.securityQuestion2 = securityQuestionAnswerModel.selectedShieldQuestionTwo;\r\n        this.userAccount.securityQuestion3 = securityQuestionAnswerModel.selectedShieldQuestionThree;\r\n        this.userAccount.securityAnswer1 = securityQuestionAnswerModel.securityAnswerOne;\r\n        this.userAccount.securityAnswer2 = securityQuestionAnswerModel.securityAnswerTwo;\r\n        this.userAccount.securityAnswer3 = securityQuestionAnswerModel.securityAnswerThree;\r\n        this.isSecurityQuestionAnswerValid = securityQuestionAnswerModel.isValid;\r\n    }\r\n\r\n}","﻿export class AccountDetails {\r\n    firstname: string;\r\n    lastName: string;\r\n    middleName: string;\r\n    personalEmail: string;\r\n    contactPhoneNumber: string;\r\n    userName: string;\r\n    password: string;\r\n    confirmPassword: string;\r\n    title: string;\r\n    suffix: string;\r\n    speciality1: string;\r\n    speciality2: string;\r\n    isTermsAccepted: boolean;\r\n    CapchaText: string;\r\n    securityQuestion1: string;\r\n    securityQuestion2: string;\r\n    securityQuestion3: string;\r\n    securityAnswer1: string;\r\n    securityAnswer2: string;\r\n    securityAnswer3: string;\r\n    secretQuestionsField: SecretAnswers[];\r\n    secretQuestionField: SecretQuestionsAns[];\r\n}\r\n\r\nexport class SecretQuestionsAns {\r\n    ExtensionDataObject: object;\r\n    questionIDField: number;\r\n    answerField: string;\r\n}\r\n\r\nexport class shieldSecretQuestion {\r\n\r\n    questionIDField: number;\r\n    questionField: string;\r\n}\r\n\r\nexport class SecretAnswers {\r\n\r\n    questionIDField: number;\r\n    answerField: string;\r\n}\r\n\r\nexport class ValidateCreateUser {\r\n    IsDataSaved: boolean;\r\n    RedirectUrl: string;\r\n    ErrorMessage: string;\r\n    IsValidCaptcha: boolean;\r\n}","﻿export class ActivationCodeModel {\r\n    ActivationCode: string;\r\n    CaptchaText: string;\r\n}\r\n\r\nexport class ValidateActivationCodeModel {\r\n    IsValid: boolean;\r\n    IsValidCaptcha: boolean;\r\n}","﻿import { Component, Input, Inject } from \"@angular/core\";\r\nimport { Router } from '@angular/router';\r\nimport { LinkExistingUserModel, ErrorReason } from '../link-account-request-model'\r\nimport { LinkExistingAccount } from '../../activate-user/link-existing-account/link-existing-account-component'\r\nimport { Workflow } from '../link-account-request-model'\r\nimport { LoaderService } from '../../../service/loader.service';\r\n\r\n@Component({\r\n    selector: 'link-account-confirmation-popup',\r\n    templateUrl: './link-account-confirmation-popup-template.html',\r\n    styleUrls: ['./link-account-confirmation-popup.style.css']\r\n})\r\nexport class LinkAccountConfirmationPopupComponent  {\r\n    linkExistingUserResponse: LinkExistingUserModel = new LinkExistingUserModel();\r\n    linkExistingAccount: LinkExistingAccount;\r\n   showLinkedAccountConfPopup: boolean=false;\r\n    showLinkedAccountConfLayout: boolean;\r\n    workFlowType: Workflow;\r\n    showMessage: boolean;\r\n    linkConfMessageText: string;\r\n    linkConfImageUrl: string ;                \r\n    imageIcon: string;\r\n    constructor(private router: Router,\r\n        private loaderService: LoaderService,\r\n        @Inject('window') private window: any) {\r\n    }\r\n    \r\n    showLinkedAccountConfirmation() {\r\n        if (this.linkExistingUserResponse.IsValid) {            \r\n            if (this.workFlowType == Workflow.Utilities) {\r\n                this.showMessage = true;\r\n                this.linkConfMessageText = \"User successfully linked. You will now be directed to Activation home page.\";\r\n                this.setImageIcon(\"SUCCESS\");    \r\n            }           \r\n            this.showLinkedAccountConfPopup = true;\r\n            this.showLinkedAccountConfLayout = true;\r\n        }\r\n        else {\r\n            this.displayErrorMessage(this.linkExistingUserResponse);\r\n        }\r\n    }\r\n    goNext() {\r\n        this.loaderService.show(true);\r\n        if (this.workFlowType == Workflow.Utilities) {\r\n            this.window.open(this.window?.appcontext?.logout + \"?msg=Utlities user successfully activated\", \"_self\");\r\n        }\r\n        else if (this.workFlowType == Workflow.Sso) {\r\n            this.window.open(this.window?.appcontext?.logout + \"?SSOActivationSuccess=true\", \"_self\");\r\n        }\r\n        else\r\n        {\r\n            this.window.open(this.window?.appcontext?.twoNUserMediator, \"_self\");\r\n        }\r\n    }\r\n    setImageIcon(value: string) {\r\n        switch (value.toUpperCase()) {\r\n            case \"SUCCESS\": \r\n                this.linkConfImageUrl = \"../images/info-global-16-x-16.png\";\r\n                this.imageIcon = \"success-dialog\";\r\n                break;          \r\n            case \"INFORMATION\":\r\n                this.linkConfImageUrl = \"../images/warning-global-16-x-16.png\";\r\n                this.imageIcon = \"information-dialog\";\r\n                break;\r\n            default:\r\n                this.linkConfImageUrl = \"../images/info-global-16-x-16.png\";\r\n                this.imageIcon = \"success-dialog\";\r\n                break;\r\n        }\r\n    }\r\n    displayErrorMessage(linkResponse: LinkExistingUserModel) {\r\n        switch (linkResponse.ErrorReason) {          \r\n            case ErrorReason.ERX_UPDATE_FAILURE:\r\n                {\r\n                    this.showMessage = true;\r\n                    this.linkConfMessageText = \"Your existing Veradigm Security Account will successfully be linked to ePrescribe account upon login.\";\r\n                    this.setImageIcon(\"INFORMATION\");  \r\n                    this.showLinkedAccountConfPopup = true;\r\n                    this.showLinkedAccountConfLayout = true;\r\n                    break;\r\n                }\r\n            default:\r\n                {\r\n                    this.showMessage = true;                    \r\n                    this.showLinkedAccountConfPopup = false;\r\n                    this.showLinkedAccountConfLayout = false;\r\n                    break;\r\n                }\r\n            \r\n        }\r\n    }\r\n}","module.exports = \"<div class=\\\"modal-backdrop fade in\\\" [style.display]=\\\"showLinkedAccountConfLayout ? 'block' : 'none'\\\"></div>\\r\\n<div *ngIf=\\\"showLinkedAccountConfPopup\\\">\\r\\n    <div class=\\\"modal\\\" id=\\\"mdlLinkedAccount\\\" [style.display]=\\\"'block'\\\" role=\\\"dialog\\\" [style.top]=\\\"'30%'\\\">\\r\\n        <div class=\\\"modal-dialog link-account-conf-dialog-size\\\">\\r\\n            <div class=\\\"modal-content\\\">\\r\\n                <div class=\\\"reg-overlayTitle\\\">\\r\\n                    Veradigm Security Account Confirmation\\r\\n                </div>\\r\\n                <div class=\\\"modal-body\\\">\\r\\n                    <div id=\\\"dvMessage\\\" [class]=\\\"imageIcon\\\" *ngIf=\\\"showMessage\\\">\\r\\n                        <span class=\\\"status-image-size\\\">\\r\\n                            <img id=\\\"imgStatus\\\" [src]=\\\"linkConfImageUrl\\\" />\\r\\n                        </span>\\r\\n                        <span>\\r\\n                            {{ linkConfMessageText }}\\r\\n                        </span>\\r\\n                    </div>\\r\\n                    <div class=\\\"erx-form-row\\\">\\r\\n                        Your existing Veradigm Security Account has been successfully linked to this eRX System.\\r\\n                    </div>\\r\\n                    <div class=\\\"erx-form-row\\\">\\r\\n                        <span class=\\\"erx-form-label\\\">\\r\\n                            <label>First Name:</label>\\r\\n                        </span>\\r\\n                        <span >\\r\\n                            <label id=\\\"lblFirstName\\\" class=\\\"link-account-conf-label-text\\\">{{ linkExistingUserResponse.FirstName}}</label>\\r\\n                        </span>\\r\\n                    </div>\\r\\n                    <div class=\\\"erx-form-row\\\">\\r\\n                        <span class=\\\"erx-form-label\\\">\\r\\n                            <label>Last Name:</label>\\r\\n                        </span>\\r\\n                        <span >\\r\\n                            <label id=\\\"lblLastName\\\" class=\\\"link-account-conf-label-text\\\">{{ linkExistingUserResponse.LastName}}</label>\\r\\n                        </span>\\r\\n                    </div>\\r\\n                    <div class=\\\"erx-form-row\\\">\\r\\n                        <span class=\\\"erx-form-label\\\">\\r\\n                            <label>Email:</label>\\r\\n                        </span>\\r\\n                        <span>\\r\\n                            <label id=\\\"lblEmail\\\" class=\\\"link-account-conf-label-text\\\">{{ linkExistingUserResponse.Email}}</label>\\r\\n                        </span>\\r\\n                    </div>\\r\\n                    <div class=\\\"erx-form-row\\\">\\r\\n                        <span class=\\\"erx-form-label\\\">\\r\\n                            <label>Security Account Name:</label>\\r\\n                        </span>\\r\\n                        <span>\\r\\n                            <label id=\\\"lblAccountName\\\"  class=\\\"link-account-conf-label-text\\\">{{ linkExistingUserResponse.AccountName}}</label>\\r\\n                        </span>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"reg-overlayFooter\\\">\\r\\n                        <button type=\\\"submit\\\" class=\\\"button-style\\\" ID=\\\"btnLinkNext\\\" (click)=\\\"goNext();\\\">Next</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","module.exports = \".link-account-conf-dialog-size {\\r\\n    width: 600px;\\r\\n}\\r\\n\\r\\n.success-dialog {\\r\\n    margin-left: 10px;\\r\\n    background-color: #d6ecee;\\r\\n    padding-bottom: 5px;\\r\\n}\\r\\n\\r\\n.information-dialog {\\r\\n    margin-left: 10px;\\r\\n    background-color: #fff2cd;\\r\\n    padding-bottom: 5px;\\r\\n}\\r\\n\\r\\n.status-image-size {\\r\\n    width: 25px;\\r\\n}\\r\\n\\r\\n.link-account-conf-label-text {\\r\\n    font-weight: normal;\\r\\n    padding-top:1px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNQQVJlZ2lzdHJhdGlvbi9zcmMvYXBwL3JlZ2lzdHJhdGlvbi9hY3RpdmF0ZS11c2VyL2xpbmstYWNjb3VudC1jb25maXJtYXRpb24tcG9wdXAvbGluay1hY2NvdW50LWNvbmZpcm1hdGlvbi1wb3B1cC5zdHlsZS5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksaUJBQWlCO0lBQ2pCLHlCQUF5QjtJQUN6QixtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxpQkFBaUI7SUFDakIseUJBQXlCO0lBQ3pCLG1CQUFtQjtBQUN2Qjs7QUFDQTtJQUNJLFdBQVc7QUFDZjs7QUFDQTtJQUNJLG1CQUFtQjtJQUNuQixlQUFlO0FBQ25CIiwiZmlsZSI6IlNQQVJlZ2lzdHJhdGlvbi9zcmMvYXBwL3JlZ2lzdHJhdGlvbi9hY3RpdmF0ZS11c2VyL2xpbmstYWNjb3VudC1jb25maXJtYXRpb24tcG9wdXAvbGluay1hY2NvdW50LWNvbmZpcm1hdGlvbi1wb3B1cC5zdHlsZS5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubGluay1hY2NvdW50LWNvbmYtZGlhbG9nLXNpemUge1xyXG4gICAgd2lkdGg6IDYwMHB4O1xyXG59XHJcblxyXG4uc3VjY2Vzcy1kaWFsb2cge1xyXG4gICAgbWFyZ2luLWxlZnQ6IDEwcHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZDZlY2VlO1xyXG4gICAgcGFkZGluZy1ib3R0b206IDVweDtcclxufVxyXG5cclxuLmluZm9ybWF0aW9uLWRpYWxvZyB7XHJcbiAgICBtYXJnaW4tbGVmdDogMTBweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmYyY2Q7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogNXB4O1xyXG59XHJcbi5zdGF0dXMtaW1hZ2Utc2l6ZSB7XHJcbiAgICB3aWR0aDogMjVweDtcclxufVxyXG4ubGluay1hY2NvdW50LWNvbmYtbGFiZWwtdGV4dCB7XHJcbiAgICBmb250LXdlaWdodDogbm9ybWFsO1xyXG4gICAgcGFkZGluZy10b3A6MXB4O1xyXG59Il19 */\"","﻿export class LinkAccountRequestModel {\r\n   shieldUserName:string\r\n   shieldPassword: string\r\n}\r\nexport class LinkExistingUserModel {\r\n    ErrorReason: ErrorReason;\r\n    FirstName: string;\r\n    LastName: string;\r\n    Email: string;\r\n    AccountName: string;\r\n    IsValid: boolean;\r\n    WorkflowType: Workflow;\r\n}\r\n\r\nexport enum ErrorReason {    \r\n    NOT_AUTHENTICATED,\r\n    FAILED_TO_LINK_USER,\r\n    ERX_UPDATE_FAILURE,\r\n    FAILED_TO_RETRIEVE_USER_GUID,\r\n    USER_PROFILE_ALREADY_LINKED_INSIDE_THIS_TENANT,\r\n    EXTERNAL_ID_IS_NOT_USER_GUID,\r\n    USERNAME_ALREADY_EXISTS_FOR_LICENSE\r\n}\r\nexport enum Workflow {\r\n    None,\r\n    Sso,\r\n    Utilities,\r\n    Main\r\n}","﻿import { Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ActivationCodeService } from '../../../service/activation-code.service'\r\nimport { LinkAccountRequestModel, LinkExistingUserModel, ErrorReason } from '../link-account-request-model'\r\nimport { LinkAccountConfirmationPopupComponent } from '../../activate-user/link-account-confirmation-popup/link-account-confirmation-popup-component'\r\nimport { UserExistingAccountComponent } from '../../user-existing-account/user-existing-account.component';\r\nimport { Subject } from 'rxjs'\r\nimport { ExistingUserAccount } from '../../user-existing-account/user-existing-account.model';\r\n@Component({\r\n    selector: 'link-existing-account-template',\r\n    templateUrl: './link-existing-account-template.html',\r\n    styleUrls: ['./link-existing-account.style.css']\r\n})\r\nexport class LinkExistingAccount implements OnInit {\r\n    isValid: boolean;\r\n    @ViewChild('linkedAccountConfirmPopup') linkedAccountConfirmPopup: LinkAccountConfirmationPopupComponent;\r\n    @ViewChild('userExisting') userExisting: UserExistingAccountComponent;\r\n    IsLinkedUser: boolean;\r\n \r\n    linkAccountModel: LinkAccountRequestModel = new LinkAccountRequestModel();\r\n    isExistingAccountValid: boolean = false;\r\n    linkMessageText: string;\r\n    showLinkMessage: boolean;\r\n    linkImageUrl: string;\r\n    linkImageIcon: string ;\r\n    constructor(private router: Router, private activationService: ActivationCodeService) {\r\n    }\r\n\r\n    ngOnInit() {     \r\n    }\r\n   \r\n    createUser() {\r\n        this.router.navigate([\"register/createAccount\"]);\r\n    }\r\n    linkUserToExistingAccount() {\r\n        this.getExistingAccountDetails();\r\n        if (this.isExistingAccountValid) {\r\n            this.activationService.linkToExistingUser(this.linkAccountModel).subscribe((linkShieldResponse: LinkExistingUserModel) => {\r\n                this.linkedAccountConfirmPopup.linkExistingUserResponse = linkShieldResponse;\r\n                if (this.linkedAccountConfirmPopup.linkExistingUserResponse.IsValid) {\r\n                    this.IsLinkedUser = false;\r\n                    this.linkedAccountConfirmPopup.showLinkedAccountConfLayout = true;\r\n                    this.linkedAccountConfirmPopup.showLinkedAccountConfPopup = true;\r\n                    this.linkedAccountConfirmPopup.workFlowType = linkShieldResponse.WorkflowType\r\n                    this.linkedAccountConfirmPopup.showLinkedAccountConfirmation();\r\n                }\r\n                else {\r\n\r\n                    this.DisplayErrorMessage(this.linkedAccountConfirmPopup.linkExistingUserResponse);\r\n                }\r\n            });\r\n        }\r\n    } \r\n\r\n    setMessageImageIcon(value: string) {\r\n        switch (value.toUpperCase()) {\r\n            case \"SUCCESS\":\r\n                this.linkImageUrl = \"../images/info-global-16-x-16.png\";\r\n                this.linkImageIcon = \"success-dialog\";\r\n                break;\r\n            case \"INFORMATION\":\r\n                this.linkImageUrl = \"../images/warning-global-16-x-16.png\";\r\n                this.linkImageIcon = \"information-dialog\";\r\n                break;\r\n            case \"ERROR\":\r\n                this.linkImageUrl = \"../images/alert-global-16-x-16.png\";\r\n                this.linkImageIcon = \"error-dialog\";\r\n                break;\r\n            default:\r\n                this.linkImageUrl = \"../images/info-global-16-x-16.png\";\r\n                this.linkImageIcon = \"success-dialog\";\r\n                break;\r\n        }\r\n    }\r\n    DisplayErrorMessage(linkResponse: LinkExistingUserModel) {\r\n        switch (linkResponse.ErrorReason) {\r\n            case ErrorReason.NOT_AUTHENTICATED:\r\n                {\r\n                    this.showLinkMessage = true;\r\n                    this.linkMessageText = \"Incorrect Login ID or Password was specified.\";\r\n                    this.setMessageImageIcon(\"ERROR\");\r\n                    break;\r\n                }\r\n            case ErrorReason.FAILED_TO_LINK_USER:\r\n                {\r\n                    this.showLinkMessage = true;\r\n                    this.linkMessageText = \"Unable to link your Veradigm Security Account to your ePrescribe Account, Please try again.\";\r\n                    this.setMessageImageIcon(\"ERROR\");\r\n                    break;\r\n                }\r\n            case ErrorReason.ERX_UPDATE_FAILURE:\r\n                {\r\n                    this.IsLinkedUser = false;\r\n                    this.linkedAccountConfirmPopup.showLinkedAccountConfLayout = true;\r\n                    this.linkedAccountConfirmPopup.showLinkedAccountConfPopup = true;\r\n                    this.linkedAccountConfirmPopup.showLinkedAccountConfirmation();                    \r\n                    return;\r\n                }\r\n            case ErrorReason.FAILED_TO_RETRIEVE_USER_GUID:\r\n                {\r\n                    this.showLinkMessage = true;\r\n                    this.linkMessageText = \"Failed to retrieve your eRx information from your Security Account.\";\r\n                    this.setMessageImageIcon(\"ERROR\");\r\n                    break;\r\n                }\r\n            case ErrorReason.USER_PROFILE_ALREADY_LINKED_INSIDE_THIS_TENANT:\r\n                {\r\n                    this.showLinkMessage = true;\r\n                    this.linkMessageText = \"Your Login ID is already linked to another profile in this license.\";\r\n                    this.setMessageImageIcon(\"ERROR\");\r\n                    break;\r\n                }\r\n            case ErrorReason.USERNAME_ALREADY_EXISTS_FOR_LICENSE:\r\n                {\r\n                    this.showLinkMessage = true;\r\n                    this.linkMessageText = \"Your username already exists within this license.\";\r\n                    this.setMessageImageIcon(\"ERROR\");\r\n                    break;\r\n                }\r\n        }\r\n        this.linkedAccountConfirmPopup.showLinkedAccountConfLayout = false;\r\n        this.linkedAccountConfirmPopup.showLinkedAccountConfPopup = false;       \r\n        return true;\r\n    }    \r\n\r\n\r\n    getExistingAccountDetails() {\r\n        let existingUserAccount: ExistingUserAccount;\r\n        existingUserAccount = this.userExisting.GetExistingAccountDetails();\r\n        this.linkAccountModel.shieldUserName = existingUserAccount.shieldUserName;\r\n        this.linkAccountModel.shieldPassword = existingUserAccount.password;\r\n        this.isExistingAccountValid = existingUserAccount.isValid;\r\n    }\r\n}","module.exports = \"<div class=\\\"modal-backdrop fade in\\\" [style.display]=\\\"IsLinkedUser ? 'block' : 'none'\\\"></div>\\r\\n<div *ngIf=\\\"IsLinkedUser\\\">\\r\\n    <div class=\\\"modal\\\" id=\\\"mdlLinkedAccount\\\" [style.display]=\\\"'block'\\\" role=\\\"dialog\\\" [style.top]=\\\"'20%'\\\">\\r\\n       <div class=\\\"modal-dialog  link-existing-account-dialog-size\\\">\\r\\n            <div class=\\\"modal-content\\\">\\r\\n                <div class=\\\"reg-overlayTitle\\\">\\r\\n                    Veradigm Security Account: Link to Existing Account\\r\\n                </div>\\r\\n                <div class=\\\"modal-body\\\">\\r\\n                    <div id=\\\"dvMessage\\\" [class]=\\\"linkImageIcon\\\" *ngIf=\\\"showLinkMessage\\\">\\r\\n                        <span  class=\\\"status-image-size\\\">\\r\\n                            <img id=\\\"imgStatus\\\" [src]=\\\"linkImageUrl\\\" />\\r\\n                        </span>\\r\\n                        <span>\\r\\n                            {{ linkMessageText }}\\r\\n                        </span>\\r\\n                    </div>\\r\\n                    <div class=\\\"erx-form-row\\\">\\r\\n                        Please enter your Veradigm Security Account credentials to link to your existing account.\\r\\n                    </div>\\r\\n                    <div class=\\\"erx-form-row\\\">\\r\\n                        <user-existing-account #userExisting></user-existing-account>\\r\\n                    </div>\\r\\n                    <div class=\\\"erx-form-row\\\">\\r\\n                        If you have forgotten your User Name or Password, please log into the system you originally used to configure your\\r\\n                        Veradigm Security Account to view user name and/or change password.\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"reg-overlayFooter\\\">\\r\\n                        <span><button type=\\\"submit\\\" class=\\\"button-style\\\" (click)=\\\"linkUserToExistingAccount()\\\"> Link Account </button> </span>\\r\\n                        <span class=\\\"not-registered-style\\\">Not a registered user?</span>\\r\\n                        <span> <a routerLink=\\\"\\\" (click)=\\\"createUser()\\\"> Enroll now </a></span>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<link-account-confirmation-popup #linkedAccountConfirmPopup></link-account-confirmation-popup>\\r\\n\"","module.exports = \".not-registered-style {\\r\\n    margin-top: 4px;\\r\\n    margin-left: 10px;\\r\\n    margin-right: 10px;\\r\\n}\\r\\n\\r\\n.success-dialog {\\r\\n    background-color: #d6ecee;\\r\\n    margin-left: 10px;\\r\\n    width:100%;\\r\\n}\\r\\n\\r\\n.error-dialog {\\r\\n    background-color: #ffe4e4;\\r\\n    margin-left: 10px;\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.information-dialog {\\r\\n    background-color: #fff2cd;\\r\\n    margin-left: 10px;\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.link-existing-account-dialog-size {\\r\\n    width: 600px;\\r\\n}\\r\\n\\r\\n.status-image-size {\\r\\n    width: 25px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNQQVJlZ2lzdHJhdGlvbi9zcmMvYXBwL3JlZ2lzdHJhdGlvbi9hY3RpdmF0ZS11c2VyL2xpbmstZXhpc3RpbmctYWNjb3VudC9saW5rLWV4aXN0aW5nLWFjY291bnQuc3R5bGUuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZUFBZTtJQUNmLGlCQUFpQjtJQUNqQixrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSx5QkFBeUI7SUFDekIsaUJBQWlCO0lBQ2pCLFVBQVU7QUFDZDs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixpQkFBaUI7SUFDakIsV0FBVztBQUNmOztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLGlCQUFpQjtJQUNqQixXQUFXO0FBQ2Y7O0FBRUE7SUFDSSxZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksV0FBVztBQUNmIiwiZmlsZSI6IlNQQVJlZ2lzdHJhdGlvbi9zcmMvYXBwL3JlZ2lzdHJhdGlvbi9hY3RpdmF0ZS11c2VyL2xpbmstZXhpc3RpbmctYWNjb3VudC9saW5rLWV4aXN0aW5nLWFjY291bnQuc3R5bGUuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm5vdC1yZWdpc3RlcmVkLXN0eWxlIHtcclxuICAgIG1hcmdpbi10b3A6IDRweDtcclxuICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xyXG59XHJcblxyXG4uc3VjY2Vzcy1kaWFsb2cge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Q2ZWNlZTtcclxuICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xyXG4gICAgd2lkdGg6MTAwJTtcclxufVxyXG5cclxuLmVycm9yLWRpYWxvZyB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZlNGU0O1xyXG4gICAgbWFyZ2luLWxlZnQ6IDEwcHg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuLmluZm9ybWF0aW9uLWRpYWxvZyB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmMmNkO1xyXG4gICAgbWFyZ2luLWxlZnQ6IDEwcHg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuLmxpbmstZXhpc3RpbmctYWNjb3VudC1kaWFsb2ctc2l6ZSB7XHJcbiAgICB3aWR0aDogNjAwcHg7XHJcbn1cclxuXHJcbi5zdGF0dXMtaW1hZ2Utc2l6ZSB7XHJcbiAgICB3aWR0aDogMjVweDtcclxufSJdfQ== */\"","module.exports = \".user-activation-dialog-size{\\r\\n    width:750px;\\r\\n}\\r\\n.erx-activation-label {\\r\\n    float: left;\\r\\n    padding-right: 10px;\\r\\n}\\r\\n.btn-spacing{\\r\\n    margin-left:20px;\\r\\n}\\r\\n.user-activation-captcha-control-spacing {\\r\\n    padding-left: 68px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNQQVJlZ2lzdHJhdGlvbi9zcmMvYXBwL3JlZ2lzdHJhdGlvbi9hY3RpdmF0ZS11c2VyL3VzZXItYWN0aXZhdGlvbi1wb3B1cC91c2VyLWFjdGl2YXRpb24tcG9wdXAuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7QUFDZjtBQUNBO0lBQ0ksV0FBVztJQUNYLG1CQUFtQjtBQUN2QjtBQUVBO0lBQ0ksZ0JBQWdCO0FBQ3BCO0FBR0E7SUFDSSxrQkFBa0I7QUFDdEIiLCJmaWxlIjoiU1BBUmVnaXN0cmF0aW9uL3NyYy9hcHAvcmVnaXN0cmF0aW9uL2FjdGl2YXRlLXVzZXIvdXNlci1hY3RpdmF0aW9uLXBvcHVwL3VzZXItYWN0aXZhdGlvbi1wb3B1cC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnVzZXItYWN0aXZhdGlvbi1kaWFsb2ctc2l6ZXtcclxuICAgIHdpZHRoOjc1MHB4O1xyXG59XHJcbi5lcngtYWN0aXZhdGlvbi1sYWJlbCB7XHJcbiAgICBmbG9hdDogbGVmdDtcclxuICAgIHBhZGRpbmctcmlnaHQ6IDEwcHg7XHJcbn1cclxuXHJcbi5idG4tc3BhY2luZ3tcclxuICAgIG1hcmdpbi1sZWZ0OjIwcHg7XHJcbn1cclxuXHJcblxyXG4udXNlci1hY3RpdmF0aW9uLWNhcHRjaGEtY29udHJvbC1zcGFjaW5nIHtcclxuICAgIHBhZGRpbmctbGVmdDogNjhweDtcclxufSJdfQ== */\"","module.exports = \"<form #userActivationForm=\\\"ngForm\\\" (ngSubmit)=\\\"activateUser(userActivationForm)\\\">\\r\\n    <div class=\\\"modal-backdrop fade in\\\" [style.display]=\\\"ShowModal ? 'block' : 'none'\\\"></div>\\r\\n    <div *ngIf=\\\"ShowModal\\\">\\r\\n        <div class=\\\"modal\\\" id=\\\"mdlUserActivation\\\" [style.display]=\\\"'block'\\\" role=\\\"dialog\\\" [style.top]=\\\"'30%'\\\">\\r\\n            <div class=\\\"modal-dialog user-activation-dialog-size\\\">\\r\\n                <div class=\\\"modal-content\\\">\\r\\n                    <div class=\\\"reg-overlayTitle\\\" id=\\\"divTitle\\\">\\r\\n                        Activate Profile\\r\\n                    </div>\\r\\n                    <div class=\\\"modal-body\\\">\\r\\n                        <div id=\\\"erx-form-row\\\">\\r\\n                            Please enter the activation code provided by an Administrator.\\r\\n                        </div>\\r\\n                        <div class=\\\"erx-form-row\\\">\\r\\n                            <span class=\\\"erx-form-label\\\">\\r\\n                                <label>Activation Code</label>\\r\\n                            </span>\\r\\n                            <span class=\\\"erx-form-input\\\">\\r\\n                                <span class=\\\"highlight-star erx-form-star-position\\\">*</span>\\r\\n                                <input id=\\\"txtActivationCode\\\" name=\\\"txtActivationCode\\\" #txtActivationCode=\\\"ngModel\\\" class=\\\"input-medium\\\" required [(ngModel)]=\\\"activationCodeModel.ActivationCode\\\" />\\r\\n                                <span *ngIf=\\\"txtActivationCode.invalid && (txtActivationCode.dirty || txtActivationCode.touched)\\\">\\r\\n                                    <span id=\\\"requiredActivationCodeError\\\" *ngIf=\\\"txtActivationCode.errors.required\\\" class=\\\"validation-color\\\">\\r\\n                                        Activation code is required.\\r\\n                                    </span>\\r\\n                                    <span id=\\\"alreadyUsedActivationCodeError\\\" *ngIf=\\\"!txtActivationCode.errors.required && txtActivationCode.errors.used\\\" class=\\\"validation-color\\\">\\r\\n                                        Activation code is not valid or has already been used.\\r\\n                                    </span>\\r\\n                                </span>\\r\\n                            </span>\\r\\n                        </div>\\r\\n                        <div class=\\\"erx-form-row user-activation-captcha-control-spacing\\\">\\r\\n                            <show-captcha #captchaControl></show-captcha>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"reg-overlayFooter\\\">\\r\\n                        <button class=\\\"button-style\\\"  type=\\\"submit\\\" name=\\\"btnActivate\\\" id=\\\"btnActivate\\\">Activate</button>\\r\\n                        <button type=\\\"button\\\" class=\\\"button-style btn-spacing\\\"  data-dismiss=\\\"modal\\\" (click)=\\\"hide()\\\">Cancel</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\\r\\n<link-existing-account-template #linkExistingAccountControl></link-existing-account-template>\"","﻿import { Component, Input,ViewChild } from '@angular/core';\r\nimport { ShowCaptchaComponent } from '../../show-captcha/show-captcha.component'\r\nimport { LinkExistingAccount } from '../link-existing-account/link-existing-account-component'\r\nimport { ActivationCodeService } from '../../../service/activation-code.service'\r\nimport { Router } from '@angular/router';\r\nimport { Workflow } from '../link-account-request-model'\r\nimport { NgForm } from '@angular/forms';\r\nimport { CaptchaModel } from '../../show-captcha/show-captcha.model';\r\nimport { ActivationCodeModel, ValidateActivationCodeModel } from '../activation-code.model';\r\n\r\n@Component({\r\n    selector: 'user-activation-popup',\r\n    templateUrl: './user-activation-popup.component.html',\r\n    styleUrls: ['./user-activation-popup.component.css']\r\n})\r\nexport class UserActivationPopup  {\r\n    @ViewChild('captchaControl') captchaControl: ShowCaptchaComponent;\r\n    @ViewChild('linkExistingAccountControl') linkedAccount: LinkExistingAccount;\r\n    activationCodeModel: ActivationCodeModel = new ActivationCodeModel();\r\n    ShowModal: boolean;\r\n    WorkflowType: Workflow;\r\n    ShowLinkedAccount: boolean;\r\n\r\n    isValidCaptcha: boolean = false;\r\n\r\n    constructor(private activationService: ActivationCodeService, private router: Router) {\r\n    }\r\n\r\n    isUserActivationFormValid(data: any) {\r\n        this.markAllControlAsTouched(data);\r\n        this.getCaptchaDetails();\r\n        return data.valid\r\n            && this.isValidCaptcha;\r\n    }\r\n\r\n    markAllControlAsTouched(data: any) {\r\n        Object.keys(data.controls).forEach(field => {\r\n            const control = data.controls[field];\r\n            control.markAsTouched({ onlySelf: true });\r\n        })\r\n    }\r\n\r\n    activateUser(activationForm: any) {        \r\n        if (this.isUserActivationFormValid(activationForm)) {\r\n            this.activationService.validateActivationCode(this.activationCodeModel).subscribe((validateActivationCodeModel: ValidateActivationCodeModel) => {\r\n                if (validateActivationCodeModel.IsValid) {\r\n                    activationForm.controls[\"txtActivationCode\"].setErrors(null);\r\n                    this.ShowModal = false;\r\n                    if (this.ShowLinkedAccount) {\r\n                        this.showLinkedAccountPopup();\r\n                    }\r\n                    else {\r\n                        this.router.navigate([\"register/createAccount\"]);\r\n                    }\r\n                }\r\n                else {\r\n                    if (!validateActivationCodeModel.IsValidCaptcha) {\r\n                        this.captchaControl.ShowInValidCaptchaError = true;\r\n                    }\r\n                    else {\r\n                        if (activationForm.controls[\"txtActivationCode\"].errors == null) {\r\n                            activationForm.controls[\"txtActivationCode\"].setErrors({\r\n                                \"used\": \"invalid\"\r\n                            });\r\n                        }\r\n                    }\r\n                    this.ShowModal = true;\r\n                }\r\n            });\r\n        }\r\n    }\r\n    hide() {\r\n        this.activationCodeModel = new ActivationCodeModel();\r\n        this.ShowModal = false;\r\n    }\r\n    showLinkedAccountPopup()\r\n    {\r\n        this.linkedAccount.IsLinkedUser = true;    \r\n    }\r\n\r\n    getCaptchaDetails() {\r\n        let captchaModel: CaptchaModel;\r\n        captchaModel = this.captchaControl.GetCaptchaDetails()\r\n        this.activationCodeModel.CaptchaText = captchaModel.captchaText;\r\n        this.isValidCaptcha = captchaModel.isValid;\r\n    }\r\n}\r\n","module.exports = \".activation-container {\\r\\n    display: flex;\\r\\n    flex-flow: row wrap;\\r\\n    justify-content: center;\\r\\n    padding: 45px;\\r\\n}\\r\\n\\r\\n.activation-card {\\r\\n    float: left;\\r\\n    width: 45%;\\r\\n    min-width: 400px;\\r\\n    margin: 10px;\\r\\n    text-align: center;\\r\\n    padding: 15px 0px;\\r\\n    border-radius: 10px;\\r\\n    border: solid;\\r\\n    border-color: #5a5353;\\r\\n    border-width: thin;\\r\\n    background-color: #ffffff;\\r\\n}\\r\\n\\r\\n.activation-card-header {\\r\\n    margin: 0;\\r\\n    padding-bottom: 20px;\\r\\n}\\r\\n\\r\\n.activation-header-title {\\r\\n    font-size: 19px;\\r\\n    font-weight: bold;\\r\\n    color: #5a5353;\\r\\n    padding-top: 13px;\\r\\n    text-align: center;\\r\\n    height: 50px;\\r\\n}\\r\\n\\r\\n.activation-card-body {\\r\\n    font-weight: 400;\\r\\n    height: 100px;\\r\\n    font-size: 14px;\\r\\n    padding-left: 10px;\\r\\n    padding-right: 10px;\\r\\n}\\r\\n\\r\\n.activation-card-row {\\r\\n    height: 50px;\\r\\n}\\r\\n\\r\\n.activationText {\\r\\n    font-style: italic;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNQQVJlZ2lzdHJhdGlvbi9zcmMvYXBwL3JlZ2lzdHJhdGlvbi9hY3RpdmF0ZS11c2VyL3VzZXItYWN0aXZhdGlvbi91c2VyLWFjdGl2YXRpb24uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIsdUJBQXVCO0lBQ3ZCLGFBQWE7QUFDakI7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsVUFBVTtJQUNWLGdCQUFnQjtJQUNoQixZQUFZO0lBQ1osa0JBQWtCO0lBQ2xCLGlCQUFpQjtJQUNqQixtQkFBbUI7SUFDbkIsYUFBYTtJQUNiLHFCQUFxQjtJQUNyQixrQkFBa0I7SUFDbEIseUJBQXlCO0FBQzdCOztBQUVBO0lBQ0ksU0FBUztJQUNULG9CQUFvQjtBQUN4Qjs7QUFFQTtJQUNJLGVBQWU7SUFDZixpQkFBaUI7SUFDakIsY0FBYztJQUNkLGlCQUFpQjtJQUNqQixrQkFBa0I7SUFDbEIsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLGdCQUFnQjtJQUNoQixhQUFhO0lBQ2IsZUFBZTtJQUNmLGtCQUFrQjtJQUNsQixtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksa0JBQWtCO0FBQ3RCIiwiZmlsZSI6IlNQQVJlZ2lzdHJhdGlvbi9zcmMvYXBwL3JlZ2lzdHJhdGlvbi9hY3RpdmF0ZS11c2VyL3VzZXItYWN0aXZhdGlvbi91c2VyLWFjdGl2YXRpb24uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5hY3RpdmF0aW9uLWNvbnRhaW5lciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1mbG93OiByb3cgd3JhcDtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgcGFkZGluZzogNDVweDtcclxufVxyXG5cclxuLmFjdGl2YXRpb24tY2FyZCB7XHJcbiAgICBmbG9hdDogbGVmdDtcclxuICAgIHdpZHRoOiA0NSU7XHJcbiAgICBtaW4td2lkdGg6IDQwMHB4O1xyXG4gICAgbWFyZ2luOiAxMHB4O1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgcGFkZGluZzogMTVweCAwcHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gICAgYm9yZGVyOiBzb2xpZDtcclxuICAgIGJvcmRlci1jb2xvcjogIzVhNTM1MztcclxuICAgIGJvcmRlci13aWR0aDogdGhpbjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XHJcbn1cclxuXHJcbi5hY3RpdmF0aW9uLWNhcmQtaGVhZGVyIHtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIHBhZGRpbmctYm90dG9tOiAyMHB4O1xyXG59XHJcblxyXG4uYWN0aXZhdGlvbi1oZWFkZXItdGl0bGUge1xyXG4gICAgZm9udC1zaXplOiAxOXB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICBjb2xvcjogIzVhNTM1MztcclxuICAgIHBhZGRpbmctdG9wOiAxM3B4O1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgaGVpZ2h0OiA1MHB4O1xyXG59XHJcblxyXG4uYWN0aXZhdGlvbi1jYXJkLWJvZHkge1xyXG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICAgIGhlaWdodDogMTAwcHg7XHJcbiAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDEwcHg7XHJcbiAgICBwYWRkaW5nLXJpZ2h0OiAxMHB4O1xyXG59XHJcblxyXG4uYWN0aXZhdGlvbi1jYXJkLXJvdyB7XHJcbiAgICBoZWlnaHQ6IDUwcHg7XHJcbn1cclxuXHJcbi5hY3RpdmF0aW9uVGV4dCB7XHJcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XHJcbn1cclxuXHJcblxyXG4iXX0= */\"","module.exports = \"<div id=\\\"activation-title\\\" class=\\\"title-bar title-bar-heading branded-background-color branded-font-color\\\">\\r\\n    Welcome to the Veradigm Security Account Activation Wizard!\\r\\n</div>\\r\\n<div *ngIf=\\\"workflow\\\" class=\\\"activation-container\\\">\\r\\n    <div id=\\\"divEnrollNow\\\" class=\\\"activation-card\\\">\\r\\n        <div class=\\\"activation-card-header\\\">\\r\\n            <span class=\\\"activation-header-title\\\">Enroll Now</span>\\r\\n        </div>\\r\\n        <div class=\\\"activation-card-body\\\">\\r\\n            <div class=\\\"activation-card-row\\\">\\r\\n                <span ID=\\\"lblEnrollDescription\\\">Please use this option to create a new Veradigm Security Account.</span>\\r\\n            </div>\\r\\n            <div class=\\\"activation-card-row\\\">\\r\\n                <span class=\\\"activationText\\\" id=\\\"lblEnrollActivation\\\" *ngIf=\\\"isActivationCodeVisible\\\">(Activation code is required).</span>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div>\\r\\n            <button id=\\\"btnSignUp\\\" Text=\\\"Sign Up\\\" class=\\\"button-style\\\" (click)=\\\"OpenNewUserActivationPopup()\\\">Sign Up</button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div id=\\\"divLinkAccounts\\\" class=\\\"activation-card\\\">\\r\\n        <div class=\\\"activation-card-header\\\">\\r\\n            <span class=\\\"activation-header-title\\\">Link Accounts</span>\\r\\n        </div>\\r\\n        <div class=\\\"activation-card-body\\\">\\r\\n            <div class=\\\"activation-card-row\\\">\\r\\n                <span id=\\\"Label1\\\">Please use this option to use an existing Veradigm Security Account Login if you have one.</span>\\r\\n            </div>\\r\\n            <div class=\\\"activation-card-row\\\">\\r\\n                <span class=\\\"activationText\\\" id=\\\"lblLinkActivation\\\" *ngIf=\\\"isLinkActivationCodeVisible\\\">(Activation code is required).</span>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div>\\r\\n            <button id=\\\"btnLinkAccounts\\\" class=\\\"button-style\\\" (click)=\\\"OpenLinkAccountActivationPopup()\\\">Link Accounts</button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<user-activation-popup #userActivationModalPopup></user-activation-popup>\\r\\n\\r\\n\\r\\n\"","﻿import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { UserActivationPopup } from '../user-activation-popup/user-activation-popup.component';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ActivationCodeService } from '../../../service/activation-code.service'\r\nimport { Workflow } from '../link-account-request-model'\r\n\r\n@Component({\r\n    selector: 'app-user-activation',\r\n    templateUrl: './user-activation.component.html',\r\n    styleUrls: ['./user-activation.component.css']\r\n})\r\nexport class UserActivationComponent implements OnInit {\r\n    @ViewChild('userActivationModalPopup') userActivationModalPopup: UserActivationPopup;\r\n    appType: string;\r\n    workflow: Workflow;\r\n    isActivationCodeVisible: boolean = true;\r\n    isLinkActivationCodeVisible: boolean = true;\r\n    \r\n    acivationCode: string;\r\n    \r\n    constructor(private route: ActivatedRoute,\r\n        private activationService: ActivationCodeService,\r\n        private router: Router) {       \r\n    }\r\n\r\n    ngOnInit() {\r\n        this.appType = this.route.snapshot.queryParamMap.get('App');\r\n        this.activationService.intializeWorkFlow({ AppType : this.appType }).subscribe((workflow: Workflow) => {\r\n            this.workflow = workflow;\r\n            if (this.workflow == Workflow.Sso) {\r\n                this.isActivationCodeVisible = false;\r\n                this.isLinkActivationCodeVisible = false;\r\n            }\r\n        });\r\n    }\r\n\r\n    OpenNewUserActivationPopup() {\r\n        if (this.workflow == Workflow.Sso) {\r\n            this.userActivationModalPopup.ShowModal = false;\r\n            this.userActivationModalPopup.WorkflowType = this.workflow;\r\n            this.userActivationModalPopup.ShowLinkedAccount = false;\r\n            this.router.navigate([\"register/createAccount\"]);\r\n        }\r\n        else {\r\n            this.userActivationModalPopup.ShowModal = true;\r\n            this.userActivationModalPopup.WorkflowType = this.workflow;\r\n            this.userActivationModalPopup.ShowLinkedAccount = false;\r\n        }\r\n    }\r\n    OpenLinkAccountActivationPopup() {\r\n        if (this.workflow == Workflow.Sso) {\r\n            this.userActivationModalPopup.ShowLinkedAccount = true;\r\n            this.userActivationModalPopup.ShowModal = false;   \r\n            this.userActivationModalPopup.WorkflowType = this.workflow;\r\n            this.userActivationModalPopup.showLinkedAccountPopup();\r\n        }\r\n        else {           \r\n            this.userActivationModalPopup.ShowModal = true;\r\n            this.userActivationModalPopup.ShowLinkedAccount = true;\r\n            this.userActivationModalPopup.WorkflowType = this.workflow;\r\n        }\r\n    }\r\n\r\n}","﻿import { CanActivate } from \"@angular/router/src/utils/preactivation\";\r\nimport { RouterStateSnapshot, UrlTree, ActivatedRouteSnapshot, Router, Route, NavigationExtras } from \"@angular/router\";\r\nimport { Observable } from \"rxjs\";\r\nimport { Injectable, Inject } from \"@angular/core\";\r\nimport { map, catchError } from 'rxjs/operators';\r\n\r\nimport { RegistrationService } from \"../service/registration.service\";\r\nimport { RegistrationRoutes } from \"./registration-routing.module\";\r\nimport { MessageService } from \"../service/message.service\";\r\nimport { HttpErrorResponse } from \"@angular/common/http\";\r\n@Injectable()\r\nexport class CanActivateRegistrationStep implements CanActivate {\r\n    path: ActivatedRouteSnapshot[];\r\n    route: ActivatedRouteSnapshot;\r\n    readonly defaultRoute = `/${RegistrationRoutes.default}`;\r\n\r\n    constructor(private registrationService: RegistrationService,\r\n        private router: Router,\r\n        @Inject('window') private window: any,\r\n        private messageService: MessageService) {\r\n\r\n    }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, routerStateSnapshot: RouterStateSnapshot): Observable<boolean | UrlTree>\r\n        | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n\r\n        const currentState = this.router.getCurrentNavigation().extras.state;\r\n\r\n\r\n        if (currentState?.authentication == false && routerStateSnapshot.url.indexOf(`/${RegistrationRoutes.createuser}`) > -1)\r\n            return true;\r\n\r\n        return this.registrationService\r\n            .getRegistrantStatus(routerStateSnapshot.url == `/${RegistrationRoutes.createlicense}`)\r\n            .pipe(map((registrantContext: RegistrantContext) => {\r\n                if (!registrantContext) {\r\n                    throw new HttpErrorResponse({ status: 401, statusText: \"not authenticated\" });\r\n                }\r\n                return this.interpretRegistantStatus(routerStateSnapshot.url, registrantContext);\r\n            }), catchError((err, caught) => {\r\n\r\n                let url = '/register';\r\n                let naviagtionExtras: NavigationExtras = { queryParamsHandling: \"merge\" };\r\n                \r\n\r\n                if (err?.status == 401 && routerStateSnapshot.url.indexOf(`/${RegistrationRoutes.createuser}`) > -1) {\r\n                    url = routerStateSnapshot.url;\r\n                    let tempState = {\r\n                        state: { ...currentState, ...{ authentication: false } }\r\n                    };\r\n                    naviagtionExtras = { ...naviagtionExtras, ...tempState };\r\n                    return this.router.navigateByUrl(url, naviagtionExtras);\r\n                }\r\n\r\n                if (err?.status == 401) {\r\n                    this.messageService.notify(\"Not authorized\");\r\n                }\r\n                return Promise.resolve(false);\r\n\r\n            }));\r\n\r\n    }\r\n\r\n    private registrantRouteDecoder = (registrantContext: RegistrantContext, requestedRoute: string): string => {\r\n\r\n        if (registrantContext.IsLOA3StatusConfirmed)\r\n            return `/${RegistrationRoutes.createlicense}`;\r\n\r\n        if (registrantContext.IsUserCreated || registrantContext.IseRxUser)\r\n            return `/${RegistrationRoutes.welcome}`; //redirect to csp \r\n\r\n        if (!registrantContext.IsUserCreated)\r\n            return `/${RegistrationRoutes.createuser}`;//Redirect to create user page.\r\n\r\n        return requestedRoute;\r\n    }\r\n\r\n    readonly handlers: Dictionary<(regitratContext: RegistrantContext, requestedRoute: string) => string> = {\r\n        [`/${RegistrationRoutes.createuser}`]: this.registrantRouteDecoder,\r\n        [`/${RegistrationRoutes.welcome}`]: this.registrantRouteDecoder,\r\n        [`/${RegistrationRoutes.createlicense}`]: this.registrantRouteDecoder\r\n\r\n    };\r\n\r\n    public interpretRegistantStatus(command: string, regitratContext: RegistrantContext): UrlTree | boolean {\r\n        if (!this.containsHandler(command))\r\n            return this.router.parseUrl(this.defaultRoute);\r\n        let interpretedRoute = this.handlers[command](regitratContext, command);\r\n\r\n        if (interpretedRoute === command)\r\n            return true;\r\n        if (!this.isKnownRoute(interpretedRoute)) {\r\n            this.window.location.href = interpretedRoute;\r\n            return false;\r\n        }\r\n\r\n        return this.router.parseUrl(interpretedRoute);\r\n    }\r\n\r\n    private isKnownRoute(url:string): boolean {\r\n        let routes: Route[] = this.router.config;\r\n        //Note:url contains starting /.. hence the substring\r\n        return routes && routes.length > 0 && routes.find(x => x.path.indexOf(url.substring(1)) > -1) != undefined;\r\n    }\r\n\r\n    private containsHandler(key: string) {\r\n        return this.handlers[key] != null;\r\n    }\r\n}\r\n\r\ninterface Dictionary<T> {\r\n    [Key: string]: T;\r\n}\r\n\r\n\r\nexport interface RegistrantContext {\r\n    IsUserCreated: boolean;//Is False- redirect to create user.\r\n    IsLOA3StatusConfirmed: boolean;//* Is False & IsUserCreated - redirect to CSP page//Is True - Redirect to Welcome page \r\n    IseRxUser: boolean;// Is true - redirect to welcome page\r\n    RedirectUrl: string;\r\n    CspUrl: string;\r\n}","module.exports = \".reg-error-message {\\r\\n    color: #a94442;\\r\\n    background-color: #f2dede;\\r\\n    border-color: #ebccd1;\\r\\n    padding: .9em;\\r\\n    margin-bottom: 20px;\\r\\n    border: 1px solid transparent;\\r\\n    border-radius: 4px;\\r\\n    margin: 1em;\\r\\n}\\r\\n\\r\\n    .reg-error-message p {\\r\\n        max-width: 60%;\\r\\n        line-height: 2em;\\r\\n    }\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNQQVJlZ2lzdHJhdGlvbi9zcmMvYXBwL3JlZ2lzdHJhdGlvbi9lcnJvci1yZWdpc3RyYXRpb24vZXJyb3ItcmVnaXN0cmF0aW9uLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxjQUFjO0lBQ2QseUJBQXlCO0lBQ3pCLHFCQUFxQjtJQUNyQixhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLDZCQUE2QjtJQUM3QixrQkFBa0I7SUFDbEIsV0FBVztBQUNmOztJQUVJO1FBQ0ksY0FBYztRQUNkLGdCQUFnQjtJQUNwQiIsImZpbGUiOiJTUEFSZWdpc3RyYXRpb24vc3JjL2FwcC9yZWdpc3RyYXRpb24vZXJyb3ItcmVnaXN0cmF0aW9uL2Vycm9yLXJlZ2lzdHJhdGlvbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnJlZy1lcnJvci1tZXNzYWdlIHtcclxuICAgIGNvbG9yOiAjYTk0NDQyO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2YyZGVkZTtcclxuICAgIGJvcmRlci1jb2xvcjogI2ViY2NkMTtcclxuICAgIHBhZGRpbmc6IC45ZW07XHJcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgdHJhbnNwYXJlbnQ7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgICBtYXJnaW46IDFlbTtcclxufVxyXG5cclxuICAgIC5yZWctZXJyb3ItbWVzc2FnZSBwIHtcclxuICAgICAgICBtYXgtd2lkdGg6IDYwJTtcclxuICAgICAgICBsaW5lLWhlaWdodDogMmVtO1xyXG4gICAgfVxyXG4iXX0= */\"","module.exports = \"<div class=\\\"reg-error-message\\\" *ngIf=\\\"messageService.message && messageService.message.length>0\\\">\\r\\n    <div class=\\\"message\\\"><p>{{messageService.message}}</p></div>\\r\\n</div>\\r\\n<div class=\\\"reg-error-message\\\" *ngIf=\\\"!messageService.message || messageService!.message!.length<=0\\\">\\r\\n    <div class=\\\"message\\\"><p>{{defaultErrorMessage}}</p></div>\\r\\n</div>\"","﻿import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { MessageService } from '../../service/message.service';\r\n@Component({\r\n    selector: 'error-registration',\r\n    templateUrl: './error-registration.component.html',\r\n    styleUrls: ['./error-registration.component.css']\r\n})\r\n\r\nexport class ErrorRegistrationComponent {\r\n    private defaultErrorMessage = \"Something went wrong while showing this page\";\r\n    constructor(public messageService: MessageService) {\r\n\r\n    }\r\n}","module.exports = \".license-creation-form-label-spacing {\\r\\n    width: 150px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNQQVJlZ2lzdHJhdGlvbi9zcmMvYXBwL3JlZ2lzdHJhdGlvbi9saWNlbnNlLWNyZWF0aW9uL2xpY2Vuc2UtY3JlYXRpb24uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFlBQVk7QUFDaEIiLCJmaWxlIjoiU1BBUmVnaXN0cmF0aW9uL3NyYy9hcHAvcmVnaXN0cmF0aW9uL2xpY2Vuc2UtY3JlYXRpb24vbGljZW5zZS1jcmVhdGlvbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmxpY2Vuc2UtY3JlYXRpb24tZm9ybS1sYWJlbC1zcGFjaW5nIHtcclxuICAgIHdpZHRoOiAxNTBweDtcclxufVxyXG4iXX0= */\"","module.exports = \"<form #licenseInfoForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(licenseInfoForm)\\\">\\r\\n    <div id=\\\"license-creation-title\\\" class=\\\"title-bar title-bar-heading branded-background-color branded-font-color\\\">\\r\\n        Practice Primary Location Information\\r\\n    </div>\\r\\n        <div class=\\\"erx-form-content-offset font-color-dimmed-black\\\">\\r\\n            <div class=\\\"erx-form-sub-heading font-setting-bold font-uppercase\\\">\\r\\n                Practice Details\\r\\n            </div>\\r\\n            <div>\\r\\n                <div class=\\\"erx-form-row\\\">\\r\\n                    <span class=\\\"erx-form-label license-creation-form-label-spacing\\\">\\r\\n                        <label><span class=\\\"highlight-star erx-form-star-position\\\">*</span>Practice Name</label>\\r\\n                    </span>\\r\\n                    <span class=\\\"erx-form-input\\\">\\r\\n                        <input id=\\\"txtSiteName\\\"\\r\\n                               type=\\\"text\\\"\\r\\n                               name=\\\"SiteName\\\"\\r\\n                               maxlength=\\\"70\\\"\\r\\n                               class=\\\"input-large\\\"\\r\\n                               required\\r\\n                               [(ngModel)]=\\\"licenseInfo.PracticeName\\\"\\r\\n                               #siteName=\\\"ngModel\\\" />\\r\\n\\r\\n                        <span *ngIf=\\\"siteName.invalid && (siteName.dirty || siteName.touched)\\\">\\r\\n                            <span *ngIf=\\\"siteName.errors.required\\\"\\r\\n                                  id=\\\"siteNameMandatoryError\\\" class=\\\"validation-color\\\">\\r\\n                                Practice Name is required.\\r\\n                            </span>\\r\\n                        </span>\\r\\n                    </span>\\r\\n                </div>\\r\\n                <div class=\\\"erx-form-row\\\">\\r\\n                    <span class=\\\"erx-form-label license-creation-form-label-spacing\\\">\\r\\n                        <label><span class=\\\"highlight-star erx-form-star-position\\\">*</span>Address</label>\\r\\n                    </span>\\r\\n                    <span class=\\\"erx-form-input\\\">\\r\\n                        <input id=\\\"txtAddress1\\\"\\r\\n                               type=\\\"text\\\"\\r\\n                               name=\\\"Address1\\\"\\r\\n                               maxlength=\\\"35\\\"\\r\\n                               class=\\\"input-large\\\"\\r\\n                               required\\r\\n                               [(ngModel)]=\\\"licenseInfo.Address\\\"\\r\\n                               #address1=\\\"ngModel\\\" />\\r\\n\\r\\n                        <span *ngIf=\\\"address1.invalid && (address1.dirty || address1.touched)\\\">\\r\\n                            <span *ngIf=\\\"address1.errors.required\\\"\\r\\n                                  id=\\\"address1MandatoryError\\\" class=\\\"validation-color\\\">\\r\\n                                Address is required.\\r\\n                            </span>\\r\\n                        </span>\\r\\n                    </span>\\r\\n                </div>\\r\\n                <div class=\\\"erx-form-row\\\">\\r\\n                    <span class=\\\"erx-form-label license-creation-form-label-spacing\\\">\\r\\n                        <label>Address 2</label>\\r\\n                    </span>\\r\\n                    <span class=\\\"erx-form-input\\\">\\r\\n                        <input id=\\\"txtAddress2\\\"\\r\\n                               type=\\\"text\\\"\\r\\n                               name=\\\"Address2\\\"\\r\\n                               maxlength=\\\"35\\\"\\r\\n                               class=\\\"input-large\\\"\\r\\n                               [(ngModel)]=\\\"licenseInfo.Address2\\\" />\\r\\n                    </span>\\r\\n                </div>\\r\\n                <div class=\\\"erx-form-row\\\">\\r\\n                    <span class=\\\"erx-form-label license-creation-form-label-spacing\\\">\\r\\n                        <label><span class=\\\"highlight-star erx-form-star-position\\\">*</span>City</label>\\r\\n                    </span>\\r\\n                    <span class=\\\"erx-form-input\\\">\\r\\n                        <input id=\\\"txtCity\\\"\\r\\n                               type=\\\"text\\\"\\r\\n                               name=\\\"City\\\"\\r\\n                               maxlength=\\\"20\\\"\\r\\n                               class=\\\"input-large\\\"\\r\\n                               required\\r\\n                               [pattern]=\\\"cityPattern\\\"\\r\\n                               [(ngModel)]=\\\"licenseInfo.City\\\"\\r\\n                               #city=\\\"ngModel\\\" />\\r\\n\\r\\n                        <span *ngIf=\\\"city.invalid && (city.dirty || city.touched)\\\">\\r\\n                            <span *ngIf=\\\"city.errors\\\"\\r\\n                                  id=\\\"cityMandatoryError\\\" class=\\\"validation-color\\\">\\r\\n                                Enter a valid city.\\r\\n                            </span>\\r\\n                        </span>\\r\\n                    </span>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"erx-form-row\\\">\\r\\n                    <span class=\\\"erx-form-label license-creation-form-label-spacing\\\">\\r\\n                        <label><span class=\\\"highlight-star erx-form-star-position\\\">*</span>State</label>\\r\\n                    </span>\\r\\n                    <span class=\\\"erx-form-input\\\">\\r\\n                        <select id=\\\"ddlState\\\"\\r\\n                                type=\\\"text\\\"\\r\\n                                name=\\\"State\\\"\\r\\n                                class=\\\"input-medium\\\"\\r\\n                                required\\r\\n                                [(ngModel)]=\\\"licenseInfo.State\\\"\\r\\n                                #state=\\\"ngModel\\\">\\r\\n                            <option *ngFor=\\\"let item of stateList\\\" [value]=\\\"item.state\\\">\\r\\n                                {{item.description}}\\r\\n                            </option>\\r\\n                        </select>\\r\\n                        <span *ngIf=\\\"state.invalid && (state.dirty || state.touched)\\\">\\r\\n                            <span *ngIf=\\\"state.errors.required\\\"\\r\\n                                  id=\\\"cityMandatoryError\\\" class=\\\"validation-color\\\">\\r\\n                                Select a valid state.\\r\\n                            </span>\\r\\n                        </span>\\r\\n                    </span>\\r\\n                </div>\\r\\n                <div class=\\\"erx-form-row\\\">\\r\\n                    <span class=\\\"erx-form-label license-creation-form-label-spacing\\\">\\r\\n                        <label><span class=\\\"highlight-star erx-form-star-position\\\">*</span>ZIP Code</label>\\r\\n                    </span>\\r\\n                    <span class=\\\"erx-form-input\\\">\\r\\n                        <input id=\\\"txtZip\\\"\\r\\n                               type=\\\"text\\\"\\r\\n                               name=\\\"Zip\\\"\\r\\n                               maxlength=\\\"9\\\"\\r\\n                               class=\\\"input-small\\\"\\r\\n                               required\\r\\n                               [pattern]=\\\"zipCodePattern\\\"\\r\\n                               [(ngModel)]=\\\"licenseInfo.Zipcode\\\"\\r\\n                               #zip=\\\"ngModel\\\" />\\r\\n\\r\\n                        <span *ngIf=\\\"zip.invalid && (city.dirty || zip.touched)\\\">\\r\\n                            <span *ngIf=\\\"zip.errors.required\\\"\\r\\n                                  id=\\\"zipMandatoryError\\\" class=\\\"validation-color\\\">\\r\\n                                Enter a valid ZIP Code.\\r\\n                            </span>\\r\\n                            <span id=\\\"zipCodePatternError\\\" *ngIf=\\\"zip.errors.pattern\\\" class=\\\"validation-color\\\">\\r\\n                                Enter a valid 5 or 9 digit ZIP code\\r\\n                            </span>\\r\\n                        </span>\\r\\n                    </span>\\r\\n                </div>\\r\\n                <div class=\\\"erx-form-row\\\">\\r\\n                    <span class=\\\"erx-form-label license-creation-form-label-spacing\\\">\\r\\n                        <label><span class=\\\"highlight-star erx-form-star-position\\\">*</span>Phone Number</label>\\r\\n                    </span>\\r\\n                    <span class=\\\"erx-form-input\\\">\\r\\n                        <input id=\\\"txtPhone\\\"\\r\\n                               type=\\\"text\\\"\\r\\n                               name=\\\"Phone\\\"\\r\\n                               maxlength=\\\"14\\\"\\r\\n                               class=\\\"input-small\\\"\\r\\n                               required\\r\\n                               [pattern]=\\\"phoneFaxPattern\\\"\\r\\n                               [(ngModel)]=\\\"licenseInfo.PhoneNumber\\\"\\r\\n                               #phone=\\\"ngModel\\\" />\\r\\n\\r\\n                        <span *ngIf=\\\"phone.invalid && (phone.dirty || phone.touched)\\\">\\r\\n                            <span *ngIf=\\\"phone.errors\\\"\\r\\n                                  id=\\\"phoneMandatoryError\\\" class=\\\"validation-color\\\">\\r\\n                                Enter a valid phone number.\\r\\n                            </span>\\r\\n                        </span>\\r\\n                    </span>\\r\\n                </div>\\r\\n                <div class=\\\"erx-form-row\\\">\\r\\n                    <span class=\\\"erx-form-label license-creation-form-label-spacing\\\">\\r\\n                        <label><span class=\\\"highlight-star erx-form-star-position\\\">*</span>Fax Number</label>\\r\\n                    </span>\\r\\n                    <span class=\\\"erx-form-input\\\">\\r\\n                        <input id=\\\"txtFax\\\"\\r\\n                               type=\\\"text\\\"\\r\\n                               name=\\\"Fax\\\"\\r\\n                               maxlength=\\\"14\\\"\\r\\n                               class=\\\"input-small\\\"\\r\\n                               required\\r\\n                               [pattern]=\\\"phoneFaxPattern\\\"\\r\\n                               [(ngModel)]=\\\"licenseInfo.FaxNumber\\\"\\r\\n                               #fax=\\\"ngModel\\\" />\\r\\n\\r\\n                        <span *ngIf=\\\"fax.invalid && (fax.dirty || fax.touched)\\\">\\r\\n                            <span *ngIf=\\\"fax.errors\\\"\\r\\n                                  id=\\\"faxMandatoryError\\\" class=\\\"validation-color\\\">\\r\\n                                Enter a valid fax number\\r\\n                            </span>\\r\\n                        </span>\\r\\n                    </span>\\r\\n                </div>\\r\\n                <div class=\\\"erx-form-row\\\">\\r\\n                    <button type=\\\"submit\\\" id=\\\"btnSaveSite\\\" class=\\\"button-style\\\">\\r\\n                        Save Practice\\r\\n                    </button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n</form>\\r\\n\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { LicenseInfo, StateInfo } from '../license-creation/license-creation.model'\r\nimport { LicenseCreateService } from '../../service/license-create.service';\r\nimport { UserCreateService } from '../../service/user-create.service';\r\nimport { filter } from 'rxjs/operators';\r\nimport { LoaderService } from '../../service/loader.service';\r\n\r\n\r\n@Component({\r\n    selector: 'app-license-creation',\r\n    templateUrl: './license-creation.component.html',\r\n    styleUrls: ['./license-creation.component.css']\r\n})\r\nexport class LicenseCreationComponent implements OnInit {\r\n    constructor(private licenseCreateService: LicenseCreateService,\r\n        private loaderService: LoaderService,\r\n        private userCreateService: UserCreateService,\r\n        @Inject('window') private window: any) { }\r\n    licenseInfo: LicenseInfo = new LicenseInfo();\r\n    stateList: StateInfo[];\r\n    phoneFaxPattern = \"\\\\(?\\\\d{3}\\\\)?-? *\\\\d{3}-? *-?\\\\d{4}\";\r\n    cityPattern = \"^([a-zA-Z]+[\\\\s-'.]{0,20})*\";\r\n    zipCodePattern = \"^(\\\\d{5})(?:\\\\d{4})?$\";\r\n    getStateList() {\r\n        this.userCreateService.getInitialPageData().subscribe(stateList => {\r\n            if (stateList.States != null && stateList.States != undefined) {\r\n                this.stateList = stateList.States as StateInfo[];\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.getStateList();\r\n    }\r\n\r\n    phoneFaxFormatting(phoneFaxNumber: string) {\r\n        return phoneFaxNumber.replace(\" \", \"\").replace(\"(\", \"\").replace(\")\", \"\").replace(\"-\", \"\");\r\n    }\r\n\r\n    onSubmit(formData: any) {\r\n        if (!formData.valid) {\r\n            Object.keys(formData.controls).forEach(field => {\r\n                const control = formData.controls[field];\r\n                control.markAsTouched({ onlySelf: true });\r\n            })\r\n        }\r\n        else {\r\n            this.licenseInfo.PhoneNumber = this.phoneFaxFormatting(this.licenseInfo.PhoneNumber);\r\n            this.licenseInfo.FaxNumber = this.phoneFaxFormatting(this.licenseInfo.FaxNumber);\r\n            this.licenseCreateService\r\n                .updateRegistrantPracticeDetails(this.licenseInfo)\r\n                .pipe(filter((result) => !!result))\r\n                .subscribe((response) => {                \r\n                    this.loaderService.show(true);\r\n                    this.window.open(this.window?.appcontext?.mediator, \"_self\");\r\n                });\r\n        }\r\n    }\r\n\r\n}\r\n","﻿export class LicenseInfo {\r\n    PracticeName : string;\r\n    Address: string;\r\n    Address2: string;\r\n    City: string;\r\n    State: string;\r\n    Zipcode: string;\r\n    PhoneNumber: string;\r\n    FaxNumber: string;\r\n}\r\n\r\nexport class StateInfo {\r\n    State: string;\r\n    Description: string;\r\n}\r\n\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJTUEFSZWdpc3RyYXRpb24vc3JjL2FwcC9yZWdpc3RyYXRpb24vbWF4LXRyeS1mYWlsdXJlLXBvcHVwL21heC10cnktZmFpbHVyZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"modal\\\" id=\\\"myModal\\\" role=\\\"dialog\\\" [style.display]=\\\"'block'\\\" [style.top]=\\\"'25%'\\\">\\r\\n    <div class=\\\"modal-dialog\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n             <div class=\\\"reg-overlayTitle\\\">\\r\\n               User Creation Information\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                User creation is taking longer than usual, please re-login with your created Username ({{shieldUserName}}) after 15 minutes\\r\\n                <br /><br />\\r\\n                You will be now redirected to Login page. Click continue.\\r\\n            </div>\\r\\n            <div class=\\\"reg-overlayFooter\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"button-style\\\" data-dismiss=\\\"modal\\\" (click)=\\\"hide()\\\">Continue</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","﻿import { Component, Input, Inject} from '@angular/core';\r\n@Component({\r\n    selector: 'max-retry-failure-popup',\r\n    templateUrl: './max-try-failure.component.html',\r\n    styleUrls: ['./max-try-failure.component.css']\r\n})\r\nexport class MaxTryFailureComponent{\r\n    @Input() shieldUserName: string;\r\n    constructor(@Inject('window') private window: any) {\r\n      \r\n    }\r\n    hide() {\r\n        this.window.open(this.window?.appcontext?.mediator, \"_self\");\r\n    }\r\n   \r\n}\r\n\r\n\r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SubscriptionComponent } from './subscription/subscription.component';\r\nimport { UserCreationComponent } from './user-creation/user-creation.component';\r\nimport { WelcomePageComponent } from './welcome-page/welcome-page.component';\r\nimport { CanActivateRegistrationStep } from './can-load-registration.guard';\r\nimport { LicenseCreationComponent } from './license-creation/license-creation.component';\r\nimport { ErrorRegistrationComponent } from './error-registration/error-registration.component';\r\nimport { UserActivationComponent } from './activate-user/user-activation/user-activation.component';\r\nimport { AccountCreationComponent } from './account-creation/account-creation.component';\r\nimport { UserCspUpdaterComponent } from './user-csp-updater/user-csp-updater.component';\r\n//import { UserCspUpdaterComponent } from './user-csp-updater/user-csp-updater.component';\r\n\r\nexport const RegistrationRoutes = {\r\n    default: \"register/\",\r\n    subscriptions: \"register/subscriptions\",\r\n    createuser: \"register/createuser\",\r\n    welcome: \"register/welcome\",\r\n    createlicense: \"register/createlicense\",\r\n    error: \"register/error\",\r\n    activateuser: \"register/activateuser\",\r\n    createAccount: \"register/createAccount\",\r\n    usercspupdater: \"register/usercspupdater\"\r\n}\r\n\r\n\r\nexport const registrationRoutes: Routes = [\r\n    { path: 'Register.aspx', redirectTo: RegistrationRoutes.subscriptions },\r\n    { path: 'register', redirectTo: RegistrationRoutes.subscriptions },\r\n    { path: RegistrationRoutes.subscriptions, component: SubscriptionComponent },\r\n    { path: RegistrationRoutes.createuser, component: UserCreationComponent, canActivate: [CanActivateRegistrationStep] },\r\n    { path: RegistrationRoutes.welcome, component: WelcomePageComponent, canActivate: [CanActivateRegistrationStep] },\r\n    { path: RegistrationRoutes.createlicense, component: LicenseCreationComponent, canActivate: [CanActivateRegistrationStep] },\r\n    { path: RegistrationRoutes.error, component: ErrorRegistrationComponent },\r\n    { path: RegistrationRoutes.activateuser, component: UserActivationComponent },\r\n    { path: RegistrationRoutes.createAccount, component: AccountCreationComponent },\r\n    { path: RegistrationRoutes.usercspupdater, component: UserCspUpdaterComponent }\r\n];\r\n\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(registrationRoutes, { enableTracing: false })],\r\n    providers: [CanActivateRegistrationStep],\r\n    exports: [RouterModule]\r\n})\r\nexport class RegistrationRoutingModule { }\r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SubscriptionComponent } from './subscription/subscription.component';\r\nimport { UserCreationComponent } from './user-creation/user-creation.component';\r\nimport { LicenseCreationComponent } from './license-creation/license-creation.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { UserCreateService } from '../service/user-create.service';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { WelcomePageComponent } from '../registration/welcome-page/welcome-page.component';\r\nimport { LicenseCreateService } from '../service/license-create.service';\r\nimport { WelcomeService } from '../service/welcome-service';\r\n\r\nimport { RegistrationRoutingModule } from './registration-routing.module';\r\nimport { ErrorRegistrationComponent } from './error-registration/error-registration.component';\r\nimport { MaxTryFailureComponent } from './max-try-failure-popup/max-try-failure.component';\r\nimport { UserActivationComponent } from '../registration/activate-user/user-activation/user-activation.component';\r\nimport { UserActivationPopup } from '../registration/activate-user/user-activation-popup/user-activation-popup.component';\r\nimport { ShowCaptchaComponent } from '../registration/show-captcha/show-captcha.component';\r\nimport { CaptchaService } from '../service/captcha.service';\r\nimport { UserPasswordComponent } from '../registration/user-password/user-password.component';\r\nimport { UserSecurityQuestionsComponent } from '../registration/user-security-questions/user-security-questions.component';\r\nimport { UserAccountNameComponent } from '../registration/user-account-name/user-account-name.component';\r\nimport { UserExistingAccountComponent } from '../registration/user-existing-account/user-existing-account.component';\r\nimport { ActivationCodeService } from '../service/activation-code.service';\r\nimport { LinkExistingAccount } from '../registration/activate-user/link-existing-account/link-existing-account-component'\r\nimport { AccountCreationComponent } from '../registration/account-creation/account-creation.component';\r\nimport { UserCspUpdaterComponent } from './user-csp-updater/user-csp-updater.component';\r\nimport { LinkAccountConfirmationPopupComponent } from '../registration/activate-user/link-account-confirmation-popup/link-account-confirmation-popup-component'\r\n@NgModule({\r\n    declarations: [SubscriptionComponent,\r\n        UserCreationComponent,\r\n        LicenseCreationComponent,\r\n        WelcomePageComponent,\r\n        ErrorRegistrationComponent,\r\n        MaxTryFailureComponent,\r\n        UserActivationComponent,\r\n        UserActivationPopup,\r\n        ShowCaptchaComponent,\r\n        UserPasswordComponent,\r\n        UserSecurityQuestionsComponent,\r\n        UserAccountNameComponent,\r\n        UserExistingAccountComponent,\r\n        AccountCreationComponent,\r\n        UserCspUpdaterComponent,  \r\n        LinkExistingAccount,\r\n        LinkAccountConfirmationPopupComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule,\r\n        FormsModule,\r\n        RegistrationRoutingModule\r\n    ],\r\n    providers: [\r\n        UserCreateService,\r\n        LicenseCreateService,\r\n        WelcomeService,\r\n        CaptchaService,\r\n        ActivationCodeService\r\n    ]\r\n})\r\nexport class RegistrationModule { }\r\n","module.exports = \".show-captcha-label-group {\\r\\n    float: left;\\r\\n    padding-right: 10px;\\r\\n}\\r\\n.show-captcha-label-item{\\r\\n    text-align:right;\\r\\n}\\r\\n.show-captcha-refresh-img {\\r\\n    cursor: pointer;\\r\\n}\\r\\n.show-captcha-input-group {\\r\\n    display: inline-block;\\r\\n    padding-left: 15px;\\r\\n    position: relative;\\r\\n}\\r\\n.show-captcha-input-item {\\r\\n    text-align: left;\\r\\n}\\r\\n.show-captcha-dimensions {\\r\\n    height: 50px;\\r\\n    width: 200px;\\r\\n}\\r\\n.show-captcha-input-block {\\r\\n    display: block;\\r\\n}\\r\\n.show-captcha-label-top {\\r\\n   padding-left: 10px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNQQVJlZ2lzdHJhdGlvbi9zcmMvYXBwL3JlZ2lzdHJhdGlvbi9zaG93LWNhcHRjaGEvc2hvdy1jYXB0Y2hhLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0lBQ1gsbUJBQW1CO0FBQ3ZCO0FBQ0E7SUFDSSxnQkFBZ0I7QUFDcEI7QUFDQTtJQUNJLGVBQWU7QUFDbkI7QUFFQTtJQUNJLHFCQUFxQjtJQUNyQixrQkFBa0I7SUFDbEIsa0JBQWtCO0FBQ3RCO0FBQ0E7SUFDSSxnQkFBZ0I7QUFDcEI7QUFDQTtJQUNJLFlBQVk7SUFDWixZQUFZO0FBQ2hCO0FBR0E7SUFDSSxjQUFjO0FBQ2xCO0FBRUE7R0FDRyxrQkFBa0I7QUFDckIiLCJmaWxlIjoiU1BBUmVnaXN0cmF0aW9uL3NyYy9hcHAvcmVnaXN0cmF0aW9uL3Nob3ctY2FwdGNoYS9zaG93LWNhcHRjaGEuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zaG93LWNhcHRjaGEtbGFiZWwtZ3JvdXAge1xyXG4gICAgZmxvYXQ6IGxlZnQ7XHJcbiAgICBwYWRkaW5nLXJpZ2h0OiAxMHB4O1xyXG59XHJcbi5zaG93LWNhcHRjaGEtbGFiZWwtaXRlbXtcclxuICAgIHRleHQtYWxpZ246cmlnaHQ7XHJcbn1cclxuLnNob3ctY2FwdGNoYS1yZWZyZXNoLWltZyB7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuXHJcbi5zaG93LWNhcHRjaGEtaW5wdXQtZ3JvdXAge1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgcGFkZGluZy1sZWZ0OiAxNXB4O1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG59XHJcbi5zaG93LWNhcHRjaGEtaW5wdXQtaXRlbSB7XHJcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG59XHJcbi5zaG93LWNhcHRjaGEtZGltZW5zaW9ucyB7XHJcbiAgICBoZWlnaHQ6IDUwcHg7XHJcbiAgICB3aWR0aDogMjAwcHg7XHJcbn1cclxuXHJcblxyXG4uc2hvdy1jYXB0Y2hhLWlucHV0LWJsb2NrIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG59XHJcblxyXG4uc2hvdy1jYXB0Y2hhLWxhYmVsLXRvcCB7XHJcbiAgIHBhZGRpbmctbGVmdDogMTBweDtcclxufVxyXG4iXX0= */\"","module.exports = \"<form #captchaForm=\\\"ngForm\\\">\\r\\n    <div class=\\\"show-captcha-label-group\\\">\\r\\n        <div class=\\\"show-captcha-label-item\\\">\\r\\n            <label>Captcha</label>\\r\\n        </div>\\r\\n        <div class=\\\"show-captcha-label-item\\\">\\r\\n            <img (click)=\\\"refreshCaptcha()\\\" title=\\\"Reload Captcha\\\" src=\\\"/images/registration/Refresh.gif\\\" class=\\\"show-captcha-refresh-img\\\" />\\r\\n        </div>\\r\\n    </div>\\r\\n    <div>\\r\\n        <img [src]=\\\"captchaImgSrc\\\" id=\\\"imgCaptcha\\\" class=\\\"show-captcha-dimensions\\\" />\\r\\n        <div class=\\\"show-captcha-input-group\\\">\\r\\n            <div class=\\\"show-captcha-input-item\\\">\\r\\n                <span class=\\\"show-captcha-label-top\\\">Type the Captcha code here</span>\\r\\n            </div>\\r\\n            <div class=\\\"show-captcha-input-item\\\">\\r\\n                <span class=\\\"erx-form-input\\\">\\r\\n                    <span class=\\\"highlight-star erx-form-star-position\\\">*</span>\\r\\n                    <input type=\\\"text\\\" id=\\\"txtCaptchaResponse\\\" name=\\\"txtCaptchaResponse\\\" class=\\\"input-small\\\"\\r\\n                           required [(ngModel)]=\\\"captchaModel.captchaText\\\" (change)=\\\"onCaptchaChanged()\\\" #txtCaptchaResponse=\\\"ngModel\\\" />\\r\\n                    <span *ngIf=\\\"txtCaptchaResponse.invalid && (txtCaptchaResponse.dirty || txtCaptchaResponse.touched)\\\">\\r\\n                        <span id=\\\"captchaRequiredError\\\" *ngIf=\\\"txtCaptchaResponse.errors.required\\\" class=\\\"validation-color\\\">\\r\\n                            Captcha is required.\\r\\n                        </span>\\r\\n                    </span>\\r\\n                    <span id=\\\"invalidCaptchaError\\\" *ngIf=\\\"ShowInValidCaptchaError\\\" class=\\\"validation-color\\\">\\r\\n                        Invalid Captcha.\\r\\n                    </span>\\r\\n                </span>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\\r\\n\\r\\n\"","﻿import { Component, Input, OnInit, ViewChild, EventEmitter, Output } from '@angular/core';\r\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\r\nimport { CaptchaService } from '../../service/captcha.service';\r\nimport { CaptchaModel } from '../show-captcha/show-captcha.model'\r\nimport { NgForm } from \"@angular/forms\";\r\n\r\n@Component({\r\n    selector: 'show-captcha',\r\n    templateUrl: './show-captcha.component.html',\r\n    styleUrls: ['./show-captcha.component.css']\r\n})\r\nexport class ShowCaptchaComponent implements OnInit {\r\n    captchaImgSrc: SafeUrl;\r\n    captchaModel: CaptchaModel = new CaptchaModel();\r\n    @Input() ShowInValidCaptchaError: boolean = false;\r\n    @ViewChild('captchaForm') public captchaForm: NgForm;\r\n\r\n    constructor(private captchaService: CaptchaService, private domSanitizer: DomSanitizer) {\r\n\r\n    }\r\n    ngOnInit() {\r\n        this.getCaptcha();\r\n    }\r\n    refreshCaptcha() {\r\n        this.getCaptcha();\r\n    }\r\n    getCaptcha() {\r\n        this.captchaService.getCaptcha().subscribe(base64String => {\r\n            this.captchaImgSrc = this.domSanitizer.bypassSecurityTrustUrl('data:image/png;base64,' + base64String);\r\n        });\r\n    }\r\n    onCaptchaChanged() {\r\n        this.ShowInValidCaptchaError = false;\r\n    };\r\n\r\n    GetCaptchaDetails(): CaptchaModel {\r\n        this.captchaForm.controls.txtCaptchaResponse.markAsTouched({ onlySelf: true });\r\n        this.captchaModel.isValid = this.captchaForm.valid\r\n        return this.captchaModel;\r\n    }\r\n}\r\n\r\n","﻿export class CaptchaModel {\r\n    captchaText: string;\r\n    isValid: boolean;\r\n}","module.exports = \".subscription-card {\\r\\n    float: left;\\r\\n    width: 470px;\\r\\n    min-width: 470px;\\r\\n    margin: 10px;\\r\\n    text-align: center;\\r\\n    background-color: #ffffff;\\r\\n    padding: 15px 0px;\\r\\n    border-radius: 10px;\\r\\n    border: solid;\\r\\n    border-color: #5a5353;\\r\\n    border-width: thin;\\r\\n}\\r\\n\\r\\n.subscription-container {\\r\\n    background-color: #E3E3E3;\\r\\n    display: flex;\\r\\n    flex-flow: row wrap;\\r\\n    justify-content: center;\\r\\n    padding: 45px;\\r\\n}\\r\\n\\r\\n.subscription-card-header {\\r\\n    margin: 0;\\r\\n    padding-bottom: 20px;\\r\\n}\\r\\n\\r\\n.subscription-header-title {\\r\\n    font-size: 19px;\\r\\n    font-weight: bold;\\r\\n    color: #5a5353;\\r\\n    padding-top: 13px;\\r\\n    text-align: center;\\r\\n    height: 50px;\\r\\n}\\r\\n\\r\\n.subscription-card-body {\\r\\n    background-color: #ffffff;\\r\\n    font-weight: 400;\\r\\n    height: 300px;\\r\\n    background-color: #ffffff;\\r\\n    font-size: 16px;\\r\\n    font-weight: 400;\\r\\n    padding-left: 10px;\\r\\n    padding-left: 10px;\\r\\n    padding-right: 10px;\\r\\n}\\r\\n\\r\\n.subscription-price {\\r\\n    color: #5a5353;\\r\\n    font-weight: bold;\\r\\n    vertical-align: bottom;\\r\\n    font-size: 16px;\\r\\n}\\r\\n\\r\\n.subscription-link {\\r\\n    cursor: pointer;\\r\\n    color: #5e4da5;\\r\\n    font-size: 16px;\\r\\n    text-decoration:underline;\\r\\n}\\r\\n\\r\\n.subscription-card-row {\\r\\n    text-align: center;\\r\\n    font-size: 13px;\\r\\n    padding-top: 6px;\\r\\n}\\r\\n\\r\\n.subscription-card-group {\\r\\n    height: 160px;\\r\\n    margin-bottom: 10px;\\r\\n}\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNQQVJlZ2lzdHJhdGlvbi9zcmMvYXBwL3JlZ2lzdHJhdGlvbi9zdWJzY3JpcHRpb24vc3Vic2NyaXB0aW9uLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0lBQ1gsWUFBWTtJQUNaLGdCQUFnQjtJQUNoQixZQUFZO0lBQ1osa0JBQWtCO0lBQ2xCLHlCQUF5QjtJQUN6QixpQkFBaUI7SUFDakIsbUJBQW1CO0lBQ25CLGFBQWE7SUFDYixxQkFBcUI7SUFDckIsa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIsdUJBQXVCO0lBQ3ZCLGFBQWE7QUFDakI7O0FBRUE7SUFDSSxTQUFTO0lBQ1Qsb0JBQW9CO0FBQ3hCOztBQUVBO0lBQ0ksZUFBZTtJQUNmLGlCQUFpQjtJQUNqQixjQUFjO0lBQ2QsaUJBQWlCO0lBQ2pCLGtCQUFrQjtJQUNsQixZQUFZO0FBQ2hCOztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLGdCQUFnQjtJQUNoQixhQUFhO0lBQ2IseUJBQXlCO0lBQ3pCLGVBQWU7SUFDZixnQkFBZ0I7SUFDaEIsa0JBQWtCO0lBQ2xCLGtCQUFrQjtJQUNsQixtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsaUJBQWlCO0lBQ2pCLHNCQUFzQjtJQUN0QixlQUFlO0FBQ25COztBQUdBO0lBQ0ksZUFBZTtJQUNmLGNBQWM7SUFDZCxlQUFlO0lBQ2YseUJBQXlCO0FBQzdCOztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLGVBQWU7SUFDZixnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsbUJBQW1CO0FBQ3ZCIiwiZmlsZSI6IlNQQVJlZ2lzdHJhdGlvbi9zcmMvYXBwL3JlZ2lzdHJhdGlvbi9zdWJzY3JpcHRpb24vc3Vic2NyaXB0aW9uLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc3Vic2NyaXB0aW9uLWNhcmQge1xyXG4gICAgZmxvYXQ6IGxlZnQ7XHJcbiAgICB3aWR0aDogNDcwcHg7XHJcbiAgICBtaW4td2lkdGg6IDQ3MHB4O1xyXG4gICAgbWFyZ2luOiAxMHB4O1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcclxuICAgIHBhZGRpbmc6IDE1cHggMHB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICAgIGJvcmRlcjogc29saWQ7XHJcbiAgICBib3JkZXItY29sb3I6ICM1YTUzNTM7XHJcbiAgICBib3JkZXItd2lkdGg6IHRoaW47XHJcbn1cclxuXHJcbi5zdWJzY3JpcHRpb24tY29udGFpbmVyIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNFM0UzRTM7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1mbG93OiByb3cgd3JhcDtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgcGFkZGluZzogNDVweDtcclxufVxyXG5cclxuLnN1YnNjcmlwdGlvbi1jYXJkLWhlYWRlciB7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogMjBweDtcclxufVxyXG5cclxuLnN1YnNjcmlwdGlvbi1oZWFkZXItdGl0bGUge1xyXG4gICAgZm9udC1zaXplOiAxOXB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICBjb2xvcjogIzVhNTM1MztcclxuICAgIHBhZGRpbmctdG9wOiAxM3B4O1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgaGVpZ2h0OiA1MHB4O1xyXG59XHJcblxyXG4uc3Vic2NyaXB0aW9uLWNhcmQtYm9keSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xyXG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICAgIGhlaWdodDogMzAwcHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICAgIHBhZGRpbmctbGVmdDogMTBweDtcclxuICAgIHBhZGRpbmctbGVmdDogMTBweDtcclxuICAgIHBhZGRpbmctcmlnaHQ6IDEwcHg7XHJcbn1cclxuXHJcbi5zdWJzY3JpcHRpb24tcHJpY2Uge1xyXG4gICAgY29sb3I6ICM1YTUzNTM7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgIHZlcnRpY2FsLWFsaWduOiBib3R0b207XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbn1cclxuXHJcblxyXG4uc3Vic2NyaXB0aW9uLWxpbmsge1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgY29sb3I6ICM1ZTRkYTU7XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICB0ZXh0LWRlY29yYXRpb246dW5kZXJsaW5lO1xyXG59XHJcblxyXG4uc3Vic2NyaXB0aW9uLWNhcmQtcm93IHtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGZvbnQtc2l6ZTogMTNweDtcclxuICAgIHBhZGRpbmctdG9wOiA2cHg7XHJcbn1cclxuXHJcbi5zdWJzY3JpcHRpb24tY2FyZC1ncm91cCB7XHJcbiAgICBoZWlnaHQ6IDE2MHB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxufVxyXG5cclxuIl19 */\"","module.exports = \"<div class=\\\"subscription-container\\\">\\r\\n    <div *ngIf=\\\"!model.enterprisePricing\\\">\\r\\n\\r\\n        <div class=\\\"subscription-card\\\">\\r\\n            <div class=\\\"subscription-card-header\\\">\\r\\n                <div>\\r\\n                    <img class=\\\"subscription-badge\\\" src=\\\"/images/registration/starPreRegdLogo.png\\\" />\\r\\n                </div>\\r\\n                <div class=\\\"subscription-header-title\\\">\\r\\n                    Veradigm ePrescribe&trade; Basic\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"subscription-card-body\\\">\\r\\n                <div class=\\\"subscription-card-group\\\">\\r\\n                    <div class=\\\"subscription-card-row\\\">\\r\\n                        Prescribe Medications Electronically\\r\\n                    </div>\\r\\n                    <div class=\\\"subscription-card-row\\\">\\r\\n                        Electronic Prior Authorization (ePA)\\r\\n                    </div>\\r\\n                    <div class=\\\"subscription-card-row\\\">\\r\\n                        Easy to Use\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"subscription-card-row\\\">\\r\\n                    <span id=\\\"subscription-basicPrice\\\" class=\\\"subscription-price\\\">Only ${{model.price.basic}} per month per prescriber</span>\\r\\n                    - 30 day free trial!\\r\\n                </div>\\r\\n                <div class=\\\"subscription-card-row\\\">\\r\\n\\r\\n                    <span id=\\\"linkBasicRegister\\\" (click)=\\\"redirectToCreateUser('CompulsoryBasic')\\\" class=\\\"subscription-link\\\">Register Now</span>\\r\\n                </div>\\r\\n                <div class=\\\"subscription-card-row\\\">\\r\\n                    Already registered? <span id=\\\"linkBasicLogin\\\" (click)=\\\"redirectToLogin()\\\" class=\\\"subscription-link\\\">Sign in here</span>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div> <!--End of First Panel-->\\r\\n\\r\\n        <div class=\\\"subscription-card\\\">\\r\\n            <div class=\\\"subscription-card-header\\\">\\r\\n                <div>\\r\\n                    <img class=\\\"subscription-badge\\\" src=\\\"/images/registration/starPreRegdLogo.png\\\" />\\r\\n                    <img class=\\\"subscription-badge\\\" src=\\\"/images/registration/starPreRegdLogo.png\\\" />\\r\\n                </div>\\r\\n                <div class=\\\"subscription-header-title\\\">\\r\\n                    Veradigm ePrescribe&trade; Deluxe\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"subscription-card-body\\\">\\r\\n                <div class=\\\"subscription-card-group\\\">\\r\\n                    <div class=\\\"subscription-card-row\\\">\\r\\n                        Prescribe Medications Electronically\\r\\n                    </div>\\r\\n                    <div class=\\\"subscription-card-row\\\">\\r\\n                        Electronic Prior Authorization (ePA)\\r\\n                    </div>\\r\\n                    <div class=\\\"subscription-card-row\\\">\\r\\n                        Access Live Customer Support\\r\\n                    </div>\\r\\n                    <div class=\\\"subscription-card-row\\\">\\r\\n                        Easy to Use\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"subscription-card-row\\\">\\r\\n                    <span id=\\\"subscription-deluxePrice\\\" class=\\\"subscription-price\\\">Only ${{model.price.deluxeLogRx}} per month per prescriber</span>\\r\\n                </div>\\r\\n                <div class=\\\"subscription-card-row\\\">\\r\\n\\r\\n                    <span id=\\\"linkDeluxeRegister\\\" (click)=\\\"redirectToCreateUser('DeluxeEpaLogRx')\\\" class=\\\"subscription-link\\\">Register Now</span> for ePrescribe Basic.\\r\\n                </div>\\r\\n                <div class=\\\"subscription-card-row\\\">\\r\\n                    Once completed and you're logged in the application, click on the Manage Account tab to upgrade to Deluxe.\\r\\n                </div>\\r\\n                <div class=\\\"subscription-card-row\\\">\\r\\n                    Already registered? <span id=\\\"linkBasicLogin\\\" (click)=\\\"redirectToLogin()\\\" class=\\\"subscription-link\\\">Sign in here</span> and click on the Manage Account\\r\\n                </div>\\r\\n            </div>\\r\\n        </div> <!--End of Second Panel-->\\r\\n\\r\\n        <div class=\\\"subscription-card\\\">\\r\\n            <div class=\\\"subscription-card-header\\\">\\r\\n                <div>\\r\\n                    <img class=\\\"subscription-badge\\\" src=\\\"/images/registration/starPreRegdLogo.png\\\" />\\r\\n                    <img class=\\\"subscription-badge\\\" src=\\\"/images/registration/starPreRegdLogo.png\\\" />\\r\\n                    <img class=\\\"subscription-badge\\\" src=\\\"/images/registration/starPreRegdLogo.png\\\" />\\r\\n                </div>\\r\\n                <div class=\\\"subscription-header-title\\\">\\r\\n                    Veradigm ePrescribe&trade; Deluxe with EPCS\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"subscription-card-body\\\">\\r\\n                <div class=\\\"subscription-card-group\\\">\\r\\n                    <div class=\\\"subscription-card-row\\\">\\r\\n                        Prescribe Medications Electronically\\r\\n                    </div>\\r\\n                    <div class=\\\"subscription-card-row\\\">\\r\\n                        Electronic Prior Authorization (ePA)\\r\\n                    </div>\\r\\n                    <div class=\\\"subscription-card-row\\\">\\r\\n                        Prescription Drug Monitoring Program (PDMP)\\r\\n                    </div>\\r\\n                    <div class=\\\"subscription-card-row\\\">\\r\\n                        Electronic Prescription Controlled Substances (EPCS)\\r\\n                    </div>\\r\\n                    <div class=\\\"subscription-card-row\\\">\\r\\n                        Access Live Customer Support\\r\\n                    </div>\\r\\n                    <div class=\\\"subscription-card-row\\\">\\r\\n                        Easy to Use\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"subscription-card-row\\\">\\r\\n                    <span id=\\\"subscription-epcsPrice\\\" class=\\\"subscription-price\\\">Only ${{model.price.deluxeEpcsLogRx}} per month per prescriber</span>\\r\\n                </div>\\r\\n                <div class=\\\"subscription-card-row\\\">\\r\\n\\r\\n                    <span id=\\\"linkEpcsRegister\\\" (click)=\\\"redirectToCreateUser('DeluxeEPCSEpaLogRx2017')\\\" class=\\\"subscription-link\\\">Register Now</span> for ePrescribe Basic.\\r\\n                </div>\\r\\n                <div class=\\\"subscription-card-row\\\">\\r\\n                    Once completed and you're logged in the application, click on the Get EPCS tab to upgrade to Deluxe with EPCS.\\r\\n                </div>\\r\\n                <div class=\\\"subscription-card-row\\\">\\r\\n                    Already registered? <span id=\\\"linkBasicLogin\\\" (click)=\\\"redirectToLogin()\\\" class=\\\"subscription-link\\\">Sign in here</span> and click on Get EPCS\\r\\n                </div>\\r\\n            </div>\\r\\n        </div> <!--End of Third Panel-->\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"model.enterprisePricing\\\">\\r\\n        <div class=\\\"subscription-card\\\" *ngIf=\\\"model.price.basic\\\">\\r\\n            <div class=\\\"subscription-card-header\\\">\\r\\n                <div>\\r\\n                    <img class=\\\"subscription-badge\\\" src=\\\"/images/registration/starPreRegdLogo.png\\\" />\\r\\n                    <img class=\\\"subscription-badge\\\" src=\\\"/images/registration/starPreRegdLogo.png\\\" />\\r\\n                    <img class=\\\"subscription-badge\\\" src=\\\"/images/registration/starPreRegdLogo.png\\\" />\\r\\n                </div>\\r\\n                <div class=\\\"subscription-header-title\\\">\\r\\n                    Veradigm ePrescribe&trade; Basic\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"subscription-card-body\\\">\\r\\n                <div class=\\\"subscription-card-group\\\">\\r\\n                    <div class=\\\"subscription-card-row\\\">\\r\\n                        Prescribe Medications Electronically\\r\\n                    </div>\\r\\n                    <div class=\\\"subscription-card-row\\\">\\r\\n                        Electronic Prior Authorization (ePA)\\r\\n                    </div>\\r\\n                    <div class=\\\"subscription-card-row\\\">\\r\\n                        Easy to Use\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"subscription-card-row\\\">\\r\\n                    <span id=\\\"subscription-entBasicPrice\\\" class=\\\"subscription-price\\\">Only ${{model.price.basic}} per month per prescriber</span>\\r\\n                </div>\\r\\n                <div class=\\\"subscription-card-row\\\">\\r\\n                    <span id=\\\"linkEntBasicRegister\\\" (click)=\\\"redirectToCreateUser('CompulsoryBasic')\\\" class=\\\"subscription-link\\\">Register Now</span>\\r\\n                </div>\\r\\n                <div class=\\\"subscription-card-row\\\">\\r\\n                    Already registered? <span id=\\\"linkBasicLogin\\\" (click)=\\\"redirectToLogin()\\\" class=\\\"subscription-link\\\">Sign in here</span>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div> <!--End of enterprise Basic Panel-->\\r\\n        \\r\\n        <div class=\\\"subscription-card\\\" *ngIf=\\\"model.price.deluxeLogRx\\\">\\r\\n            <div class=\\\"subscription-card-header\\\">\\r\\n                <div>\\r\\n                    <img class=\\\"subscription-badge\\\" src=\\\"/images/registration/starPreRegdLogo.png\\\" />\\r\\n                    <img class=\\\"subscription-badge\\\" src=\\\"/images/registration/starPreRegdLogo.png\\\" />\\r\\n                    <img class=\\\"subscription-badge\\\" src=\\\"/images/registration/starPreRegdLogo.png\\\" />\\r\\n                </div>\\r\\n                <div class=\\\"subscription-header-title\\\">\\r\\n                    Veradigm ePrescribe&trade; Deluxe with Sponsored Messages\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"subscription-card-body\\\">\\r\\n                <div class=\\\"subscription-card-group\\\">\\r\\n                    <div class=\\\"subscription-card-row\\\">\\r\\n                        Prescribe Medications Electronically\\r\\n                    </div>\\r\\n                    <div class=\\\"subscription-card-row\\\">\\r\\n                        Electronic Prior Authorization (ePA)\\r\\n                    </div>\\r\\n                      <div class=\\\"subscription-card-row\\\">\\r\\n                        Access Live Customer Support\\r\\n                    </div>\\r\\n                    <div class=\\\"subscription-card-row\\\">\\r\\n                        Easy to Use\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"subscription-card-row\\\">\\r\\n                    <span id=\\\"subscription-entDeluxeLogRxPrice\\\" class=\\\"subscription-price\\\">Only ${{model.price.deluxeLogRx}} per month per prescriber</span>\\r\\n                </div>\\r\\n                <div class=\\\"subscription-card-row\\\">\\r\\n                    <span id=\\\"linkEntDeluxeLogRxRegister\\\" (click)=\\\"redirectToCreateUser('DeluxeEpaLogRx')\\\" class=\\\"subscription-link\\\">Register Now</span>\\r\\n                </div>\\r\\n                <div class=\\\"subscription-card-row\\\">\\r\\n                    Already registered? <span id=\\\"linkEntDeluxeLogRxLogin\\\" (click)=\\\"redirectToLogin()\\\" class=\\\"subscription-link\\\">Sign in here</span>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n        </div> <!--End of enterprise deluxe with ads Panel-->\\r\\n       \\r\\n        <div class=\\\"subscription-card\\\" *ngIf=\\\"model.price.deluxe\\\">\\r\\n            <div class=\\\"subscription-card-header\\\">\\r\\n                <div>\\r\\n                    <img class=\\\"subscription-badge\\\" src=\\\"/images/registration/starPreRegdLogo.png\\\" />\\r\\n                    <img class=\\\"subscription-badge\\\" src=\\\"/images/registration/starPreRegdLogo.png\\\" />\\r\\n                    <img class=\\\"subscription-badge\\\" src=\\\"/images/registration/starPreRegdLogo.png\\\" />\\r\\n                </div>\\r\\n                <div class=\\\"subscription-header-title\\\">\\r\\n                    Veradigm ePrescribe&trade; Deluxe\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"subscription-card-body\\\">\\r\\n                <div class=\\\"subscription-card-group\\\">\\r\\n                    <div class=\\\"subscription-card-row\\\">\\r\\n                        Prescribe Medications Electronically\\r\\n                    </div>\\r\\n                    <div class=\\\"subscription-card-row\\\">\\r\\n                        Electronic Prior Authorization (ePA)\\r\\n                    </div>\\r\\n                    <div class=\\\"subscription-card-row\\\">\\r\\n                        No Sponsored Messages\\r\\n                    </div>\\r\\n                    <div class=\\\"subscription-card-row\\\">\\r\\n                        Access Live Customer Support\\r\\n                    </div>\\r\\n                    <div class=\\\"subscription-card-row\\\">\\r\\n                        Easy to Use\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"subscription-card-row\\\">\\r\\n                    <span id=\\\"subscription-entDeluxePrice\\\" class=\\\"subscription-price\\\">Only ${{model.price.deluxe}} per month per prescriber</span>\\r\\n                </div>\\r\\n                <div class=\\\"subscription-card-row\\\">\\r\\n                    <span id=\\\"linkEntDeluxeRegister\\\" (click)=\\\"redirectToCreateUser('DeluxeEpa')\\\" class=\\\"subscription-link\\\">Register Now</span>\\r\\n                </div>\\r\\n               <div class=\\\"subscription-card-row\\\">\\r\\n                    Already registered? <span id=\\\"linkEntDeluxeLogin\\\" (click)=\\\"redirectToLogin()\\\" class=\\\"subscription-link\\\">Sign in here</span>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div> <!--End of enterprise deluxe Panel-->\\r\\n\\r\\n        <div class=\\\"subscription-card\\\" *ngIf=\\\"model.price.deluxeEpcsLogRx\\\">\\r\\n            <div class=\\\"subscription-card-header\\\">\\r\\n                <div>\\r\\n                    <img class=\\\"subscription-badge\\\" src=\\\"/images/registration/starPreRegdLogo.png\\\" />\\r\\n                    <img class=\\\"subscription-badge\\\" src=\\\"/images/registration/starPreRegdLogo.png\\\" />\\r\\n                    <img class=\\\"subscription-badge\\\" src=\\\"/images/registration/starPreRegdLogo.png\\\" />\\r\\n                </div>\\r\\n                <div class=\\\"subscription-header-title\\\">\\r\\n                    Veradigm ePrescribe&trade; Deluxe with EPCS with Sponsored Messages\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"subscription-card-body\\\">\\r\\n                <div class=\\\"subscription-card-group\\\">\\r\\n                    <div class=\\\"subscription-card-row\\\">\\r\\n                        Prescribe Medications Electronically\\r\\n                    </div>\\r\\n                    <div class=\\\"subscription-card-row\\\">\\r\\n                        Electronic Prior Authorization (ePA)\\r\\n                    </div>\\r\\n                    <div class=\\\"subscription-card-row\\\">\\r\\n                        Prescription Drug Monitoring Program (PDMP)\\r\\n                    </div>\\r\\n                    <div class=\\\"subscription-card-row\\\">\\r\\n                        Electronic Prescription Controlled Substances (EPCS)\\r\\n                    </div>\\r\\n                    <div class=\\\"subscription-card-row\\\">\\r\\n                        Access Live Customer Support\\r\\n                    </div>\\r\\n                    <div class=\\\"subscription-card-row\\\">\\r\\n                        Easy to Use\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"subscription-card-row\\\">\\r\\n                    <span id=\\\"subscription-entDeluxeEpcsLogRxPrice\\\" class=\\\"subscription-price\\\">Only ${{model.price.deluxeEpcsLogRx}} per month per prescriber</span>\\r\\n                </div>\\r\\n                <div class=\\\"subscription-card-row\\\">\\r\\n                    NOTE: There is a ${{model.price.epcsSetup}} per prescriber one-time setup fee for EPCS\\r\\n                </div>\\r\\n                <div class=\\\"subscription-card-row\\\">\\r\\n                    <span id=\\\"linkEntDeluxeEpcsLogRxRegister\\\" (click)=\\\"redirectToCreateUser('DeluxeEPCSEpaLogRx2017')\\\" class=\\\"subscription-link\\\">Register Now</span>\\r\\n                </div>\\r\\n                <div class=\\\"subscription-card-row\\\">\\r\\n                    Already registered? <span id=\\\"linkEntDeluxeEpcsLogRxLogin\\\" (click)=\\\"redirectToLogin()\\\" class=\\\"subscription-link\\\">Sign in here</span>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div> <!--End of enterprise deluxe with EPCS with ads Panel-->\\r\\n\\r\\n        <div class=\\\"subscription-card\\\" *ngIf=\\\"model.price.deluxeEpcs\\\">\\r\\n            <div class=\\\"subscription-card-header\\\">\\r\\n                <div>\\r\\n                    <img class=\\\"subscription-badge\\\" src=\\\"/images/registration/starPreRegdLogo.png\\\" />\\r\\n                    <img class=\\\"subscription-badge\\\" src=\\\"/images/registration/starPreRegdLogo.png\\\" />\\r\\n                    <img class=\\\"subscription-badge\\\" src=\\\"/images/registration/starPreRegdLogo.png\\\" />\\r\\n                </div>\\r\\n                <div class=\\\"subscription-header-title\\\">\\r\\n                    Veradigm ePrescribe&trade; Deluxe with EPCS\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"subscription-card-body\\\">\\r\\n                <div class=\\\"subscription-card-group\\\">\\r\\n                    <div class=\\\"subscription-card-row\\\">\\r\\n                        Prescribe Medications Electronically\\r\\n                    </div>\\r\\n                    <div class=\\\"subscription-card-row\\\">\\r\\n                        Electronic Prior Authorization (ePA)\\r\\n                    </div>\\r\\n                    <div class=\\\"subscription-card-row\\\">\\r\\n                        Prescription Drug Monitoring Program (PDMP)\\r\\n                    </div>\\r\\n                    <div class=\\\"subscription-card-row\\\">\\r\\n                        Electronic Prescription Controlled Substances (EPCS)\\r\\n                    </div>\\r\\n                    <div class=\\\"subscription-card-row\\\">\\r\\n                        No Sponsored Messages\\r\\n                    </div>\\r\\n                    <div class=\\\"subscription-card-row\\\">\\r\\n                        Access Live Customer Support\\r\\n                    </div>\\r\\n                    <div class=\\\"subscription-card-row\\\">\\r\\n                        Easy to Use\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"subscription-card-row\\\">\\r\\n                    <span id=\\\"subscription-entDeluxeEpcsPrice\\\" class=\\\"subscription-price\\\">Only ${{model.price.deluxeEpcs}} per month per prescriber</span>\\r\\n                </div>\\r\\n                <div class=\\\"subscription-card-row\\\">\\r\\n                    NOTE: There is a ${{model.price.epcsSetup}} per prescriber one-time setup fee for EPCS\\r\\n                </div>\\r\\n                <div class=\\\"subscription-card-row\\\">\\r\\n                    <span id=\\\"linkEntDeluxeRegister\\\" (click)=\\\"redirectToCreateUser('DeluxeEPCSEpa2017')\\\" class=\\\"subscription-link\\\">Register Now</span>\\r\\n                </div>\\r\\n                <div class=\\\"subscription-card-row\\\">\\r\\n                    Already registered? <span id=\\\"linkEntDeluxeLogin\\\" (click)=\\\"redirectToLogin()\\\" class=\\\"subscription-link\\\">Sign in here</span>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div> <!--End of enterprise deluxe with EPCS Panel-->\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { subscription, PricingStructurePrice, PricingStructureEnum } from './subscription.model';\r\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'app-subscription',\n    templateUrl: './subscription.component.html',\n    styleUrls: ['./subscription.component.css']\n})\nexport class SubscriptionComponent implements OnInit {\n\n    public model = new subscription();\n    private appContext: any;\n    constructor(@Inject('window') private window: any, private router: Router) {\n\n    }\n\n    redirectToCreateUser(pricingStructure: PricingStructureEnum) {\n        this.router.navigate([\"register/createuser\"], { state: { SelectedPricingStructure: pricingStructure } });\r\n    }\n\n    redirectToLogin() {\r\n        window.location.href = this.appContext?.login;\r\n    }\n\n    ngOnInit() {\n        this.appContext = this.window?.appcontext;\n        this.model.price = new PricingStructurePrice();\n        this.model.price.basic = this.appContext?.basicPrice;\n        this.model.price.deluxe = this.appContext?.deluxePrice;\n        this.model.price.deluxeLogRx = this.appContext?.deluxeLogRxPrice;\n        this.model.price.deluxeEpcs = this.appContext?.deluxeEpcsPrice;\n        this.model.price.deluxeEpcsLogRx = this.appContext?.deluxeEpcsLogRxPrice;\n        this.model.price.epcsSetup = this.appContext?.epcsSetupPrice;\n        this.model.enterprisePricing = this.appContext?.enterprisePricing && this.appContext.enterprisePricing.toLowerCase() == 'true';\n    }\n\n}\n","﻿export class subscription{\r\n    loginUrl: string;\r\n    price: PricingStructurePrice;\r\n    enterprisePricing: boolean; \r\n}\r\n\r\nexport class PricingStructurePrice {\r\n    basic: string;\r\n    deluxe: string;\r\n    deluxeLogRx: string;\r\n    deluxeEpcs: string;\r\n    deluxeEpcsLogRx: string;\r\n    epcsSetup: string;\r\n}\r\n\r\nexport enum PricingStructureEnum {\r\n    CompulsoryBasic = 12,\r\n    DeluxeEpa = 4,\r\n    DeluxeEpaLogRx = 11,\r\n    DeluxeEPCSEpa2017 = 13,\r\n    DeluxeEPCSEpaLogRx2017 = 14,\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJTUEFSZWdpc3RyYXRpb24vc3JjL2FwcC9yZWdpc3RyYXRpb24vdXNlci1hY2NvdW50LW5hbWUvdXNlci1hY2NvdW50LW5hbWUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<form #userAccForm=\\\"ngForm\\\" id=\\\"userAccForm\\\">\\r\\n    <div class=\\\"erx-form-row\\\">\\r\\n        <span class=\\\"erx-form-label\\\">\\r\\n            <label><span class=\\\"highlight-star erx-form-star-position\\\">*</span>{{userNameLabel}}</label>\\r\\n        </span>\\r\\n\\r\\n        <span class=\\\"erx-form-input\\\">\\r\\n            <input type=\\\"text\\\" id=\\\"newShieldUserName\\\" name=\\\"newShieldUserName\\\" class=\\\"input-medium\\\" maxlength=\\\"30\\\" [pattern]=\\\"shieldUserNamePattern\\\"\\r\\n                   required [(ngModel)]=\\\"userAccountName.shieldUserName\\\" #newShieldUserName=\\\"ngModel\\\" (blur)=\\\"validateUserName();\\\" />\\r\\n            <span *ngIf=\\\"!isUserExists && newShieldUserName.valid\\\">\\r\\n                <img id=\\\"validUserImage\\\" src=\\\"/images/GreenCheck.png\\\" />\\r\\n            </span>\\r\\n\\r\\n            <span *ngIf=\\\"newShieldUserName.invalid && (newShieldUserName.dirty || newShieldUserName.touched)\\\">\\r\\n                <span id=\\\"userNameMandatoryError\\\" *ngIf=\\\"newShieldUserName.errors.required\\\" class=\\\"validation-color\\\">\\r\\n                    Username is required.\\r\\n                </span>\\r\\n                <span id=\\\"userNamePatternError\\\" *ngIf=\\\"newShieldUserName.errors.pattern\\\" class=\\\"validation-color\\\">\\r\\n                    Username can contain alphanumeric characters and the following symbols _ . , -\\r\\n                </span>\\r\\n                <span id=\\\"userNameinvalidError\\\" *ngIf=\\\"newShieldUserName.errors.uniqueShieldUserName && !newShieldUserName.errors.pattern\\\" class=\\\"validation-color\\\">\\r\\n                    {{userExistsErrorMessage}}\\r\\n                </span>\\r\\n            </span>\\r\\n        </span>\\r\\n    </div>\\r\\n</form>\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit, Inject, Input, EventEmitter, Output, ViewChild } from '@angular/core';\r\nimport { } from '../user-creation/user-creation.model';\r\nimport { UserCreateService } from '../../service/user-create.service';\r\nimport { UserAccountName } from './user-account-name.model';\r\n\r\n\r\n@Component({\r\n    selector: 'app-user-account',\r\n    templateUrl: './user-account-name.component.html',\r\n    styleUrls: ['./user-account-name.component.css']\r\n\r\n})\r\nexport class UserAccountNameComponent implements OnInit {\r\n    shieldUserNamePattern = \"^([a-zA-Z0-9]+[-,_.]{0,30})*\";\r\n    isUserExists: boolean = true;\r\n    userAccountName: UserAccountName = new UserAccountName();\r\n    \r\n    @ViewChild('userAccForm') userAccForm: any;\r\n    \r\n    constructor(private userCreateService: UserCreateService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    @Input() userExistsErrorMessage: string;\r\n    @Input() userNameLabel: string;\r\n   \r\n    validateUserName() {\r\n        this.isUserExists = true;\r\n        //Initialize variables\r\n        let sldUserName: string = this.userAccountName.shieldUserName;\r\n        if (sldUserName && !this.userAccForm.controls[\"newShieldUserName\"].errors) {\r\n            this.userCreateService.validateShieldUserName(sldUserName)\r\n                .subscribe((userExists: boolean) => {\r\n                    if (userExists) {\r\n                        this.isUserExists = true;\r\n                        this.userAccForm.controls[\"newShieldUserName\"].setErrors({\r\n                            \"uniqueShieldUserName\": \"Invalid Username\"\r\n                        });\r\n                    }\r\n                    else {\r\n                        this.isUserExists = false;\r\n                        this.userAccForm.controls[\"newShieldUserName\"].setErrors(null);\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    GetUserAccountNameDetails(): UserAccountName {\r\n        this.userAccForm.controls.newShieldUserName.markAsDirty();\r\n        this.userAccountName.isValid = this.userAccForm.valid;\r\n        return this.userAccountName;\r\n    }\r\n   \r\n}","﻿export class UserAccountName {\r\n    shieldUserName: string;\r\n    isValid: boolean;\r\n}","module.exports = \".user-creation-password-rules {\\r\\n    height: 80px;\\r\\n}\\r\\n\\r\\n    .user-creation-password-rules > ul {\\r\\n        position: relative;\\r\\n        top: 3px;\\r\\n    }\\r\\n\\r\\n    .user-creation-password-rules > ul > li {\\r\\n            position: relative;\\r\\n            left: 2px;\\r\\n            list-style-position: inside;\\r\\n        }\\r\\n\\r\\n    .user-creation-dea-schedule {\\r\\n    margin-left: -2px;\\r\\n    margin-right: 8px;\\r\\n    padding-bottom: 11px;\\r\\n    margin-bottom: 7px;\\r\\n    position: relative;\\r\\n    top: -7px;\\r\\n}\\r\\n\\r\\n    .user-creation-captcha-input-group {\\r\\n    display: inline-block;\\r\\n    padding-left: 15px;\\r\\n    position: relative;\\r\\n    top: -9px;\\r\\n}\\r\\n\\r\\n    .user-creation-captcha-label {\\r\\n    display: inline-block;\\r\\n    padding-left: 25px;\\r\\n}\\r\\n\\r\\n    .user-creation-captcha-input {\\r\\n    display: block;\\r\\n    padding-top: 5px;\\r\\n    padding-left: 10px;\\r\\n}\\r\\n\\r\\n    .user-creation-security-questions {\\r\\n    padding-left: 1px;\\r\\n    padding-right: 365px;\\r\\n}\\r\\n\\r\\n    .user-creation-security-questions-first-row {\\r\\n    margin-top: 3px;\\r\\n}\\r\\n\\r\\n    .user-creation-already-completed {\\r\\n    margin: 10px 0px 25px 0px;\\r\\n}\\r\\n\\r\\n    .user-creation-already-completed > span {\\r\\n        font-weight: 900;\\r\\n        font-size: 14px;\\r\\n        padding-right: 10px;\\r\\n    }\\r\\n\\r\\n    .user-creation-already-completed > a {\\r\\n        color: #5e4da5;\\r\\n        text-decoration: none;\\r\\n    }\\r\\n\\r\\n    .user-creation-information {\\r\\n    margin: 20px 0px;\\r\\n    padding: 10px;\\r\\n    background-color: #D6ECEE;\\r\\n}\\r\\n\\r\\n    .user-creation-information > img {\\r\\n        position: relative;\\r\\n        top: 3px;\\r\\n    }\\r\\n\\r\\n    .user-creation-information > span {\\r\\n        font-weight: 900;\\r\\n    }\\r\\n\\r\\n    .user-creation-form-label-spacing {\\r\\n        width: 230px;\\r\\n    }\\r\\n\\r\\n    .user-creation-user-name-control-spacing {\\r\\n    padding-left: 133px;\\r\\n}\\r\\n\\r\\n    .user-creation-user-password-control-spacing {\\r\\n    padding-left: 74px;\\r\\n}\\r\\n\\r\\n    .user-creation-security-control-spacing {\\r\\n    padding-left: 220px;\\r\\n}\\r\\n\\r\\n    .user-creation-existing-user-control-spacing {\\r\\n    padding-left: 133px;\\r\\n}\\r\\n\\r\\n    .user-creation-captcha-control-spacing {\\r\\n    padding-left: 150px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNQQVJlZ2lzdHJhdGlvbi9zcmMvYXBwL3JlZ2lzdHJhdGlvbi91c2VyLWNyZWF0aW9uL3VzZXItY3JlYXRpb24uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFlBQVk7QUFDaEI7O0lBRUk7UUFDSSxrQkFBa0I7UUFDbEIsUUFBUTtJQUNaOztJQUVJO1lBQ0ksa0JBQWtCO1lBQ2xCLFNBQVM7WUFDVCwyQkFBMkI7UUFDL0I7O0lBRVI7SUFDSSxpQkFBaUI7SUFDakIsaUJBQWlCO0lBQ2pCLG9CQUFvQjtJQUNwQixrQkFBa0I7SUFDbEIsa0JBQWtCO0lBQ2xCLFNBQVM7QUFDYjs7SUFFQTtJQUNJLHFCQUFxQjtJQUNyQixrQkFBa0I7SUFDbEIsa0JBQWtCO0lBQ2xCLFNBQVM7QUFDYjs7SUFFQTtJQUNJLHFCQUFxQjtJQUNyQixrQkFBa0I7QUFDdEI7O0lBRUE7SUFDSSxjQUFjO0lBQ2QsZ0JBQWdCO0lBQ2hCLGtCQUFrQjtBQUN0Qjs7SUFFQTtJQUNJLGlCQUFpQjtJQUNqQixvQkFBb0I7QUFDeEI7O0lBRUE7SUFDSSxlQUFlO0FBQ25COztJQUVBO0lBQ0kseUJBQXlCO0FBQzdCOztJQUVJO1FBQ0ksZ0JBQWdCO1FBQ2hCLGVBQWU7UUFDZixtQkFBbUI7SUFDdkI7O0lBRUE7UUFDSSxjQUFjO1FBQ2QscUJBQXFCO0lBQ3pCOztJQUVKO0lBQ0ksZ0JBQWdCO0lBQ2hCLGFBQWE7SUFDYix5QkFBeUI7QUFDN0I7O0lBRUk7UUFDSSxrQkFBa0I7UUFDbEIsUUFBUTtJQUNaOztJQUVBO1FBQ0ksZ0JBQWdCO0lBQ3BCOztJQUdBO1FBQ0ksWUFBWTtJQUNoQjs7SUFFSjtJQUNJLG1CQUFtQjtBQUN2Qjs7SUFDQTtJQUNJLGtCQUFrQjtBQUN0Qjs7SUFDQTtJQUNJLG1CQUFtQjtBQUN2Qjs7SUFDQTtJQUNJLG1CQUFtQjtBQUN2Qjs7SUFFQTtJQUNJLG1CQUFtQjtBQUN2QiIsImZpbGUiOiJTUEFSZWdpc3RyYXRpb24vc3JjL2FwcC9yZWdpc3RyYXRpb24vdXNlci1jcmVhdGlvbi91c2VyLWNyZWF0aW9uLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudXNlci1jcmVhdGlvbi1wYXNzd29yZC1ydWxlcyB7XHJcbiAgICBoZWlnaHQ6IDgwcHg7XHJcbn1cclxuXHJcbiAgICAudXNlci1jcmVhdGlvbi1wYXNzd29yZC1ydWxlcyA+IHVsIHtcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgdG9wOiAzcHg7XHJcbiAgICB9XHJcblxyXG4gICAgICAgIC51c2VyLWNyZWF0aW9uLXBhc3N3b3JkLXJ1bGVzID4gdWwgPiBsaSB7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAgICAgbGVmdDogMnB4O1xyXG4gICAgICAgICAgICBsaXN0LXN0eWxlLXBvc2l0aW9uOiBpbnNpZGU7XHJcbiAgICAgICAgfVxyXG5cclxuLnVzZXItY3JlYXRpb24tZGVhLXNjaGVkdWxlIHtcclxuICAgIG1hcmdpbi1sZWZ0OiAtMnB4O1xyXG4gICAgbWFyZ2luLXJpZ2h0OiA4cHg7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogMTFweDtcclxuICAgIG1hcmdpbi1ib3R0b206IDdweDtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIHRvcDogLTdweDtcclxufVxyXG5cclxuLnVzZXItY3JlYXRpb24tY2FwdGNoYS1pbnB1dC1ncm91cCB7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDE1cHg7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICB0b3A6IC05cHg7XHJcbn1cclxuXHJcbi51c2VyLWNyZWF0aW9uLWNhcHRjaGEtbGFiZWwge1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgcGFkZGluZy1sZWZ0OiAyNXB4O1xyXG59XHJcblxyXG4udXNlci1jcmVhdGlvbi1jYXB0Y2hhLWlucHV0IHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgcGFkZGluZy10b3A6IDVweDtcclxuICAgIHBhZGRpbmctbGVmdDogMTBweDtcclxufVxyXG5cclxuLnVzZXItY3JlYXRpb24tc2VjdXJpdHktcXVlc3Rpb25zIHtcclxuICAgIHBhZGRpbmctbGVmdDogMXB4O1xyXG4gICAgcGFkZGluZy1yaWdodDogMzY1cHg7XHJcbn1cclxuXHJcbi51c2VyLWNyZWF0aW9uLXNlY3VyaXR5LXF1ZXN0aW9ucy1maXJzdC1yb3cge1xyXG4gICAgbWFyZ2luLXRvcDogM3B4O1xyXG59XHJcblxyXG4udXNlci1jcmVhdGlvbi1hbHJlYWR5LWNvbXBsZXRlZCB7XHJcbiAgICBtYXJnaW46IDEwcHggMHB4IDI1cHggMHB4O1xyXG59XHJcblxyXG4gICAgLnVzZXItY3JlYXRpb24tYWxyZWFkeS1jb21wbGV0ZWQgPiBzcGFuIHtcclxuICAgICAgICBmb250LXdlaWdodDogOTAwO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgICAgICBwYWRkaW5nLXJpZ2h0OiAxMHB4O1xyXG4gICAgfVxyXG5cclxuICAgIC51c2VyLWNyZWF0aW9uLWFscmVhZHktY29tcGxldGVkID4gYSB7XHJcbiAgICAgICAgY29sb3I6ICM1ZTRkYTU7XHJcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgfVxyXG5cclxuLnVzZXItY3JlYXRpb24taW5mb3JtYXRpb24ge1xyXG4gICAgbWFyZ2luOiAyMHB4IDBweDtcclxuICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRDZFQ0VFO1xyXG59XHJcblxyXG4gICAgLnVzZXItY3JlYXRpb24taW5mb3JtYXRpb24gPiBpbWcge1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICB0b3A6IDNweDtcclxuICAgIH1cclxuXHJcbiAgICAudXNlci1jcmVhdGlvbi1pbmZvcm1hdGlvbiA+IHNwYW4ge1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA5MDA7XHJcbiAgICB9XHJcblxyXG5cclxuICAgIC51c2VyLWNyZWF0aW9uLWZvcm0tbGFiZWwtc3BhY2luZyB7XHJcbiAgICAgICAgd2lkdGg6IDIzMHB4O1xyXG4gICAgfVxyXG5cclxuLnVzZXItY3JlYXRpb24tdXNlci1uYW1lLWNvbnRyb2wtc3BhY2luZyB7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDEzM3B4O1xyXG59XHJcbi51c2VyLWNyZWF0aW9uLXVzZXItcGFzc3dvcmQtY29udHJvbC1zcGFjaW5nIHtcclxuICAgIHBhZGRpbmctbGVmdDogNzRweDtcclxufVxyXG4udXNlci1jcmVhdGlvbi1zZWN1cml0eS1jb250cm9sLXNwYWNpbmcge1xyXG4gICAgcGFkZGluZy1sZWZ0OiAyMjBweDtcclxufVxyXG4udXNlci1jcmVhdGlvbi1leGlzdGluZy11c2VyLWNvbnRyb2wtc3BhY2luZyB7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDEzM3B4O1xyXG59XHJcblxyXG4udXNlci1jcmVhdGlvbi1jYXB0Y2hhLWNvbnRyb2wtc3BhY2luZyB7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDE1MHB4O1xyXG59Il19 */\"","module.exports = \"<form #userDetailForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(userDetailForm)\\\">\\r\\n    <div id=\\\"user-creation-title\\\" class=\\\"title-bar title-bar-heading branded-background-color branded-font-color\\\">\\r\\n        Create New Account\\r\\n    </div>\\r\\n    <div class=\\\"erx-form-content-offset font-color-dimmed-black\\\">\\r\\n        <div class=\\\"user-creation-already-completed\\\">\\r\\n            <span>Already completed this step?</span> <a [href]=\\\"mainAppLink\\\">Click here</a> and then login to continue registration.\\r\\n        </div>\\r\\n        <div>\\r\\n            Welcome to ePrescribe. The first step to prescribing is to create a user account and go through our identity proofing process. Please enter your information below.\\r\\n        </div>\\r\\n        <div class=\\\"user-creation-information\\\">\\r\\n            <img src=\\\"/images/info-global-16-x-16.png\\\" />\\r\\n            Please have your <span>Driver's License/State Issued ID/Passport and Social Security Number</span> available to complete the registration credentialing process.\\r\\n        </div>\\r\\n        <div class=\\\"erx-form-sub-heading font-setting-bold font-uppercase\\\">\\r\\n            Personal Information\\r\\n        </div>\\r\\n        <div>\\r\\n            <div class=\\\"erx-form-row\\\">\\r\\n                <span class=\\\"erx-form-label user-creation-form-label-spacing\\\">\\r\\n                    <label>Title</label>\\r\\n                </span>\\r\\n                <span class=\\\"erx-form-input\\\">\\r\\n                    <input id=\\\"title\\\" name=\\\"title\\\" class=\\\"input-x-small\\\" autofocus\\r\\n                           maxlength=\\\"10\\\" #title=\\\"ngModel\\\"\\r\\n                           [(ngModel)]=\\\"userDetail.title\\\">\\r\\n                </span>\\r\\n            </div>\\r\\n            <div class=\\\"erx-form-row\\\">\\r\\n                <span class=\\\"erx-form-label user-creation-form-label-spacing\\\">\\r\\n                    <label><span class=\\\"highlight-star erx-form-star-position\\\">*</span>First Name</label>\\r\\n                </span>\\r\\n\\r\\n                <span class=\\\"erx-form-input\\\">\\r\\n                    <input id=\\\"firstname\\\" name=\\\"firstname\\\" class=\\\"input-large\\\" type=\\\"text\\\"\\r\\n                           required maxlength=\\\"35\\\" [pattern]=\\\"namePattern\\\"\\r\\n                           [(ngModel)]=\\\"userDetail.firstname\\\" #firstname=\\\"ngModel\\\">\\r\\n                    <span *ngIf=\\\"firstname.invalid && (firstname.dirty || firstname.touched)\\\">\\r\\n                        <span id=\\\"firstNameRequiredError\\\" *ngIf=\\\"firstname.errors.required\\\" class=\\\"validation-color\\\">\\r\\n                            First Name is required.\\r\\n                        </span>\\r\\n                        <span id=\\\"firstnamePatternError\\\" *ngIf=\\\"firstname.errors.pattern\\\" class=\\\"validation-color\\\">\\r\\n                            Invalid first name. First name has to be characters, maximum of 35.\\r\\n                        </span>\\r\\n                    </span>\\r\\n\\r\\n                </span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"erx-form-row\\\">\\r\\n                <span class=\\\"erx-form-label user-creation-form-label-spacing\\\">\\r\\n                    <label>Middle Name</label>\\r\\n                </span>\\r\\n                <span class=\\\"erx-form-input\\\">\\r\\n                    <input id=\\\"middlename\\\" name=\\\"middleName\\\" class=\\\"input-large\\\"\\r\\n                           maxlength=\\\"35\\\" [pattern]=\\\"namePattern\\\"\\r\\n                           [(ngModel)]=\\\"userDetail.middleName\\\" #middleName=\\\"ngModel\\\" />\\r\\n                </span>\\r\\n                <span *ngIf=\\\"middleName.invalid && (middleName.dirty || middleName.touched)\\\">\\r\\n                    <span id=\\\"middleNamePatternError\\\" *ngIf=\\\"middleName.errors.pattern\\\" class=\\\"validation-color\\\">\\r\\n                        Invalid middle name. Middle name has to be characters, maximum of 35.\\r\\n                    </span>\\r\\n                </span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"erx-form-row\\\">\\r\\n                <span class=\\\"erx-form-label user-creation-form-label-spacing\\\">\\r\\n                    <label><span class=\\\"highlight-star erx-form-star-position\\\">*</span>Last Name</label>\\r\\n                </span>\\r\\n                <span class=\\\"erx-form-input\\\">\\r\\n                    <input type=\\\"text\\\" id=\\\"lastName\\\" name=\\\"lastName\\\" class=\\\"input-large\\\"\\r\\n                           [pattern]=\\\"namePattern\\\"\\r\\n                           required maxlength=\\\"35\\\" [(ngModel)]=\\\"userDetail.lastName\\\" #lastName=\\\"ngModel\\\" />\\r\\n                    <span *ngIf=\\\"lastName.invalid && (lastName.dirty || lastName.touched)\\\">\\r\\n                        <span id=\\\"lastNameRequiredError\\\" *ngIf=\\\"lastName.errors.required\\\" class=\\\"validation-color\\\">\\r\\n                            Last Name is required.\\r\\n                        </span>\\r\\n                        <span id=\\\"firstnamePatternError\\\" *ngIf=\\\"lastName.errors.pattern\\\" class=\\\"validation-color\\\">\\r\\n                            Invalid first name. Last name has to be characters, maximum of 35.\\r\\n                        </span>\\r\\n                    </span>\\r\\n\\r\\n                </span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"erx-form-row\\\">\\r\\n                <span class=\\\"erx-form-label user-creation-form-label-spacing\\\">\\r\\n                    <label>Suffix</label>\\r\\n                </span>\\r\\n\\r\\n                <span class=\\\"erx-form-input\\\">\\r\\n                    <input id=\\\"suffix\\\" name=\\\"suffix\\\" class=\\\"input-x-small\\\"\\r\\n                           maxlength=\\\"6\\\" #suffix=\\\"ngModel\\\" [pattern]=\\\"suffixPattern\\\"\\r\\n                           [(ngModel)]=\\\"userDetail.suffix\\\">\\r\\n                    <span *ngIf=\\\"suffix.invalid && (suffix.dirty || suffix.touched)\\\">\\r\\n                        <span id=\\\"suffixPatternError\\\" *ngIf=\\\"suffix.errors.pattern\\\" class=\\\"validation-color\\\">\\r\\n                            Invalid suffix. Kindly enter a valid suffix (letters only).\\r\\n                        </span>\\r\\n                    </span>\\r\\n\\r\\n                </span>\\r\\n            </div>\\r\\n            <div class=\\\"erx-form-row\\\">\\r\\n                <span class=\\\"erx-form-label user-creation-form-label-spacing\\\">\\r\\n                    <label><span class=\\\"highlight-star erx-form-star-position\\\">*</span>Personal Email</label>\\r\\n                </span>\\r\\n                <span class=\\\"erx-form-input\\\">\\r\\n                    <input type=\\\"email\\\" id=\\\"personalEmail\\\" name=\\\"personalEmail\\\" class=\\\"input-large\\\"\\r\\n                           required maxlength=\\\"70\\\"\\r\\n                           [(ngModel)]=\\\"userDetail.personalEmail\\\" #personalEmail=\\\"ngModel\\\" email />\\r\\n                    <span *ngIf=\\\"personalEmail.invalid && (personalEmail.dirty || personalEmail.touched)\\\">\\r\\n                        <span id=\\\"emailRequiredError\\\" *ngIf=\\\"personalEmail.errors.required\\\" class=\\\"validation-color\\\">\\r\\n                            Personal Email is required.\\r\\n                        </span>\\r\\n                        <span id=\\\"emailPatternError\\\" *ngIf=\\\"personalEmail.errors.email && !personalEmail.errors.required \\\" class=\\\"validation-color\\\">\\r\\n                            Enter valid email address.\\r\\n                        </span>\\r\\n                    </span>\\r\\n                </span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"erx-form-row\\\">\\r\\n                <span class=\\\"erx-form-label user-creation-form-label-spacing\\\">\\r\\n                    <label><span class=\\\"highlight-star erx-form-star-position\\\">*</span>Contact Phone Number</label>\\r\\n                </span>\\r\\n                <span class=\\\"erx-form-input\\\">\\r\\n                    <input type=\\\"text\\\"\\r\\n                           id=\\\"txtContactPhoneNumber\\\"\\r\\n                           name=\\\"contactPhoneNumber\\\"\\r\\n                           class=\\\"input-large\\\"\\r\\n                           required\\r\\n                           [pattern]=\\\"phoneFaxPattern\\\"\\r\\n                           maxlength=\\\"14\\\"\\r\\n                           [(ngModel)]=\\\"userDetail.contactPhoneNumber\\\"\\r\\n                           #contactPhoneNumber=\\\"ngModel\\\" />\\r\\n\\r\\n                    <span *ngIf=\\\"contactPhoneNumber.touched || (contactPhoneNumber.invalid && contactPhoneNumber.dirty)\\\">\\r\\n                        <span id=\\\"contactPhoneNumberError\\\" *ngIf=\\\"contactPhoneNumber.errors\\\" class=\\\"validation-color\\\">\\r\\n                            Enter a valid contact phone number.\\r\\n                        </span>\\r\\n                    </span>\\r\\n                </span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"erx-form-row\\\">\\r\\n                <span class=\\\"erx-form-label user-creation-form-label-spacing\\\">\\r\\n                    <label><span class=\\\"highlight-star erx-form-star-position\\\">*</span>Home Address</label>\\r\\n                </span>\\r\\n                <span class=\\\"erx-form-input\\\">\\r\\n                    <input id=\\\"txtAddress1\\\" class=\\\"input-large\\\"\\r\\n                           type=\\\"text\\\"\\r\\n                           name=\\\"HomeAddress\\\"\\r\\n                           maxlength=\\\"35\\\"\\r\\n                           required\\r\\n                           [(ngModel)]=\\\"userDetail.HomeAddress\\\"\\r\\n                           #HomeAddress=\\\"ngModel\\\" />\\r\\n\\r\\n                    <span *ngIf=\\\"HomeAddress.invalid && (HomeAddress.dirty || HomeAddress.touched)\\\">\\r\\n                        <span id=\\\"addressRequiredError\\\" *ngIf=\\\"HomeAddress.errors.required\\\"\\r\\n                              class=\\\"validation-color\\\">\\r\\n                            Home Address is required.\\r\\n                        </span>\\r\\n                    </span>\\r\\n                </span>\\r\\n            </div>\\r\\n            <div class=\\\"erx-form-row\\\">\\r\\n                <span class=\\\"erx-form-label user-creation-form-label-spacing\\\">\\r\\n                    <label>Home Address 2</label>\\r\\n                </span>\\r\\n                <span class=\\\"erx-form-input\\\">\\r\\n                    <input id=\\\"txtAddress2\\\" class=\\\"input-large\\\"\\r\\n                           type=\\\"text\\\"\\r\\n                           name=\\\"HomeAddress2\\\"\\r\\n                           maxlength=\\\"35\\\"\\r\\n                           [(ngModel)]=\\\"userDetail.HomeAddress2\\\" />\\r\\n                </span>\\r\\n            </div>\\r\\n            <div class=\\\"erx-form-row\\\">\\r\\n                <span class=\\\"erx-form-label user-creation-form-label-spacing\\\">\\r\\n                    <label><span class=\\\"highlight-star erx-form-star-position\\\">*</span>City</label>\\r\\n                </span>\\r\\n                <span class=\\\"erx-form-input\\\">\\r\\n                    <input id=\\\"txtCity\\\" class=\\\"input-large\\\"\\r\\n                           type=\\\"text\\\"\\r\\n                           name=\\\"city\\\"\\r\\n                           maxlength=\\\"20\\\"\\r\\n                           required\\r\\n                           [pattern]=\\\"cityPattern\\\"\\r\\n                           [(ngModel)]=\\\"userDetail.city\\\"\\r\\n                           #city=\\\"ngModel\\\" />\\r\\n\\r\\n                    <span *ngIf=\\\"city.invalid && (city.dirty || city.touched)\\\">\\r\\n                        <span *ngIf=\\\"city.errors.required\\\"\\r\\n                              id=\\\"cityMandatoryError\\\"\\r\\n                              class=\\\"validation-color\\\">\\r\\n                            City is required.\\r\\n                        </span>\\r\\n                        <span id=\\\"CityPatternError\\\" *ngIf=\\\"city.errors.pattern\\\" class=\\\"validation-color\\\">\\r\\n                            Enter a valid city.\\r\\n                        </span>\\r\\n                    </span>\\r\\n\\r\\n                </span>\\r\\n            </div>\\r\\n            <div class=\\\"erx-form-row\\\">\\r\\n                <span class=\\\"erx-form-label user-creation-form-label-spacing\\\">\\r\\n                    <label><span class=\\\"highlight-star erx-form-star-position\\\">*</span>State</label>\\r\\n                </span>\\r\\n                <span class=\\\"erx-form-input\\\">\\r\\n                    <select id=\\\"ddlState\\\" class=\\\"input-medium\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            name=\\\"State\\\"\\r\\n                            required\\r\\n                            [(ngModel)]=\\\"userDetail.state\\\"\\r\\n                            #state=\\\"ngModel\\\">\\r\\n                        <option [value]=\\\"undefined\\\" selected disabled>-- Select a State --</option>\\\"\\r\\n                        <option *ngFor=\\\"let item of states\\\" [value]=\\\"item.state\\\">\\r\\n                            {{item.description}}\\r\\n                        </option>\\r\\n                    </select>\\r\\n                    <span *ngIf=\\\"state.invalid && (state.dirty || state.touched)\\\">\\r\\n                        <span *ngIf=\\\"state.errors.required\\\"\\r\\n                              id=\\\"stateMandatoryError\\\"\\r\\n                              class=\\\"validation-color\\\">\\r\\n                            State is required.\\r\\n                        </span>\\r\\n                    </span>\\r\\n                </span>\\r\\n            </div>\\r\\n            <div class=\\\"erx-form-row\\\">\\r\\n                <span class=\\\"erx-form-label user-creation-form-label-spacing\\\">\\r\\n                    <label><span class=\\\"highlight-star erx-form-star-position\\\">*</span>ZIP Code</label>\\r\\n                </span>\\r\\n                <span class=\\\"erx-form-input\\\">\\r\\n                    <input id=\\\"txtZip\\\" class=\\\"input-medium\\\"\\r\\n                           type=\\\"text\\\"\\r\\n                           name=\\\"zipCode\\\"\\r\\n                           maxlength=\\\"9\\\"\\r\\n                           required\\r\\n                           [pattern]=\\\"zipCodePattern\\\"\\r\\n                           [(ngModel)]=\\\"userDetail.zipCode\\\"\\r\\n                           #zipCode=\\\"ngModel\\\" />\\r\\n\\r\\n                    <span *ngIf=\\\"zipCode.invalid && (zipCode.dirty || zipCode.touched)\\\">\\r\\n                        <span *ngIf=\\\"zipCode.errors.required\\\"\\r\\n                              id=\\\"zipMandatoryError\\\"\\r\\n                              class=\\\"validation-color\\\">\\r\\n                            ZIP Code is required.\\r\\n                        </span>\\r\\n                        <span id=\\\"zipCodePatternError\\\" *ngIf=\\\"zipCode.errors.pattern\\\" class=\\\"validation-color\\\">\\r\\n                            Enter a valid 5 or 9 digit ZIP code\\r\\n                        </span>\\r\\n\\r\\n                    </span>\\r\\n                </span>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"erx-form-sub-heading font-setting-bold font-uppercase\\\">\\r\\n            Provider Information\\r\\n        </div>\\r\\n        <div>\\r\\n            <div class=\\\"erx-form-row\\\">\\r\\n                <span class=\\\"erx-form-label user-creation-form-label-spacing\\\">\\r\\n                    <label><span class=\\\"highlight-star erx-form-star-position\\\">*</span>NPI</label>\\r\\n                </span>\\r\\n\\r\\n                <span class=\\\"erx-form-input\\\">\\r\\n                    <input id=\\\"npi\\\" name=\\\"npi\\\" class=\\\"input-medium\\\"\\r\\n                           required maxlength=\\\"10\\\"\\r\\n                           [(ngModel)]=\\\"userDetail.npi\\\" #npi=\\\"ngModel\\\" (change)=\\\"onNpiChanged()\\\">\\r\\n\\r\\n                    <span *ngIf=\\\"npi.invalid && (npi.dirty || npi.touched)\\\">\\r\\n                        <span id=\\\"NPIMandatoryError\\\" *ngIf=\\\"npi.errors.required\\\" class=\\\"validation-color\\\">\\r\\n                            NPI is required.\\r\\n                        </span>\\r\\n                    </span>\\r\\n                    <span id=\\\"NPIinvalidError\\\" *ngIf=\\\"!isValidNPI\\\" class=\\\"validation-color\\\">\\r\\n                        Provide valid NPI number.\\r\\n                    </span>\\r\\n                </span>\\r\\n            </div>\\r\\n            <div class=\\\"erx-form-row\\\">\\r\\n                <span class=\\\"erx-form-label user-creation-form-label-spacing\\\">\\r\\n                    <label><span class=\\\"highlight-star erx-form-star-position\\\">*</span>Specialty 1</label>\\r\\n                </span>\\r\\n                <span class=\\\"erx-form-input\\\">\\r\\n\\r\\n                    <select id=\\\"ddlSpecialty1\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            name=\\\"speciality1\\\"\\r\\n                            class=\\\"input-large\\\"\\r\\n                            required\\r\\n                            [(ngModel)]=\\\"userDetail.speciality1\\\"\\r\\n                            #speciality1=\\\"ngModel\\\">\\r\\n                        <option [value]=\\\"undefined\\\" selected disabled>-- Select a Specialty --</option>\\r\\n                        <option *ngFor=\\\"let item of SpecialityList\\\" [value]=\\\"item.Specialty_CD\\\">\\r\\n                            {{item.Specialty}}\\r\\n                        </option>\\r\\n                    </select>\\r\\n                    <span *ngIf=\\\"speciality1.invalid && (speciality1.dirty || speciality1.touched)\\\">\\r\\n                        <span *ngIf=\\\"speciality1.errors.required\\\"\\r\\n                              id=\\\"speciality1MandatoryError\\\"\\r\\n                              class=\\\"validation-color\\\">\\r\\n                            Select a valid Specialty 1.\\r\\n                        </span>\\r\\n                    </span>\\r\\n                </span>\\r\\n            </div>\\r\\n            <div class=\\\"erx-form-row\\\">\\r\\n                <span class=\\\"erx-form-label user-creation-form-label-spacing\\\">\\r\\n                    <label>Specialty 2</label>\\r\\n                </span>\\r\\n                <span class=\\\"erx-form-input\\\">\\r\\n                    <select id=\\\"ddlSpecialty2\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            name=\\\"speciality2\\\"\\r\\n                            class=\\\"input-large\\\"\\r\\n                            [(ngModel)]=\\\"userDetail.speciality2\\\"\\r\\n                            #speciality2=\\\"ngModel\\\">\\r\\n                        <option [value]=\\\"undefined\\\" selected>-- Select a Specialty --</option>\\r\\n                        <option *ngFor=\\\"let item of SpecialityList\\\" [value]=\\\"item.Specialty_CD\\\">\\r\\n                            {{item.Specialty}}\\r\\n                        </option>\\r\\n                    </select>\\r\\n                </span>\\r\\n            </div>\\r\\n            <div class=\\\"erx-form-row\\\">\\r\\n                <span class=\\\"erx-form-label user-creation-form-label-spacing\\\">\\r\\n                    <label>DEA Number</label>\\r\\n                </span>\\r\\n                <span class=\\\"erx-form-input\\\">\\r\\n                    <input type=\\\"text\\\" id=\\\"deaNumber\\\" name=\\\"deaNumber\\\" class=\\\"input-medium\\\"\\r\\n                           maxlength=\\\"35\\\" [(ngModel)]=\\\"userDetail.deaNumber\\\" #deaNumber=\\\"ngModel\\\"\\r\\n                           (change)=\\\"setDeaValidation()\\\" [pattern]=\\\"noLeadingSpacePattern\\\" />\\r\\n                    <span id=\\\"DEAMandatoryError\\\" \\r\\n                          *ngIf=\\\"isDEARequired && (deaExpirationDate.dirty || deaExpirationDate.touched)\\\" \\r\\n                          class=\\\"validation-color\\\">\\r\\n                        DEA Number is required.\\r\\n                    </span>\\r\\n                    <span *ngIf=\\\"(deaNumber.invalid && (deaNumber.dirty || deaNumber.touched)) \\r\\n                          || showInvalidDeaError\\\">\\r\\n                        <span id=\\\"DEAinvalidError\\\" \\r\\n                              *ngIf=\\\"showInvalidDeaError \\r\\n                              || (!isDEARequired && deaNumber.errors.pattern)\\\" class=\\\"validation-color\\\">\\r\\n                            Provide valid DEA Number.\\r\\n                        </span>\\r\\n                    </span>\\r\\n                </span>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"erx-form-row\\\">\\r\\n                <span class=\\\"erx-form-label user-creation-form-label-spacing\\\">\\r\\n                    <label>DEA Number Exp. Date</label>\\r\\n                </span>\\r\\n                <span class=\\\"erx-form-input\\\">\\r\\n                    <input type=\\\"text\\\" id=\\\"deaExpirationDate\\\" name=\\\"deaExpirationDate\\\" class=\\\"input-medium\\\" [pattern]=\\\"datePattern\\\"\\r\\n                           placeholder=\\\"MM-DD-YYYY\\\" [(ngModel)]=\\\"userDetail.deaExpirationDate\\\" #deaExpirationDate=\\\"ngModel\\\" (change)=\\\"setDeaValidation()\\\">\\r\\n                    <span *ngIf=\\\"deaExpirationDate.invalid && (deaExpirationDate.dirty || deaExpirationDate.touched)\\\">\\r\\n                        <span id=\\\"DEAExpiryDatePatternError\\\" \\r\\n                              *ngIf=\\\"deaExpirationDate.errors.pattern && !isDEAExpDateRequired\\\" class=\\\"validation-color\\\">\\r\\n                            Enter a valid DEA Number Exp. Date(MM-DD-YYYY).\\r\\n                        </span>\\r\\n                    </span>\\r\\n                    <span id=\\\"DEAExpiryDateRequiredError\\\" \\r\\n                          *ngIf=\\\"isDEAExpDateRequired && (deaExpirationDate.dirty || deaExpirationDate.touched)\\\" class=\\\"validation-color\\\">\\r\\n                        DEA Number Exp. Date is required.\\r\\n                    </span>\\r\\n\\r\\n                </span>\\r\\n            </div>\\r\\n            <div class=\\\"erx-form-row\\\">\\r\\n                <span class=\\\"erx-form-label user-creation-form-label-spacing\\\">\\r\\n                    <label>DEA Schedule</label>\\r\\n                </span>\\r\\n                <span class=\\\"erx-form-input\\\">\\r\\n\\r\\n                    <input type=\\\"checkbox\\\" [(ngModel)]=\\\"userDetail.deaScheduleII\\\" id=\\\"deaSchedule2\\\"\\r\\n                           name=\\\"deaSchedule2\\\" #deaScheduleII=\\\"ngModel\\\" (change)=\\\"setDeaValidation()\\\">\\r\\n                    <span class=\\\"user-creation-dea-schedule\\\">\\r\\n                        II\\r\\n                    </span>\\r\\n                    <input type=\\\"checkbox\\\" [(ngModel)]=\\\"userDetail.deaScheduleIII\\\" id=\\\"deaSchedule3\\\"\\r\\n                           name=\\\"deaSchedule3\\\" #deaScheduleIII=\\\"ngModel\\\" (change)=\\\"setDeaValidation()\\\">\\r\\n                    <span class=\\\"user-creation-dea-schedule\\\">\\r\\n                        III\\r\\n                    </span>\\r\\n                    <input type=\\\"checkbox\\\" [(ngModel)]=\\\"userDetail.deaScheduleIV\\\" id=\\\"deaSchedule4\\\"\\r\\n                           name=\\\"deaSchedule4\\\" #deaScheduleIV=\\\"ngModel\\\" (change)=\\\"setDeaValidation()\\\">\\r\\n                    <span class=\\\"user-creation-dea-schedule\\\">\\r\\n                        IV\\r\\n                    </span>\\r\\n                    <input type=\\\"checkbox\\\" [(ngModel)]=\\\"userDetail.deaScheduleV\\\" id=\\\"deaSchedule5\\\"\\r\\n                           name=\\\"deaSchedule5\\\" #deaScheduleV=\\\"ngModel\\\" (change)=\\\"setDeaValidation()\\\">\\r\\n                    <span class=\\\"user-creation-dea-schedule\\\">\\r\\n                        V\\r\\n                    </span>\\r\\n\\r\\n                    <span id=\\\"ControlSubstanceSelectionError\\\" \\r\\n                          *ngIf=\\\"isDEAScheduleRequired &&  \\r\\n                           (deaScheduleII.dirty || deaScheduleII.touched\\r\\n                           || deaScheduleIII.dirty || deaScheduleIII.touched\\r\\n                           || deaScheduleIV.dirty || deaScheduleIV.touched\\r\\n                          || deaScheduleV.dirty || deaScheduleV.touched)\\\" class=\\\"validation-color\\\">\\r\\n                        Select atleast one DEA Schedule.\\r\\n                    </span>\\r\\n                </span>\\r\\n            </div>\\r\\n            <div class=\\\"erx-form-row\\\">\\r\\n                <span class=\\\"erx-form-label user-creation-form-label-spacing\\\">\\r\\n                    <label><span class=\\\"highlight-star erx-form-star-position\\\">*</span>State License Number</label>\\r\\n                </span>\\r\\n                <span class=\\\"erx-form-input\\\">\\r\\n                    <input id=\\\"stateLicenseNumber\\\" name=\\\"stateLicenseNumber\\\" class=\\\"input-medium\\\"\\r\\n                           required maxlength=\\\"35\\\" [pattern]=\\\"noLeadingSpacePattern\\\"\\r\\n                           [(ngModel)]=\\\"userDetail.stateLicenseNumber\\\" #stateLicenseNumber=\\\"ngModel\\\">\\r\\n\\r\\n                    <span *ngIf=\\\"stateLicenseNumber.invalid && (stateLicenseNumber.dirty || stateLicenseNumber.touched)\\\">\\r\\n                        <span id=\\\"StateLicenseMandatoryError\\\" *ngIf=\\\"stateLicenseNumber.errors.required\\\" class=\\\"validation-color\\\">\\r\\n                            State License Number is required.\\r\\n                        </span>\\r\\n                        <span id=\\\"StateLicensePatternError\\\" *ngIf=\\\"stateLicenseNumber.errors.pattern\\\" class=\\\"validation-color\\\">\\r\\n                            Enter a valid State License Number.\\r\\n                        </span>\\r\\n                    </span>\\r\\n                </span>\\r\\n            </div>\\r\\n            <div class=\\\"erx-form-row\\\">\\r\\n                <span class=\\\"erx-form-label user-creation-form-label-spacing\\\">\\r\\n                    <label><span class=\\\"highlight-star erx-form-star-position\\\">*</span>State License Issuing State</label>\\r\\n                </span>\\r\\n                <span class=\\\"erx-form-input\\\">\\r\\n                    <select id=\\\"ddlStateLicenseIssueState\\\"\\r\\n                            type=\\\"text\\\"\\r\\n                            name=\\\"stateLicenseIssueState\\\"\\r\\n                            class=\\\"input-medium\\\"\\r\\n                            required\\r\\n                            [(ngModel)]=\\\"userDetail.stateLicenseIssueState\\\"\\r\\n                            #stateLicenseIssueState=\\\"ngModel\\\">\\r\\n                        <option [value]=\\\"undefined\\\" selected disabled>-- Select a State --</option>\\r\\n                        <option *ngFor=\\\"let item of states\\\" [value]=\\\"item.state\\\">\\r\\n                            {{item.description}}\\r\\n                        </option>\\r\\n                    </select>\\r\\n                    <span *ngIf=\\\"stateLicenseIssueState.invalid && (stateLicenseIssueState.dirty || stateLicenseIssueState.touched)\\\">\\r\\n                        <span *ngIf=\\\"stateLicenseIssueState.errors.required\\\"\\r\\n                              id=\\\"stateLicenseIssuingStateMandatoryError\\\"\\r\\n                              class=\\\"validation-color\\\">\\r\\n                            State License Issuing State is required.\\r\\n                        </span>\\r\\n                    </span>\\r\\n                </span>\\r\\n            </div>\\r\\n            <div class=\\\"erx-form-row\\\">\\r\\n                <span class=\\\"erx-form-label user-creation-form-label-spacing\\\">\\r\\n                    <label><span class=\\\"highlight-star erx-form-star-position\\\">*</span>State License Exp. Date</label>\\r\\n                </span>\\r\\n\\r\\n                <span class=\\\"erx-form-input\\\">\\r\\n                    <input type=\\\"text\\\" id=\\\"stateLicenseExpirationDate\\\" name=\\\"stateLicenseExpirationDate\\\" class=\\\"input-medium\\\"\\r\\n                           required [pattern]=\\\"datePattern\\\" placeholder=\\\"MM-DD-YYYY\\\"\\r\\n                           [(ngModel)]=\\\"userDetail.stateLicenseExpirationDate\\\" #stateLicenseExpirationDate=\\\"ngModel\\\">\\r\\n\\r\\n                    <span *ngIf=\\\"stateLicenseExpirationDate.invalid && (stateLicenseExpirationDate.dirty || stateLicenseExpirationDate.touched)\\\">\\r\\n                        <span *ngIf=\\\"stateLicenseExpirationDate.errors.required\\\" id=\\\"stateLicenseExpDateMandatoryError\\\" class=\\\"validation-color\\\">\\r\\n                            State License Exp. Date is required.\\r\\n                        </span>\\r\\n                        <span id=\\\"stateLicenseExpirationDatePatternError\\\" *ngIf=\\\"stateLicenseExpirationDate.errors.pattern\\\" class=\\\"validation-color\\\">\\r\\n                            Enter a valid State License Exp. Date(MM-DD-YYYY).\\r\\n                        </span>\\r\\n                    </span>\\r\\n\\r\\n                </span>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!--Cut started here-->\\r\\n        <div class=\\\"erx-form-sub-heading font-setting-bold font-uppercase\\\">\\r\\n            User Credentials & Security\\r\\n        </div>\\r\\n        <div>\\r\\n            <input type=\\\"radio\\\" [value]=\\\"false\\\" name=\\\"isLinkExistingShieldUser\\\" checked [(ngModel)]=\\\"isLinkExistingShieldUser\\\"> Create a New ePrescribe Account\\r\\n            <input type=\\\"radio\\\" [value]=\\\"true\\\" name=\\\"isLinkExistingShieldUser\\\" [(ngModel)]=\\\"isLinkExistingShieldUser\\\"> Link to an existing Account\\r\\n        </div>\\r\\n        <div [style.display]=\\\"!isLinkExistingShieldUser ? 'block' : 'none'\\\">\\r\\n            <div class=\\\"user-creation-user-name-control-spacing\\\">\\r\\n                <app-user-account #userNameChild [userExistsErrorMessage]=\\\"userExistsErrorMessage\\\" [userNameLabel]=\\\"userNameLabel\\\"></app-user-account>\\r\\n            </div>\\r\\n            <div class=\\\"user-creation-user-password-control-spacing\\\">\\r\\n                <app-user-password #pwdChild></app-user-password>\\r\\n            </div>\\r\\n            <div class=\\\"user-creation-security-control-spacing\\\">\\r\\n                <app-user-security-questions #securityQuestion></app-user-security-questions>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div [style.display]=\\\"isLinkExistingShieldUser ? 'block' : 'none'\\\">\\r\\n            <div class=\\\"user-creation-existing-user-control-spacing\\\">\\r\\n                <user-existing-account #userExisting></user-existing-account>\\r\\n            </div> \\r\\n        </div>\\r\\n        <div class=\\\"erx-form-sub-heading font-setting-bold font-uppercase\\\">\\r\\n            Acknowledgement\\r\\n        </div>\\r\\n        <div class=\\\"erx-form-row user-creation-captcha-control-spacing\\\">\\r\\n            <show-captcha #captchaControl ></show-captcha>         \\r\\n        </div>\\r\\n        <div class=\\\"erx-form-row\\\">\\r\\n            The next step is to verify you are who you say you are through an online identity management process provided by ID.me. ID.me will ask you to provide information about yourself to verify your identity including  driver's license or passport information or state issued ID and social security number. Please review the ID.me Terms of Service listed below and then click on Submit.\\r\\n        </div>\\r\\n        <div class=\\\"erx-form-row\\\">\\r\\n            <input type=\\\"checkbox\\\" [(ngModel)]=\\\"userDetail.idMeTermsAccepted\\\" id=\\\"chkAcceptedIDmeTerms\\\"\\r\\n                   name=\\\"idMeTermsAccepted\\\" #idMeTermsAccepted=\\\"ngModel\\\" required> I have reviewed my registration entries and\\r\\n            <a [href]=\\\"idmeTerms\\\" target=\\\"_blank\\\" id=\\\"lnkIDmeTerms\\\">ID.me Terms of Service</a>.\\r\\n            <span *ngIf=\\\"idMeTermsAccepted.invalid && (idMeTermsAccepted.dirty || idMeTermsAccepted.touched)\\\" class=\\\"validation-color\\\">\\r\\n                Kindly review the ID.me Terms of Service and accept it.\\r\\n            </span>\\r\\n        </div>\\r\\n        <div class=\\\"erx-form-row\\\">\\r\\n            <button id=\\\"btnSubmit\\\" type=\\\"submit\\\" class=\\\"button-style\\\">Submit</button>\\r\\n            <span *ngIf=\\\"isValidationFailed\\\" class=\\\"validation-color\\\">\\r\\n                Kindly review the form, there seems to be an incomplete entry.\\r\\n            </span>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\\r\\n<div class=\\\"modal-backdrop fade in\\\" [style.display]=\\\"showModal ? 'block' : 'none'\\\"></div>\\r\\n<div *ngIf=\\\"showModal\\\">\\r\\n    <max-retry-failure-popup [shieldUserName]=\\\"userDetail.shieldUserName\\\"></max-retry-failure-popup>\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit, Input, Inject, ViewChild } from '@angular/core';\r\nimport { UserDetails, shieldSecretQuestion, SecretAnswers, State, Speciality, CreateRegistrantUserRequest, ValidateRegistrantModel } from '../user-creation/user-creation.model';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { UserCreateService } from '../../service/user-create.service';\r\nimport { Router, NavigationExtras } from '@angular/router';\r\nimport '../../Utils/String.Extension';\r\nimport { ShowCaptchaComponent } from '../../registration/show-captcha/show-captcha.component'\r\nimport { UserPasswordComponent } from '../user-password/user-password.component';\r\nimport { UserAccountNameComponent } from '../user-account-name/user-account-name.component';\r\nimport { UserSecurityQuestionsComponent } from '../user-security-questions/user-security-questions.component';\r\nimport { ExistingUserAccount } from '../user-existing-account/user-existing-account.model';\r\nimport { UserExistingAccountComponent    } from '../user-existing-account/user-existing-account.component';\r\nimport { CaptchaModel } from '../show-captcha/show-captcha.model';\r\nimport { IsStringNullUndefinedEmpty } from '../../utils/string-validator';\r\nimport { UserAccountName } from '../user-account-name/user-account-name.model';\r\nimport { UserPassword } from '../user-password/user-password.model';\r\nimport { SecurityQuestionAnswerModel } from '../user-security-questions/user-security-questions.model';\r\n\r\n@Component({\r\n    selector: 'app-user-creation',\r\n    templateUrl: './user-creation.component.html',\r\n    styleUrls: ['./user-creation.component.css']\r\n    \r\n})\r\nexport class UserCreationComponent implements OnInit {\r\n    sldUserName: string;\r\n    userDetail: UserDetails;\r\n    registrantuserdata: CreateRegistrantUserRequest = new CreateRegistrantUserRequest();\r\n    states: State[];\r\n    SpecialityList: Speciality[];\r\n    ShieldQuestions: any[];\r\n    SelectedShieldQuestion1: any;\r\n    SelectedShieldQuestion2: any;\r\n    SelectedShieldQuestion3: any;\r\n    isValidUser: boolean = false;\r\n    isValidNPI: boolean = true;\r\n    showInvalidDeaError: boolean = false;\r\n    isValidCaptcha: boolean = false; \r\n    isDEARequired: boolean = false;\r\n    isDEAExpDateRequired: boolean = false;\r\n    isDEAScheduleRequired: boolean = false;\r\n    idmeTerms: string;\r\n    mainAppLink: string;\r\n    isValidationFailed: boolean = false;\r\n    isLinkExistingShieldUser: boolean = false;\r\n    namePattern = \"^([a-zA-Z]+[\\\\s-'.]{0,35})*\";\r\n    suffixPattern = \"^([a-zA-Z]+[\\\\s-'.]{0,6})*\";\r\n    datePattern = \"^(0?[1-9]|1[0-2])\\\\-(0?[1-9]|1\\\\d|2\\\\d|3[01])-\\\\d{4}$\";\r\n    zipCodePattern = \"^(\\\\d{5})(?:\\\\d{4})?$\";\r\n    cityPattern = \"^([a-zA-Z]+[\\\\s-'.]{0,20})*\";\r\n    shieldUserNamePattern = \"^([a-zA-Z0-9]+[-,_.]{0,30})*\";\r\n    phoneFaxPattern = \"\\\\(?\\\\d{3}\\\\)?-? *\\\\d{3}-? *-?\\\\d{4}\";\r\n    noLeadingSpacePattern = \"^[^ ]([\\\\s\\\\S])*\";\r\n    componentState: NavigationExtras[\"state\"];\r\n    showModal = false;\r\n    isPasswordValid: boolean=false;\r\n    isSecurityQuestionAnswerValid: boolean = false;\r\n    isUserNameValid: boolean = false;\r\n    isExistingAccountValid: boolean = false;\r\n    userExistsErrorMessage: string;\r\n    userNameLabel: string;\r\n    @ViewChild('pwdChild') pwdChild: UserPasswordComponent;\r\n    @ViewChild('userNameChild') userNameChild: UserAccountNameComponent;\r\n    @ViewChild('securityQuestion') securityQuestion: UserSecurityQuestionsComponent;\r\n    @ViewChild('userExisting') userExisting: UserExistingAccountComponent;\r\n    @ViewChild('captchaControl') captchaControl: ShowCaptchaComponent;\r\n  \r\n    constructor(private userCreateService: UserCreateService, private domSanitizer: DomSanitizer, private router: Router,\r\n        @Inject('window') private window: any, ) {\r\n        this.componentState = this.router.getCurrentNavigation()?.extras?.state;\r\n    }\r\n    ngOnInit() {\r\n        this.userDetail = new UserDetails();\r\n        this.userDetail.deaScheduleII = false;\r\n        this.userDetail.deaScheduleIII = false;\r\n        this.userDetail.deaScheduleIV = false;\r\n        this.userDetail.deaScheduleV = false;\r\n\r\n        this.getInitialPageData();\r\n       \r\n        this.idmeTerms = \"https://www.id.me/terms\"; //Fetch this from server call - db config\r\n\r\n        if (this.componentState !== undefined && this.componentState !== null) {\r\n            this.userDetail.pricingStructure = this.componentState.SelectedPricingStructure;\r\n        }\r\n        this.mainAppLink = this.window?.appcontext?.login;\r\n        this.userExistsErrorMessage = \"Username already exists. Kindly provide another username.\";\r\n        this.userNameLabel = \"Username\";\r\n    }\r\n    getInitialPageData() {\r\n        this.userCreateService.getInitialPageData().subscribe(result => {\r\n\r\n            this.states = result.States as State[];\r\n            this.SpecialityList = result.Speciality as Speciality[];\r\n        });\r\n    }    \r\n    onNpiChanged() {\r\n        this.isValidNPI = true;\r\n    }\r\n\r\n    setDeaValidation() {\r\n        this.showInvalidDeaError = false;\r\n        let isDEARequired = false;\r\n        let isDEAExpDateRequired = false;\r\n        let isDEAScheduleRequired = false;\r\n        if (!IsStringNullUndefinedEmpty(this.userDetail.deaNumber)\r\n            || !IsStringNullUndefinedEmpty(this.userDetail.deaExpirationDate)\r\n            || this.userDetail.deaScheduleII || this.userDetail.deaScheduleIII || this.userDetail.deaScheduleIV || this.userDetail.deaScheduleV) {\r\n            if (IsStringNullUndefinedEmpty(this.userDetail.deaExpirationDate)) {\r\n                isDEAExpDateRequired = true;\r\n            }\r\n            if (!(this.userDetail.deaScheduleII || this.userDetail.deaScheduleIII || this.userDetail.deaScheduleIV || this.userDetail.deaScheduleV)) {\r\n                isDEAScheduleRequired = true;\r\n            }\r\n            if (IsStringNullUndefinedEmpty(this.userDetail.deaNumber)) {\r\n                isDEARequired = true;\r\n            }\r\n        }\r\n\r\n        this.isDEARequired = isDEARequired;\r\n        this.isDEAExpDateRequired = isDEAExpDateRequired;\r\n        this.isDEAScheduleRequired = isDEAScheduleRequired;\r\n    }\r\n\r\n    validateDEADetails() {\r\n        this.setDeaValidation();\r\n        return !(this.isDEARequired && this.isDEAExpDateRequired && this.isDEAScheduleRequired)\r\n    }\r\n\r\n    generateScretAnswer() {\r\n        let secretAnsweList: SecretAnswers[] = [];\r\n        if (!this.isLinkExistingShieldUser) {\r\n            let secretAnswer: SecretAnswers = new SecretAnswers();\r\n            let secretAnswer2: SecretAnswers = new SecretAnswers();\r\n            let secretAnswer3: SecretAnswers = new SecretAnswers();\r\n            secretAnswer.questionId = Number(this.userDetail.securityQuestion1);\r\n            secretAnswer.answer = this.userDetail.securityAnswer1;\r\n            secretAnsweList.push(secretAnswer);\r\n            secretAnswer2.questionId = Number(this.userDetail.securityQuestion2);\r\n            secretAnswer2.answer = this.userDetail.securityAnswer2;\r\n            secretAnsweList.push(secretAnswer2);\r\n            secretAnswer3.questionId = Number(this.userDetail.securityQuestion3);\r\n            secretAnswer3.answer = this.userDetail.securityAnswer3;\r\n            secretAnsweList.push(secretAnswer3);\r\n        }\r\n        return secretAnsweList;\r\n    }\r\n\r\n    setApiError(validateRegistrant: ValidateRegistrantModel) {\r\n        this.isValidationFailed = true;\r\n        if (!validateRegistrant.IsValidCaptcha) {\r\n            this.captchaControl.ShowInValidCaptchaError = true;\r\n            this.isValidNPI = true;\r\n            this.showInvalidDeaError = false;\r\n        }\r\n        else if (!validateRegistrant.IsValid && validateRegistrant.IsMaxRetryFinished) {\r\n            this.showModal = true;\r\n        }\r\n        else {\r\n            this.captchaControl.ShowInValidCaptchaError = false;\r\n            this.isValidNPI = validateRegistrant.IsValidNpi;\r\n            this.userExisting.ShowInValidExistingShieldAccountError = !validateRegistrant.IsValidExistingShieldUser;\r\n            this.showInvalidDeaError = false;\r\n            if (validateRegistrant.IsDeaCheck && !validateRegistrant.IsValidDEA) {\r\n                this.showInvalidDeaError = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    validateShieldUserAccount() {\r\n        if (this.isLinkExistingShieldUser) {\r\n            this.getExistingAccountDetails();\r\n            return this.isExistingAccountValid;\r\n        }\r\n        else {\r\n            this.getUserAccountNameDetails();\r\n            this.getPasswordDetails();\r\n            this.getSecurityQuestionAnswerDetails();\r\n            return (this.isPasswordValid && this.isUserNameValid && this.isSecurityQuestionAnswerValid);\r\n        }\r\n    }\r\n  \r\n    isUserCreationFormValid(data: any) {\r\n        this.markAllControlAsTouched(data);\r\n        this.getCaptchaDetails();\r\n        let isDeaValid = this.validateDEADetails();\r\n        let isShieldUserAccountValid = this.validateShieldUserAccount();\r\n        let isFrmValid = data.valid\r\n            && isDeaValid\r\n            && isShieldUserAccountValid\r\n            && this.isValidCaptcha;\r\n        this.isValidationFailed = !isFrmValid;\r\n        return isFrmValid;\r\n    }\r\n\r\n    markAllControlAsTouched(data: any) {\r\n        Object.keys(data.controls).forEach(field => {\r\n            const control = data.controls[field];\r\n            control.markAsTouched({ onlySelf: true });\r\n        })\r\n    }\r\n\r\n    onSubmit(data: any) {             \r\n        if (this.isUserCreationFormValid(data)) {\r\n            this.registrantuserdata.RegistrantUser = this.userDetail;\r\n            this.registrantuserdata.SecretAnswers = this.generateScretAnswer();\r\n            this.registrantuserdata.Captcha = this.userDetail.txtCapchaResponse;\r\n            this.registrantuserdata.IsLinkExistingShieldUser = this.isLinkExistingShieldUser;\r\n\r\n            this.userCreateService\r\n                .saveRegistrationData(this.registrantuserdata)\r\n                .subscribe((validateRegistrant: ValidateRegistrantModel) => {\r\n                    if (validateRegistrant.IsValid) {\r\n                        if (this.isLinkExistingShieldUser) {\r\n                            this.router.navigate([\"register/createlicense\"]);\r\n                        }\r\n                        else {\r\n                            this.router.navigate([\"register/welcome\"]);\r\n                        }\r\n                    }\r\n                    else {\r\n                        this.setApiError(validateRegistrant);\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n\r\n    getCaptchaDetails() {\r\n        let captchaModel: CaptchaModel;\r\n        captchaModel = this.captchaControl.GetCaptchaDetails()\r\n        this.userDetail.txtCapchaResponse = captchaModel.captchaText;\r\n        this.isValidCaptcha = captchaModel.isValid;\r\n    }\r\n\r\n    getUserAccountNameDetails() {\r\n        let userAccountName: UserAccountName;\r\n        userAccountName = this.userNameChild.GetUserAccountNameDetails();\r\n        this.userDetail.shieldUserName = userAccountName.shieldUserName;\r\n        this.isUserNameValid = userAccountName.isValid;\r\n    }\r\n\r\n    getPasswordDetails() {\r\n        let userPassword: UserPassword;\r\n        userPassword = this.pwdChild.GetPasswordDetails();\r\n        this.userDetail.password = userPassword.password;\r\n        this.userDetail.confirmPassword = userPassword.confirmPassword;\r\n        this.isPasswordValid = userPassword.isValid;\r\n    }\r\n\r\n    getSecurityQuestionAnswerDetails() {\r\n        let securityQuestionAnswerModel: SecurityQuestionAnswerModel;\r\n        securityQuestionAnswerModel = this.securityQuestion.GetSecurityQuestionAnswerDetails();\r\n        this.userDetail.securityQuestion1 = securityQuestionAnswerModel.selectedShieldQuestionOne;\r\n        this.userDetail.securityQuestion2 = securityQuestionAnswerModel.selectedShieldQuestionTwo;\r\n        this.userDetail.securityQuestion3 = securityQuestionAnswerModel.selectedShieldQuestionThree;\r\n        this.userDetail.securityAnswer1 = securityQuestionAnswerModel.securityAnswerOne;\r\n        this.userDetail.securityAnswer2 = securityQuestionAnswerModel.securityAnswerTwo;\r\n        this.userDetail.securityAnswer3 = securityQuestionAnswerModel.securityAnswerThree;\r\n        this.isSecurityQuestionAnswerValid = securityQuestionAnswerModel.isValid;\r\n    }\r\n\r\n    getExistingAccountDetails() {\r\n        let existingUserAccount: ExistingUserAccount;\r\n        existingUserAccount = this.userExisting.GetExistingAccountDetails();\r\n        this.userDetail.shieldUserName = existingUserAccount.shieldUserName;\r\n        this.userDetail.password = existingUserAccount.password;\r\n        this.isExistingAccountValid = existingUserAccount.isValid;\r\n    }\r\n    \r\n   \r\n}","﻿export class UserDetails {\r\n    firstname: string;\r\n    lastName: string;\r\n    middleName: string;\r\n    personalEmail: string;\r\n    contactPhoneNumber: string;\r\n    HomeAddress: string;\r\n    HomeAddress2: string;\r\n    city: string;\r\n    deaScheduleII: boolean;\r\n    deaScheduleIII: boolean ;\r\n    deaScheduleIV: boolean ;\r\n    deaScheduleV: boolean ;\r\n    shieldUserName: string;\r\n    password: string;\r\n    confirmPassword: string;\r\n    title: string;\r\n    suffix: string;\r\n    speciality1: string;\r\n    speciality2: string;\r\n    deaNumber: string;\r\n    zipCode: string;\r\n    state: string;\r\n    stateLicenseNumber: string;\r\n    deaExpirationDate: string;\r\n    idMeTermsAccepted: boolean;    \r\n    npi: string;\r\n    stateLicenseExpirationDate: string;\r\n    stateLicenseIssueState: string;\r\n    txtCapchaResponse: string;\r\n    securityQuestion1: string;\r\n    securityQuestion2: string;\r\n    securityQuestion3: string;\r\n    securityAnswer1: string;\r\n    securityAnswer2: string;\r\n    securityAnswer3: string;\r\n    pricingStructure: string;\r\n}\r\n\r\nexport class shieldSecretQuestion {\r\n    questionIDField: number;\r\n    questionField: string;\r\n}\r\n\r\nexport class SecretAnswers {\r\n\r\n    questionId: number;\r\n    answer: string;\r\n}\r\nexport class State {\r\n    state: string;\r\n    description: string\r\n}\r\n\r\nexport class Speciality {\r\n    specialty_CD: string;\r\n    specialty: string;\r\n}\r\n\r\nexport class CreateRegistrantUserRequest {\r\n    RegistrantUser: UserDetails;\r\n    SecretAnswers: SecretAnswers[];\r\n    Captcha: string;\r\n    IsLinkExistingShieldUser: boolean;\r\n}\r\n\r\nexport class ValidateRegistrantModel {\r\n    IsValid: boolean;\r\n    IsValidCaptcha: boolean;\r\n    IsValidNpi: boolean;\r\n    IsDeaCheck: boolean;\r\n    IsValidDEA: boolean;\r\n    IsValidExistingShieldUser: boolean;\r\n    IsMaxRetryFinished: boolean;\r\n}","﻿import { Component, OnInit } from '@angular/core';\r\nimport { RegistrationService } from '../../service/registration.service';\r\nimport { RegistrantContext } from '../can-load-registration.guard';\r\n\r\n@Component({\r\n    selector: 'user-csp-updater',\r\n    templateUrl: './user-csp-updater.template.html',\r\n})\r\n\r\nexport class UserCspUpdaterComponent implements OnInit {\r\n    constructor(private registrationService:RegistrationService) {\r\n\r\n    }\r\n    ngOnInit() {\r\n        this.registrationService.updateUserCsp().subscribe((registrantContext: RegistrantContext) => {\r\n            window.location.href = registrantContext.RedirectUrl;\r\n        })\r\n    }\r\n}","module.exports = \"<div>\\r\\n    Processing.....\\r\\n</div>\"","module.exports = \".user-existing-account-form-label-spacing {\\r\\n    width: 96px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNQQVJlZ2lzdHJhdGlvbi9zcmMvYXBwL3JlZ2lzdHJhdGlvbi91c2VyLWV4aXN0aW5nLWFjY291bnQvdXNlci1leGlzdGluZy1hY2NvdW50LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0FBQ2YiLCJmaWxlIjoiU1BBUmVnaXN0cmF0aW9uL3NyYy9hcHAvcmVnaXN0cmF0aW9uL3VzZXItZXhpc3RpbmctYWNjb3VudC91c2VyLWV4aXN0aW5nLWFjY291bnQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi51c2VyLWV4aXN0aW5nLWFjY291bnQtZm9ybS1sYWJlbC1zcGFjaW5nIHtcclxuICAgIHdpZHRoOiA5NnB4O1xyXG59XHJcbiJdfQ== */\"","module.exports = \"<form #userExisting=\\\"ngForm\\\" id=\\\"userExisting\\\">\\r\\n    <div>\\r\\n        <div class=\\\"erx-form-row\\\">\\r\\n            <span class=\\\"erx-form-label user-existing-account-form-label-spacing\\\">\\r\\n                <label><span class=\\\"highlight-star erx-form-star-position\\\">*</span>Username</label>\\r\\n            </span>\\r\\n            <span class=\\\"erx-form-input\\\">\\r\\n                <input type=\\\"text\\\" id=\\\"existingShieldUserName\\\" name=\\\"existingShieldUserName\\\" class=\\\"input-medium\\\" maxlength=\\\"30\\\"\\r\\n                       required [(ngModel)]=\\\"userExistingAccount.shieldUserName\\\" #existingShieldUserName=\\\"ngModel\\\" autocomplete=\\\"none\\\" (change)=\\\"onCredentialChanged()\\\"/>\\r\\n                <span *ngIf=\\\"existingShieldUserName.invalid && (existingShieldUserName.dirty || existingShieldUserName.touched)\\\">\\r\\n                    <span id=\\\"userNameMandatoryError\\\" *ngIf=\\\"existingShieldUserName.errors.required\\\" class=\\\"validation-color\\\">\\r\\n                        Username is required.\\r\\n                    </span>\\r\\n                </span>\\r\\n                <span *ngIf=\\\"ShowInValidExistingShieldAccountError\\\" class=\\\"validation-color\\\">\\r\\n                    Invalid user credentials\\r\\n                </span>\\r\\n            </span>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"erx-form-row\\\">\\r\\n        <span class=\\\"erx-form-label user-existing-account-form-label-spacing\\\">\\r\\n            <label><span class=\\\"highlight-star erx-form-star-position\\\">*</span>Password</label>\\r\\n        </span>\\r\\n        <span class=\\\"erx-form-input\\\">\\r\\n            <input type=\\\"password\\\" id=\\\"existingShieldUserPassword\\\" name=\\\"existingShieldUserPassword\\\" class=\\\"input-medium\\\"\\r\\n                   required [(ngModel)]=\\\"userExistingAccount.password\\\" #existingShieldUserPassword=\\\"ngModel\\\" maxlength=\\\"25\\\" (change)=\\\"onCredentialChanged()\\\"/>\\r\\n            <span *ngIf=\\\"existingShieldUserPassword.invalid && (existingShieldUserPassword.dirty || existingShieldUserPassword.touched)\\\">\\r\\n                <span id=\\\"passwordRequiredError\\\" *ngIf=\\\"existingShieldUserPassword.errors.required\\\" class=\\\"validation-color\\\">\\r\\n                    Password is required.\\r\\n                </span>\\r\\n            </span>\\r\\n        </span>\\r\\n    </div>\\r\\n</form>\"","import { Component, OnInit, ViewChild, Input } from '@angular/core';\r\nimport { ExistingUserAccount } from './user-existing-account.model';\r\n\r\n\r\n@Component({\r\n    selector: 'user-existing-account',\r\n    templateUrl: './user-existing-account.component.html',\r\n    styleUrls: ['./user-existing-account.component.css']\r\n\r\n})\r\nexport class UserExistingAccountComponent implements OnInit {\r\n    ShowInValidExistingShieldAccountError: boolean;\r\n    userExistingAccount: ExistingUserAccount = new ExistingUserAccount();\r\n    @ViewChild('userExisting') userExisting: any;\r\n    constructor() {\r\n    }\r\n  \r\n    ngOnInit() {\r\n    }\r\n\r\n    makeDirty() {\r\n        this.userExisting.controls.existingShieldUserName.markAsDirty();\r\n        this.userExisting.controls.existingShieldUserPassword.markAsDirty();\r\n    }\r\n\r\n    GetExistingAccountDetails(): ExistingUserAccount {\r\n        this.makeDirty();\r\n        this.userExistingAccount.isValid = this.userExisting.valid;\r\n        return this.userExistingAccount;\r\n    }\r\n    onCredentialChanged() {\r\n        this.ShowInValidExistingShieldAccountError = false;\r\n    }\r\n\r\n}","﻿export class ExistingUserAccount {\r\n    shieldUserName: string;\r\n    password: string;\r\n    isValid: boolean;\r\n}","module.exports = \".user-creation-form-label-spacing {\\r\\n    width: 155px;\\r\\n}\\r\\n\\r\\n.user-creation-form-rules {\\r\\n    margin-left: 131px;\\r\\n}\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNQQVJlZ2lzdHJhdGlvbi9zcmMvYXBwL3JlZ2lzdHJhdGlvbi91c2VyLXBhc3N3b3JkL3VzZXItcGFzc3dvcmQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxrQkFBa0I7QUFDdEIiLCJmaWxlIjoiU1BBUmVnaXN0cmF0aW9uL3NyYy9hcHAvcmVnaXN0cmF0aW9uL3VzZXItcGFzc3dvcmQvdXNlci1wYXNzd29yZC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnVzZXItY3JlYXRpb24tZm9ybS1sYWJlbC1zcGFjaW5nIHtcclxuICAgIHdpZHRoOiAxNTVweDtcclxufVxyXG5cclxuLnVzZXItY3JlYXRpb24tZm9ybS1ydWxlcyB7XHJcbiAgICBtYXJnaW4tbGVmdDogMTMxcHg7XHJcbn1cclxuXHJcbiJdfQ== */\"","module.exports = \"<form #pwdForm=\\\"ngForm\\\" id=\\\"pwdForm\\\">\\r\\n    <div class=\\\"erx-form-row\\\">\\r\\n        <span class=\\\"erx-form-label user-creation-form-label-spacing\\\">\\r\\n            <label><span class=\\\"highlight-star erx-form-star-position\\\">*</span>Password</label>\\r\\n        </span>\\r\\n        <span class=\\\"erx-form-input\\\">\\r\\n            <input type=\\\"password\\\" id=\\\"password1\\\" name=\\\"password1\\\" class=\\\"input-medium\\\"\\r\\n                   required [(ngModel)]=\\\"userPassWord.password\\\" #password1=\\\"ngModel\\\" maxlength=\\\"25\\\" minlength=\\\"8\\\" (blur)=\\\"validatePassword()\\\"/>\\r\\n            <span *ngIf=\\\"password1.invalid && (password1.dirty || password1.touched)\\\">\\r\\n                <span id=\\\"passwordRequiredError1\\\" *ngIf=\\\"password1.errors.required\\\" class=\\\"validation-color\\\">\\r\\n                    Password is required.\\r\\n                </span>\\r\\n\\r\\n                <span id=\\\"passwordPatternError\\\" *ngIf=\\\"password1.errors.invalid\\\" class=\\\"validation-color\\\">\\r\\n                    Password does not meet criteria mentioned below.\\r\\n                </span>\\r\\n            </span>\\r\\n        </span>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"erx-form-row\\\">\\r\\n        <span class=\\\"erx-form-label user-creation-form-label-spacing\\\">\\r\\n            <label><span class=\\\"highlight-star erx-form-star-position\\\">*</span>Confirm Password</label>\\r\\n        </span>\\r\\n        <span class=\\\"erx-form-input\\\">\\r\\n            <input type=\\\"password\\\" id=\\\"confirmPassword1\\\" name=\\\"confirmPassword1\\\" class=\\\"input-medium\\\"\\r\\n                   required [(ngModel)]=\\\"userPassWord.confirmPassword\\\" #confirmPassword1=\\\"ngModel\\\" maxlength=\\\"25\\\" minlength=\\\"8\\\" />\\r\\n            \\r\\n            <span *ngIf=\\\"confirmPassword1.invalid && (confirmPassword1.dirty || confirmPassword1.touched)\\\">\\r\\n                <span id=\\\"confirmPasswordMandatoryError\\\" *ngIf=\\\"confirmPassword1.errors.required\\\" class=\\\"validation-color\\\">\\r\\n                    Confirm Password is required.\\r\\n                </span>\\r\\n                <span id=\\\"confirmPasswordPatternError\\\" *ngIf=\\\"confirmPassword1.errors.pattern\\\" class=\\\"validation-color\\\">\\r\\n                    Passwords do not match.\\r\\n                </span>\\r\\n            </span>\\r\\n       \\r\\n        </span>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"erx-form-row\\\">\\r\\n        <span class=\\\"erx-form-label user-creation-form-label-spacing\\\">\\r\\n            <label>Rules</label>\\r\\n        </span>\\r\\n        <span class=\\\"erx-form-input\\\">\\r\\n            Must have between 8 (min) and 25 (max) characters and any three of the following:\\r\\n        </span>\\r\\n        <div class=\\\"user-creation-form-rules\\\">\\r\\n            <ul>\\r\\n                <li>One (1) upper case character</li>\\r\\n                <li>One (1) lower case character</li>\\r\\n                <li>One (1) special character</li>\\r\\n                <li>One (1) number</li>\\r\\n            </ul>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>\"","import { Component, ViewChild } from '@angular/core';\r\nimport { UserPassword } from '../user-password/user-password.model';\r\n\r\n\r\n@Component({\r\n    selector: 'app-user-password',\r\n    templateUrl: './user-password.component.html',\r\n    styleUrls: ['./user-password.component.css']\r\n})\r\nexport class UserPasswordComponent  {\r\n    \r\n    @ViewChild('pwdForm') pwdForm: any;\r\n    userPassWord: UserPassword = new UserPassword();\r\n\r\n    constructor() {\r\n            \r\n    }\r\n\r\n    makeDirty() {\r\n        this.pwdForm.controls.password1.markAsDirty();\r\n        this.pwdForm.controls.confirmPassword1.markAsDirty();\r\n    }\r\n\r\n    GetPasswordDetails() {\r\n        this.makeDirty();\r\n        this.userPassWord.isValid = this.pwdForm.valid;\r\n        return this.userPassWord;\r\n    }\r\n\r\n    validatePassword() {\r\n        let txtPasswordValue = this.userPassWord.password as string;\r\n        if (!txtPasswordValue.PasswordValidator()) {\r\n            this.pwdForm.controls[\"password1\"].setErrors({\r\n                \"invalid\": \"Invalid Password\"\r\n            });\r\n        } else {\r\n            this.pwdForm.controls[\"password1\"].setErrors(null);\r\n        }\r\n    }\r\n\r\n    validateConfirmPassword() {\r\n        let txtPasswordValue = this.userPassWord.password as string;\r\n        let txtConfirmPasswordValue = this.userPassWord.confirmPassword as string;\r\n\r\n        if (txtConfirmPasswordValue != txtPasswordValue) {\r\n            this.pwdForm.controls[\"confirmPassword1\"].setErrors({\r\n                \"pattern\": \"Passwords do not match\"\r\n            });\r\n            return;\r\n        }\r\n        else {\r\n            this.pwdForm.controls[\"confirmPassword1\"].setErrors(null);\r\n            return;\r\n        }\r\n    }\r\n}","﻿export class UserPassword {\r\n    \r\n    password: string;\r\n    confirmPassword: string;\r\n    isValid: boolean;\r\n}\r\n","module.exports = \"\\r\\n.user-creation-password-rules {\\r\\n    height: 80px;\\r\\n}\\r\\n\\r\\n    .user-creation-password-rules > ul {\\r\\n        position: relative;\\r\\n        top: 3px;\\r\\n    }\\r\\n\\r\\n    .user-creation-password-rules > ul > li {\\r\\n            position: relative;\\r\\n            left: 2px;\\r\\n            list-style-position: inside;\\r\\n        }\\r\\n\\r\\n    .user-creation-dea-schedule {\\r\\n    margin-left: -7px;\\r\\n    margin-right: 8px;\\r\\n    padding-bottom: 11px;\\r\\n    margin-bottom: 7px;\\r\\n    position: relative;\\r\\n    top: -7px;\\r\\n}\\r\\n\\r\\n    .captcha-dimensions {\\r\\n    height: 50px;\\r\\n    width: 200px;\\r\\n}\\r\\n\\r\\n    .user-creation-captcha-input-group {\\r\\n    display: inline-block;\\r\\n    padding-left: 15px;\\r\\n    position: relative;\\r\\n    top: -9px;\\r\\n}\\r\\n\\r\\n    .user-creation-captcha-label {\\r\\n    display: inline-block;\\r\\n    padding-left: 25px;\\r\\n}\\r\\n\\r\\n    .user-creation-captcha-input {\\r\\n    display: block;\\r\\n    padding-top: 5px;\\r\\n    padding-left: 10px;\\r\\n}\\r\\n\\r\\n    .user-creation-security-questions {\\r\\n    padding-left: 1px;\\r\\n    padding-right: 365px;\\r\\n}\\r\\n\\r\\n    .user-creation-security-questions-first-row {\\r\\n    margin-top: 3px;\\r\\n}\\r\\n\\r\\n    .user-creation-captcha-refresh {\\r\\n    clear: both;\\r\\n    cursor: pointer;\\r\\n    padding-top: 5px;\\r\\n}\\r\\n\\r\\n    .user-creation-already-completed {\\r\\n    margin: 10px 0px 25px 0px;\\r\\n}\\r\\n\\r\\n    .user-creation-already-completed > span {\\r\\n        font-weight: 900;\\r\\n        font-size: 14px;\\r\\n        padding-right: 10px;\\r\\n    }\\r\\n\\r\\n    .user-creation-already-completed > a {\\r\\n        color: #5e4da5;\\r\\n        text-decoration: none;\\r\\n    }\\r\\n\\r\\n    .user-creation-information {\\r\\n    margin: 20px 0px;\\r\\n    padding: 10px;\\r\\n    background-color: #D6ECEE;\\r\\n}\\r\\n\\r\\n    .user-creation-information > img {\\r\\n        position: relative;\\r\\n        top: 3px;\\r\\n    }\\r\\n\\r\\n    .user-creation-information > span {\\r\\n        font-weight: 900;\\r\\n    }\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNQQVJlZ2lzdHJhdGlvbi9zcmMvYXBwL3JlZ2lzdHJhdGlvbi91c2VyLXNlY3VyaXR5LXF1ZXN0aW9ucy91c2VyLXNlY3VyaXR5LXF1ZXN0aW9ucy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtJQUNJLFlBQVk7QUFDaEI7O0lBRUk7UUFDSSxrQkFBa0I7UUFDbEIsUUFBUTtJQUNaOztJQUVJO1lBQ0ksa0JBQWtCO1lBQ2xCLFNBQVM7WUFDVCwyQkFBMkI7UUFDL0I7O0lBRVI7SUFDSSxpQkFBaUI7SUFDakIsaUJBQWlCO0lBQ2pCLG9CQUFvQjtJQUNwQixrQkFBa0I7SUFDbEIsa0JBQWtCO0lBQ2xCLFNBQVM7QUFDYjs7SUFFQTtJQUNJLFlBQVk7SUFDWixZQUFZO0FBQ2hCOztJQUVBO0lBQ0kscUJBQXFCO0lBQ3JCLGtCQUFrQjtJQUNsQixrQkFBa0I7SUFDbEIsU0FBUztBQUNiOztJQUVBO0lBQ0kscUJBQXFCO0lBQ3JCLGtCQUFrQjtBQUN0Qjs7SUFFQTtJQUNJLGNBQWM7SUFDZCxnQkFBZ0I7SUFDaEIsa0JBQWtCO0FBQ3RCOztJQUVBO0lBQ0ksaUJBQWlCO0lBQ2pCLG9CQUFvQjtBQUN4Qjs7SUFFQTtJQUNJLGVBQWU7QUFDbkI7O0lBRUE7SUFDSSxXQUFXO0lBQ1gsZUFBZTtJQUNmLGdCQUFnQjtBQUNwQjs7SUFFQTtJQUNJLHlCQUF5QjtBQUM3Qjs7SUFFSTtRQUNJLGdCQUFnQjtRQUNoQixlQUFlO1FBQ2YsbUJBQW1CO0lBQ3ZCOztJQUVBO1FBQ0ksY0FBYztRQUNkLHFCQUFxQjtJQUN6Qjs7SUFFSjtJQUNJLGdCQUFnQjtJQUNoQixhQUFhO0lBQ2IseUJBQXlCO0FBQzdCOztJQUVJO1FBQ0ksa0JBQWtCO1FBQ2xCLFFBQVE7SUFDWjs7SUFFQTtRQUNJLGdCQUFnQjtJQUNwQiIsImZpbGUiOiJTUEFSZWdpc3RyYXRpb24vc3JjL2FwcC9yZWdpc3RyYXRpb24vdXNlci1zZWN1cml0eS1xdWVzdGlvbnMvdXNlci1zZWN1cml0eS1xdWVzdGlvbnMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG4udXNlci1jcmVhdGlvbi1wYXNzd29yZC1ydWxlcyB7XHJcbiAgICBoZWlnaHQ6IDgwcHg7XHJcbn1cclxuXHJcbiAgICAudXNlci1jcmVhdGlvbi1wYXNzd29yZC1ydWxlcyA+IHVsIHtcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgdG9wOiAzcHg7XHJcbiAgICB9XHJcblxyXG4gICAgICAgIC51c2VyLWNyZWF0aW9uLXBhc3N3b3JkLXJ1bGVzID4gdWwgPiBsaSB7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAgICAgbGVmdDogMnB4O1xyXG4gICAgICAgICAgICBsaXN0LXN0eWxlLXBvc2l0aW9uOiBpbnNpZGU7XHJcbiAgICAgICAgfVxyXG5cclxuLnVzZXItY3JlYXRpb24tZGVhLXNjaGVkdWxlIHtcclxuICAgIG1hcmdpbi1sZWZ0OiAtN3B4O1xyXG4gICAgbWFyZ2luLXJpZ2h0OiA4cHg7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogMTFweDtcclxuICAgIG1hcmdpbi1ib3R0b206IDdweDtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIHRvcDogLTdweDtcclxufVxyXG5cclxuLmNhcHRjaGEtZGltZW5zaW9ucyB7XHJcbiAgICBoZWlnaHQ6IDUwcHg7XHJcbiAgICB3aWR0aDogMjAwcHg7XHJcbn1cclxuXHJcbi51c2VyLWNyZWF0aW9uLWNhcHRjaGEtaW5wdXQtZ3JvdXAge1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgcGFkZGluZy1sZWZ0OiAxNXB4O1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgdG9wOiAtOXB4O1xyXG59XHJcblxyXG4udXNlci1jcmVhdGlvbi1jYXB0Y2hhLWxhYmVsIHtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIHBhZGRpbmctbGVmdDogMjVweDtcclxufVxyXG5cclxuLnVzZXItY3JlYXRpb24tY2FwdGNoYS1pbnB1dCB7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIHBhZGRpbmctdG9wOiA1cHg7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDEwcHg7XHJcbn1cclxuXHJcbi51c2VyLWNyZWF0aW9uLXNlY3VyaXR5LXF1ZXN0aW9ucyB7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDFweDtcclxuICAgIHBhZGRpbmctcmlnaHQ6IDM2NXB4O1xyXG59XHJcblxyXG4udXNlci1jcmVhdGlvbi1zZWN1cml0eS1xdWVzdGlvbnMtZmlyc3Qtcm93IHtcclxuICAgIG1hcmdpbi10b3A6IDNweDtcclxufVxyXG5cclxuLnVzZXItY3JlYXRpb24tY2FwdGNoYS1yZWZyZXNoIHtcclxuICAgIGNsZWFyOiBib3RoO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgcGFkZGluZy10b3A6IDVweDtcclxufVxyXG5cclxuLnVzZXItY3JlYXRpb24tYWxyZWFkeS1jb21wbGV0ZWQge1xyXG4gICAgbWFyZ2luOiAxMHB4IDBweCAyNXB4IDBweDtcclxufVxyXG5cclxuICAgIC51c2VyLWNyZWF0aW9uLWFscmVhZHktY29tcGxldGVkID4gc3BhbiB7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDkwMDtcclxuICAgICAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgICAgICAgcGFkZGluZy1yaWdodDogMTBweDtcclxuICAgIH1cclxuXHJcbiAgICAudXNlci1jcmVhdGlvbi1hbHJlYWR5LWNvbXBsZXRlZCA+IGEge1xyXG4gICAgICAgIGNvbG9yOiAjNWU0ZGE1O1xyXG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgIH1cclxuXHJcbi51c2VyLWNyZWF0aW9uLWluZm9ybWF0aW9uIHtcclxuICAgIG1hcmdpbjogMjBweCAwcHg7XHJcbiAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0Q2RUNFRTtcclxufVxyXG5cclxuICAgIC51c2VyLWNyZWF0aW9uLWluZm9ybWF0aW9uID4gaW1nIHtcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgdG9wOiAzcHg7XHJcbiAgICB9XHJcblxyXG4gICAgLnVzZXItY3JlYXRpb24taW5mb3JtYXRpb24gPiBzcGFuIHtcclxuICAgICAgICBmb250LXdlaWdodDogOTAwO1xyXG4gICAgfVxyXG4iXX0= */\"","module.exports = \"<form #securityQuestionForm=\\\"ngForm\\\" id=\\\"securityQuestionForm\\\">\\r\\n    <div class=\\\"erx-form-row\\\">\\r\\n        <span class=\\\"erx-form-label\\\"></span>\\r\\n        <span class=\\\"user-creation-security-questions\\\">\\r\\n            Select Security Questions\\r\\n        </span>\\r\\n        <span>\\r\\n            Provide Answers\\r\\n        </span>\\r\\n    </div>\\r\\n    <div class=\\\"erx-form-row user-creation-security-questions-first-row\\\">\\r\\n        <span class=\\\"erx-form-label\\\"></span>\\r\\n        <span class=\\\"erx-form-input\\\">\\r\\n            <select ID=\\\"questionOne\\\" name=\\\"questionOne\\\" Width=\\\"335px\\\" [(ngModel)]=\\\"securityQuestionAnswerModel.selectedShieldQuestionOne\\\" class=\\\"input-x-large\\\">\\r\\n                <option *ngFor=\\\"let item of ShieldQuestions\\\" [value]=\\\"item.questionIDField\\\">\\r\\n                    {{item.questionField}}\\r\\n                </option>\\r\\n            </select>\\r\\n        </span>\\r\\n        <span class=\\\"erx-form-input\\\">\\r\\n            <span class=\\\"highlight-star erx-form-star-position\\\">*</span>\\r\\n            <input type=\\\"text\\\" id=\\\"ansOne\\\" name=\\\"ansOne\\\" Width=\\\"335\\\" class=\\\"input-medium\\\"\\r\\n                   required [(ngModel)]=\\\"securityQuestionAnswerModel.securityAnswerOne\\\" #ansOne=\\\"ngModel\\\" />\\r\\n\\r\\n\\r\\n            <span *ngIf=\\\"ansOne.invalid && (ansOne.dirty || ansOne.touched)\\\">\\r\\n                <span *ngIf=\\\"ansOne.errors.required\\\" class=\\\"validation-color\\\">\\r\\n                    Select security questions and provide answers.\\r\\n                </span>\\r\\n            </span>\\r\\n        </span>\\r\\n    </div>\\r\\n    <div class=\\\"erx-form-row\\\">\\r\\n        <span class=\\\"erx-form-label\\\"></span>\\r\\n        <span class=\\\"erx-form-input\\\">\\r\\n            <select ID=\\\"questionTwo\\\" name=\\\"questionTwo\\\" Width=\\\"335px\\\" [(ngModel)]=\\\"securityQuestionAnswerModel.selectedShieldQuestionTwo\\\" class=\\\"input-x-large\\\">\\r\\n                <option *ngFor=\\\"let item of ShieldQuestions\\\" [value]=\\\"item.questionIDField\\\">\\r\\n                    {{item.questionField}}\\r\\n                </option>\\r\\n            </select>\\r\\n        </span>\\r\\n        <span class=\\\"erx-form-input\\\">\\r\\n            <span class=\\\"highlight-star erx-form-star-position\\\">*</span>\\r\\n            <input id=\\\"ansTwo\\\" name=\\\"ansTwo\\\" Width=\\\"335\\\" class=\\\"input-medium\\\"\\r\\n                   required [(ngModel)]=\\\"securityQuestionAnswerModel.securityAnswerTwo\\\" #ansTwo=\\\"ngModel\\\" />\\r\\n            <span *ngIf=\\\"ansTwo.invalid && (ansTwo.dirty || ansTwo.touched)\\\">\\r\\n                <span *ngIf=\\\"ansTwo.errors.required\\\" class=\\\"validation-color\\\">\\r\\n                    Select security questions and provide answers.\\r\\n                </span>\\r\\n            </span>\\r\\n            <span *ngIf=\\\"(securityQuestionAnswerModel.selectedShieldQuestionTwo == securityQuestionAnswerModel.selectedShieldQuestionThree \\r\\n                  || securityQuestionAnswerModel.selectedShieldQuestionTwo==securityQuestionAnswerModel.selectedShieldQuestionOne) \\r\\n                  && securityQuestionAnswerModel.selectedShieldQuestionTwo\\\" class=\\\"validation-color\\\">\\r\\n                Select different question.\\r\\n            </span>\\r\\n            <span *ngIf=\\\"(securityQuestionAnswerModel.securityAnswerTwo == securityQuestionAnswerModel.securityAnswerThree \\r\\n                  || securityQuestionAnswerModel.securityAnswerTwo==securityQuestionAnswerModel.securityAnswerOne) \\r\\n                  && securityQuestionAnswerModel.securityAnswerTwo\\\" class=\\\"validation-color\\\">\\r\\n                Select different answer.\\r\\n            </span>\\r\\n        </span>\\r\\n    </div>\\r\\n    <div class=\\\"erx-form-row\\\">\\r\\n        <span class=\\\"erx-form-label\\\"></span>\\r\\n        <span class=\\\"erx-form-input\\\">\\r\\n            <select ID=\\\"questionThree\\\" name=\\\"questionThree\\\" Width=\\\"335px\\\" [(ngModel)]=\\\"securityQuestionAnswerModel.selectedShieldQuestionThree\\\" class=\\\"input-x-large\\\">\\r\\n                <option *ngFor=\\\"let item of ShieldQuestions\\\" [value]=\\\"item.questionIDField\\\">\\r\\n                    {{item.questionField}}\\r\\n                </option>\\r\\n            </select>\\r\\n        </span>\\r\\n        <span class=\\\"erx-form-input\\\">\\r\\n            <span class=\\\"highlight-star erx-form-star-position\\\">*</span>\\r\\n            <input id=\\\"ansThree\\\" name=\\\"ansThree\\\" Width=\\\"335\\\" class=\\\"input-medium\\\"\\r\\n                   required [(ngModel)]=\\\"securityQuestionAnswerModel.securityAnswerThree\\\" #ansThree=\\\"ngModel\\\" />\\r\\n            <span *ngIf=\\\"ansThree.invalid && (ansThree.dirty || ansThree.touched)\\\">\\r\\n                <span *ngIf=\\\"ansThree.errors.required\\\" class=\\\"validation-color\\\">\\r\\n                    Select security questions and provide answers.\\r\\n                </span>\\r\\n            </span>\\r\\n            <span *ngIf=\\\"(securityQuestionAnswerModel.selectedShieldQuestionThree == securityQuestionAnswerModel.selectedShieldQuestionTwo \\r\\n                  || securityQuestionAnswerModel.selectedShieldQuestionThree==securityQuestionAnswerModel.selectedShieldQuestionOne) \\r\\n                  && securityQuestionAnswerModel.selectedShieldQuestionThree\\\" class=\\\"validation-color\\\">\\r\\n                Select different question.\\r\\n            </span>\\r\\n            <span *ngIf=\\\"(securityQuestionAnswerModel.securityAnswerThree == securityQuestionAnswerModel.securityAnswerTwo \\r\\n                  || securityQuestionAnswerModel.securityAnswerThree==securityQuestionAnswerModel.securityAnswerOne) \\r\\n                  && securityQuestionAnswerModel.securityAnswerThree\\\" class=\\\"validation-color\\\">\\r\\n                Select different answer.\\r\\n            </span>\\r\\n        </span>\\r\\n    </div>\\r\\n    </form>\\r\\n\\r\\n\"","/// <reference path=\"user-security-questions.model.ts\" />\r\n/// <reference path=\"user-security-questions.model.ts\" />\r\nimport { Component, OnInit, Inject, Output,EventEmitter, ViewChild } from '@angular/core';\r\nimport { UserCreateService } from '../../service/user-create.service';\r\nimport { SecurityQuestionAnswerModel, ShieldSecretQuestion } from './user-security-questions.model';\r\n\r\n@Component({\r\n    selector: 'app-user-security-questions',\r\n    templateUrl: './user-security-questions.component.html',\r\n    styleUrls: ['./user-security-questions.component.css']\r\n})\r\nexport class UserSecurityQuestionsComponent implements OnInit {\r\n    securityQuestionAnswerModel: SecurityQuestionAnswerModel = new SecurityQuestionAnswerModel()\r\n    ShieldQuestions: ShieldSecretQuestion[];\r\n    @ViewChild('securityQuestionForm') securityQuestionForm: any;\r\n\r\n    makeDirty() {\r\n        this.securityQuestionForm.controls.ansOne.markAsDirty();\r\n        this.securityQuestionForm.controls.ansTwo.markAsDirty();\r\n        this.securityQuestionForm.controls.ansThree.markAsDirty();\r\n    }\r\n\r\n    validateSecurityQuestions() {\r\n        if (this.securityQuestionAnswerModel.selectedShieldQuestionOne == this.securityQuestionAnswerModel.selectedShieldQuestionTwo\r\n            || this.securityQuestionAnswerModel.selectedShieldQuestionOne == this.securityQuestionAnswerModel.selectedShieldQuestionThree\r\n            || this.securityQuestionAnswerModel.selectedShieldQuestionTwo == this.securityQuestionAnswerModel.selectedShieldQuestionThree) {\r\n            return false;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    validateSecurityAnswers() {\r\n        if (this.securityQuestionAnswerModel.securityAnswerOne == this.securityQuestionAnswerModel.securityAnswerTwo\r\n            || this.securityQuestionAnswerModel.securityAnswerOne == this.securityQuestionAnswerModel.securityAnswerThree\r\n            || this.securityQuestionAnswerModel.securityAnswerTwo == this.securityQuestionAnswerModel.securityAnswerThree) {\r\n            return false;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    GetSecurityQuestionAnswerDetails() {\r\n        this.makeDirty();\r\n        this.securityQuestionAnswerModel.isValid = this.securityQuestionForm.valid\r\n            && this.validateSecurityQuestions()\r\n            && this.validateSecurityAnswers();\r\n        return this.securityQuestionAnswerModel;\r\n    }\r\n\r\n    constructor(private userCreateService: UserCreateService) {\r\n    }\r\n    ngOnInit() {\r\n        this.getInitialPageData();\r\n    }\r\n\r\n    getInitialPageData() {\r\n        this.userCreateService.getSecurityQuestions().subscribe(result => {\r\n            this.setShieldQuestionsDefaultValues(result.SecurityQuestions);\r\n        });\r\n    }\r\n\r\n    setShieldQuestionsDefaultValues(securityquestions: any) {\r\n        if (securityquestions) {\r\n            this.ShieldQuestions = securityquestions as ShieldSecretQuestion[];\r\n            this.securityQuestionAnswerModel.selectedShieldQuestionOne = this.ShieldQuestions.find(x => x.questionIDField == 1).questionIDField;\r\n            this.securityQuestionAnswerModel.selectedShieldQuestionTwo = this.ShieldQuestions.find(x => x.questionIDField == 2).questionIDField;\r\n            this.securityQuestionAnswerModel.selectedShieldQuestionThree = this.ShieldQuestions.find(x => x.questionIDField == 3).questionIDField;\r\n        }\r\n    }\r\n\r\n}","﻿export class SecurityQuestionAnswerModel {\r\n    securityAnswerOne: string;\r\n    securityAnswerTwo: string;\r\n    securityAnswerThree: string;\r\n    selectedShieldQuestionOne: any;\r\n    selectedShieldQuestionTwo: any;\r\n    selectedShieldQuestionThree: any;\r\n    isValid: boolean;\r\n}\r\nexport class ShieldSecretQuestion {\r\n    questionIDField: number;\r\n    questionField: string;\r\n}\r\n\r\n","module.exports = \".welcome-left-panel {\\r\\n    padding: 15px 10px 10px 10px;\\r\\n    margin: 10px;\\r\\n    float: left;\\r\\n}\\r\\n\\r\\n.welcome-right-panel {\\r\\n    padding: 15px 10px 10px 10px;\\r\\n    margin: 10px;\\r\\n    padding-right: 0px;\\r\\n    margin-right: 0px;\\r\\n}\\r\\n\\r\\n.welcome-right-panel > img {\\r\\n        width: 360px;\\r\\n    }\\r\\n\\r\\n.welcome-group {\\r\\n    margin-bottom: 2px;\\r\\n}\\r\\n\\r\\n.welcome-buttons {\\r\\n    padding: 10px;\\r\\n    margin: 10px;\\r\\n    clear: both;\\r\\n}\\r\\n\\r\\nul {\\r\\n    padding-left: 18px;\\r\\n}\\r\\n\\r\\nli {\\r\\n    padding-bottom: 3px;\\r\\n}\\r\\n\\r\\n.welcome-nested-list-style {\\r\\n    padding-left: 10px;\\r\\n    margin-top: -10px;\\r\\n}\\r\\n\\r\\n.welcome-congratulations {\\r\\n    margin-bottom: 15px;\\r\\n    font-weight: 900;\\r\\n}\\r\\n\\r\\n.welcome-download-process-document {\\r\\n    margin-top: 12px;\\r\\n}\\r\\n\\r\\n.welcome-download-process-document > a {\\r\\n        font-weight: 900;\\r\\n    }\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNQQVJlZ2lzdHJhdGlvbi9zcmMvYXBwL3JlZ2lzdHJhdGlvbi93ZWxjb21lLXBhZ2Uvd2VsY29tZS1wYWdlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSw0QkFBNEI7SUFDNUIsWUFBWTtJQUNaLFdBQVc7QUFDZjs7QUFFQTtJQUNJLDRCQUE0QjtJQUM1QixZQUFZO0lBQ1osa0JBQWtCO0lBQ2xCLGlCQUFpQjtBQUNyQjs7QUFFSTtRQUNJLFlBQVk7SUFDaEI7O0FBRUo7SUFDSSxrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsWUFBWTtJQUNaLFdBQVc7QUFDZjs7QUFFQTtJQUNJLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixpQkFBaUI7QUFDckI7O0FBRUE7SUFDSSxtQkFBbUI7SUFDbkIsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksZ0JBQWdCO0FBQ3BCOztBQUVJO1FBQ0ksZ0JBQWdCO0lBQ3BCIiwiZmlsZSI6IlNQQVJlZ2lzdHJhdGlvbi9zcmMvYXBwL3JlZ2lzdHJhdGlvbi93ZWxjb21lLXBhZ2Uvd2VsY29tZS1wYWdlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIud2VsY29tZS1sZWZ0LXBhbmVsIHtcclxuICAgIHBhZGRpbmc6IDE1cHggMTBweCAxMHB4IDEwcHg7XHJcbiAgICBtYXJnaW46IDEwcHg7XHJcbiAgICBmbG9hdDogbGVmdDtcclxufVxyXG5cclxuLndlbGNvbWUtcmlnaHQtcGFuZWwge1xyXG4gICAgcGFkZGluZzogMTVweCAxMHB4IDEwcHggMTBweDtcclxuICAgIG1hcmdpbjogMTBweDtcclxuICAgIHBhZGRpbmctcmlnaHQ6IDBweDtcclxuICAgIG1hcmdpbi1yaWdodDogMHB4O1xyXG59XHJcblxyXG4gICAgLndlbGNvbWUtcmlnaHQtcGFuZWwgPiBpbWcge1xyXG4gICAgICAgIHdpZHRoOiAzNjBweDtcclxuICAgIH1cclxuXHJcbi53ZWxjb21lLWdyb3VwIHtcclxuICAgIG1hcmdpbi1ib3R0b206IDJweDtcclxufVxyXG5cclxuLndlbGNvbWUtYnV0dG9ucyB7XHJcbiAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgbWFyZ2luOiAxMHB4O1xyXG4gICAgY2xlYXI6IGJvdGg7XHJcbn1cclxuXHJcbnVsIHtcclxuICAgIHBhZGRpbmctbGVmdDogMThweDtcclxufVxyXG5cclxubGkge1xyXG4gICAgcGFkZGluZy1ib3R0b206IDNweDtcclxufVxyXG5cclxuLndlbGNvbWUtbmVzdGVkLWxpc3Qtc3R5bGUge1xyXG4gICAgcGFkZGluZy1sZWZ0OiAxMHB4O1xyXG4gICAgbWFyZ2luLXRvcDogLTEwcHg7XHJcbn1cclxuXHJcbi53ZWxjb21lLWNvbmdyYXR1bGF0aW9ucyB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxNXB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDkwMDtcclxufVxyXG5cclxuLndlbGNvbWUtZG93bmxvYWQtcHJvY2Vzcy1kb2N1bWVudCB7XHJcbiAgICBtYXJnaW4tdG9wOiAxMnB4O1xyXG59XHJcblxyXG4gICAgLndlbGNvbWUtZG93bmxvYWQtcHJvY2Vzcy1kb2N1bWVudCA+IGEge1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA5MDA7XHJcbiAgICB9XHJcbiJdfQ== */\"","module.exports = \"<div id=\\\"welcome-title\\\" class=\\\"title-bar title-bar-heading branded-background-color branded-font-color\\\">\\r\\n    Welcome to {{title}}!\\r\\n</div>\\r\\n\\r\\n<div class=\\\"welcome-left-panel\\\">\\r\\n    <div class=\\\"welcome-group welcome-congratulations\\\">\\r\\n        Congratulations on completing Step 1 of the {{title}} Registration!\\r\\n    </div>\\r\\n    <div class=\\\"welcome-group\\\">\\r\\n        In order to send prescriptions electronically you will need to complete our identity proofing process through our trusted vendor ID.me.\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"welcome-group\\\">\\r\\n        <div class=\\\"erx-form-sub-heading font-setting-bold font-uppercase\\\">\\r\\n            Before You Proceed\\r\\n        </div>\\r\\n        <ul>\\r\\n            <li>Download and install the ID.me Authenticator app from the application store associated with your smart phone <span>(Apple Store or Google Play).</span></li>\\r\\n            <li>Be sure that your smart phone <span class=\\\"highlight-star\\\">*</span> (or tablet) has a functioning camera and browser that can receive text messages</li>\\r\\n            <li>Once you begin the ID.me identity proofing registration, you will need the following information</li>\\r\\n        </ul>\\r\\n        <div class=\\\"welcome-nested-list-style\\\">\\r\\n            <ol>\\r\\n                <li>Your ePrescribe User ID and Password that you just created</li>\\r\\n                <li>Your individual email address (group/shared emails are NOT allowed)</li>\\r\\n                <li>Either your Drivers License or Passport or State Issued ID</li>\\r\\n                <li>Your Social Security Number</li>\\r\\n            </ol>\\r\\n        </div>\\r\\n    </div>\\r\\n   \\r\\n    <div class=\\\"welcome-group\\\">\\r\\n        <span class=\\\"highlight-star\\\">*</span> This must be the same device you will always use to generate the passcodes when prescribing controlled substances.\\r\\n    </div>\\r\\n    <div class=\\\"welcome-group welcome-download-process-document\\\">\\r\\n        <a target=\\\"_blank\\\" href=\\\"/Help/Documents/IDmeRegistrationProcess.pdf\\\"> Click here to review the process</a>.\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"welcome-right-panel\\\">\\r\\n    <img src=\\\"/images/registration/idmePlayStoreImage.png\\\" />\\r\\n</div>\\r\\n\\r\\n<div class=\\\"welcome-buttons\\\">\\r\\n    <input type=\\\"button\\\" (click)=\\\"navigateToCSP()\\\" class=\\\"button-style\\\" value=\\\"Continue\\\">\\r\\n</div>\\r\\n\\r\\n\"","﻿import { Component, OnInit } from '@angular/core';\r\nimport { Router, NavigationExtras } from '@angular/router';\r\nimport { WelcomeService } from '../../service/welcome-service'\r\nimport { RegistrantContext } from '../can-load-registration.guard';\r\n\r\n@Component({\r\n    selector: 'welcome-page',\r\n    templateUrl: './welcome-page.component.html',\r\n    styleUrls: ['./welcome-page.component.css']\r\n})\r\n\r\nexport class WelcomePageComponent {\r\n    public title: string = \"ePrescribe\";\r\n\r\n    constructor(private welcomeService: WelcomeService) {\r\n        let appContext = (window as any).appcontext;\r\n        this.title = appContext.appName;\r\n    }    \r\n\r\n    navigateToCSP() {\r\n        this.welcomeService\r\n            .logRegistrantUserNavigationToCSP()\r\n            .subscribe((registrantContext: RegistrantContext) => {\r\n                window.location.href = registrantContext.CspUrl;\r\n            });\r\n    }\r\n}","﻿import { Injectable } from '@angular/core';\r\nimport { DataService } from './data.service';\r\nimport { Observable } from 'rxjs';\r\nimport { LinkAccountRequestModel, Workflow, LinkExistingUserModel } from '../registration/activate-user/link-account-request-model'\r\nimport { ActivationCodeModel, ValidateActivationCodeModel } from '../registration/activate-user/activation-code.model';\r\n@Injectable()\r\nexport class ActivationCodeService {\r\n    constructor(private dataService: DataService) {\r\n    }\r\n    \r\n    validateActivationCode(activationCodeModel: ActivationCodeModel): Observable<ValidateActivationCodeModel> {\r\n        return this.dataService.post(\"api/anonymous/user-activation/validate-activation-code/\", activationCodeModel);\r\n    }\r\n    intializeWorkFlow(data: any): Observable<Workflow> {\r\n        return this.dataService.post(\"api/anonymous/user-activation/intialize-workflow/\", data);\r\n    }\r\n    linkToExistingUser(linkAccountModel: LinkAccountRequestModel): Observable<LinkExistingUserModel> {\r\n        return this.dataService.post(\"api/anonymous/user-activation/link-existing-user/\", linkAccountModel);\r\n    }\r\n}","﻿import { Injectable } from '@angular/core';\r\nimport { DataService } from './data.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class CaptchaService {\r\n     \r\n    constructor(private dataService: DataService) {        \r\n    }   \r\n    getCaptcha() {\r\n        return this.dataService.get(\"api/anonymous/user-registration/getcaptcha\");\r\n    } \r\n\r\n\r\n}","﻿import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { map, catchError } from 'rxjs/operators'\r\nimport { HttpClient, HttpHeaders, HttpResponse, HttpErrorResponse } from '@angular/common/http';\r\nimport { of } from 'rxjs';\r\nimport { ApiResponse } from '../api-response.model';\r\nimport { MessageService } from './message.service';\r\n\r\n\r\n@Injectable()\r\nexport class DataService {\r\n\r\n    constructor(private http: HttpClient, private messageService: MessageService) { }\r\n\r\n    public get<T>(url: string, skipErrorPage: (x: HttpErrorResponse) => boolean = null) {\r\n        let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n        return this.http.get(url, { headers: headers, observe: \"response\" })\r\n            .pipe(\r\n                map((resp: HttpResponse<ApiResponse<T>>) => {\r\n                    return this.extractApiResponse<T>(resp);\r\n                }),\r\n                catchError(this.handleError<any>(url, null, false, skipErrorPage))\r\n            );\r\n    }\r\n\r\n    public post<T, H>(url: string, data: T, customErrorMessage: string = \"\") {\r\n        let headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n        return this.http.post(url, data, { headers: headers, observe: \"response\" })\r\n            .pipe(\r\n                map((resp: HttpResponse<ApiResponse<H>>) => {\r\n                    return this.extractApiResponse<H>(resp, customErrorMessage);\r\n                }),\r\n                catchError(this.handleError<any>(url, null, customErrorMessage.length > 0))\r\n            );\r\n    }\r\n\r\n    private extractApiResponse<T>(apiResponse: HttpResponse<ApiResponse<T>>, customErrorMessage: string = \"\") {\r\n        if (apiResponse?.body.ErrorContext) {\r\n            throw new HttpErrorResponse({ status: 500, statusText: `${customErrorMessage} ${apiResponse?.body.ErrorContext.Message}` });\r\n        }\r\n        //If anything unable to interpret from server redirect to the exception page\r\n        return apiResponse.body.Payload != null ? apiResponse.body.Payload as T : {};\r\n    }\r\n\r\n    /**\r\n    * Handle Http operation that failed.\r\n    * Let the app continue.\r\n    * @param operation - name of the operation that failed\r\n    * @param result - optional value to return as the observable result\r\n    */\r\n    private handleError<T>(operation = 'operation', result?: T, avoidCustomText: boolean = false, skipErrorPage = null) {\r\n        return (error: HttpErrorResponse): Observable<T> => {\r\n\r\n            if (skipErrorPage && skipErrorPage(error))\r\n                return of(result as T);\r\n\r\n            // TODO: send the error to app insight infrastructure\r\n            let errorAddition: string = avoidCustomText ? \"\" : \"Please contact customer support!\";\r\n            //Display to customer\r\n            this.messageService.notify(`${error.statusText}. ${errorAddition}`);\r\n\r\n            // Let the app keep running by returning an empty result.\r\n            return of(result as T);\r\n        };\r\n    }\r\n}","﻿import { Injectable } from '@angular/core';\r\nimport { DataService } from './data.service';\r\nimport { LicenseInfo } from '../registration/license-creation/license-creation.model';\r\n@Injectable()\r\nexport class LicenseCreateService {\r\n    constructor(private dataService: DataService) { }\r\n    updateRegistrantPracticeDetails(licenseData: LicenseInfo) {        \r\n        return this.dataService.post(\"api/license-creation/update-practice-details\", licenseData);\r\n    }\r\n}","﻿import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class LoaderService {\r\n\r\n    public isLoading = new Subject<boolean>();\r\n    private _overrideLoading: boolean;\r\n    public get overrideLoading(): boolean {\r\n        return this._overrideLoading;\r\n    }\r\n\r\n    public show(forceOverrideLoader: boolean = false) {\r\n        this._overrideLoading = forceOverrideLoader;\r\n        this.isLoading.next(true);\r\n    }\r\n\r\n    public hide() {\r\n        this.isLoading.next(false);\r\n    }\r\n}","﻿import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n@Injectable()\r\nexport class MessageService {\r\n\r\n    public message: string = \"\";\r\n\r\n    constructor(private router: Router) {\r\n    }\r\n\r\n    public notify(message: string) {\r\n        this.message = message;\r\n        this.router.navigate([\"register/error\"]);\r\n    }\r\n}","﻿import { Injectable } from '@angular/core';\r\nimport { DataService } from './data.service';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class RegistrationService {    \r\n    constructor(private dataService: DataService) {\r\n    }\r\n    getRegistrantStatus(isLicencePage: boolean) {\r\n        let showErrorMessage = (error: HttpErrorResponse): boolean => {\r\n            //When response URL is login.aspx,means status check was not successful\r\n            //? In https://github.com/angular/angular/blob/7.2.x/packages/common/http/src/xhr.ts\r\n            // IE11 for XHR request dont values responseURL, hence in this f/w as fallback they keep request url\r\n            if (error.url && (error.url.toLowerCase().indexOf(\"login.aspx\") > -1 ||\r\n                error.url.toLowerCase().indexOf(\"api/registrantstatus\") > -1)) {\r\n                return true;\r\n            }\r\n            return false;\r\n        };\r\n        return this.dataService.get(\"api/registrantstatus/\" + isLicencePage, showErrorMessage);\r\n    }\r\n    updateUserCsp() {\r\n        return this.dataService.post(\"api/update-user-csp\",null);\r\n    }\r\n}","﻿import { Injectable, Inject } from '@angular/core';\r\nimport { DataService } from './data.service';\r\nimport { Observable } from 'rxjs';\r\nimport { ValidateRegistrantModel, CreateRegistrantUserRequest } from '../registration/user-creation/user-creation.model';\r\nimport { AccountDetails,  ValidateCreateUser } from '../registration/account-creation/account-creation.model';\r\n\r\n@Injectable()\r\nexport class UserCreateService {\r\n    private supportMailAddress: string;\r\n    constructor(private dataService: DataService, @Inject('window') private window: any) {\r\n        this.supportMailAddress = this.window?.appcontext?.supportMailAddress;\r\n    }\r\n\r\n    getInitialPageData() {\r\n        return this.dataService.get(\"api/anonymous/user-registration/setup-information\");\r\n    }\r\n\r\n    getSecurityQuestions() {\r\n        return this.dataService.get(\"api/anonymous/user-registration/setup-security-questions\");\r\n    }\r\n\r\n    validateShieldUserName(userName: string): Observable<boolean> {\r\n        return this.dataService.get<boolean>(\"api/anonymous/user-registration/checkuser/\" + userName);\r\n    }\r\n\r\n    getCaptcha() {\r\n        return this.dataService.get(\"api/anonymous/user-registration/getcaptcha\");\r\n    }\r\n\r\n    saveRegistrationData(userData: CreateRegistrantUserRequest): Observable<ValidateRegistrantModel> {\r\n        let customErrorMessage = `We encountered an error while trying to register. Kindly contact the ePrescribe support at (${this.supportMailAddress}), include your email address (${userData.RegistrantUser.personalEmail}) for assistance.`;\r\n        return this.dataService.post(\"api/anonymous/user-registration/create-registrant\", userData, customErrorMessage);\r\n    }\r\n\r\n    saveUserData(userData: AccountDetails): Observable<ValidateCreateUser> {\r\n        let customErrorMessage = `We encountered an error while trying to register. Kindly contact the ePrescribe support at (${this.supportMailAddress}), include your email address (${userData.personalEmail}) for assistance.`;\r\n        return this.dataService.post(\"api/anonymous/user-registration/create-user\", userData, customErrorMessage);\r\n    }\r\n} ","﻿import { Injectable } from '@angular/core';\r\nimport { DataService } from './data.service';\r\n\r\n@Injectable()\r\nexport class WelcomeService {\r\n    constructor(private dataService: DataService) { }\r\n    logRegistrantUserNavigationToCSP() {        \r\n        return this.dataService.post(\"api/welcome/geturl-for-navigation-to-csp\", null);\r\n    }\r\n}","﻿export function IsStringNullUndefinedEmpty(input) {\r\n    if (input == undefined\r\n        || input == null) {\r\n        return true;\r\n    }\r\n\r\n    let inputString = String(input);\r\n    if (inputString == '') {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { AppModule } from './app/app.module';\r\n\r\n//if (environment.production) {//Until we figure out the file replacement in webpack config.\r\nenableProdMode();\r\n\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n    .catch(err => console.error(err));\r\n"],"sourceRoot":""}