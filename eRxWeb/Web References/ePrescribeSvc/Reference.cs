//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace eRxWeb.ePrescribeSvc {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ePrescribeSvcSoap", Namespace="https://eprescribe.allscripts.com/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AuthenticatedUser))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BasicMedication))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Claim))]
    public partial class ePrescribeSvc : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetPDMPSamlTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback RefreshPPTPlusSamlTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback RefreshPDMPSamlTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPdmpEnrollmentFormInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMatchingPharmacyOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchAccountsByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetShieldPasswordExpirationDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddMessageTrackingAckOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMessageTrackingAcksOfUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback PrintRxsOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveItemFromDocumentStoreOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetRxDocumentStoreItemToPrintedStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConvertFromHtmlToPdfOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveEncryptedRegistrationKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveRegistrationSsoResponseOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateAndSignMobileAccessTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserShieldCspStatusInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback RtpsSendDispositionOperationCompleted;
        
        private System.Threading.SendOrPostCallback LogShieldAuditEventOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateRegistrantUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback CompleteRegistrationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRegistrantIdProofingLevelOfAssuranceOperationCompleted;
        
        private System.Threading.SendOrPostCallback LogRegistrationStepOperationCompleted;
        
        private System.Threading.SendOrPostCallback PassUserIdProofingAndNpiCheckForAutomationOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertTestPatientsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProcessHubMailboxHeaderListOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveEPADecisionRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendEPATxHubConnectorMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProcessNCPDPEPAMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddLicenseToUMPOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateLicenseInUMPOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUserToUMPOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserInUMPOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateLicenseInUMPByLicenseIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadLicenseForUMPOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUMPInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserUMPStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUMPUserStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLicenseUMPStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUMPLicenseStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProviderProgramEnrollmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback RxInfoConfirmOfferOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRxInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsProviderEnrolledInSpecialtyMedOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProcessInitiationRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStatusUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStatusAndUpdateDatabaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStatusByActivityIdAndUpdateDatabaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStatusUpdateByActivityIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfirmOfferOperationCompleted;
        
        private System.Threading.SendOrPostCallback DXCClientSyncWhitelistOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsRxInfoAvailableForDDIOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRxInfoDetailsLiteByRxIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRxInfoHtmlContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddOfficeLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOfficeLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOfficeLocationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePatientProblemOperationCompleted;
        
        private System.Threading.SendOrPostCallback SavePatientProblemOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientProblemsByPatientIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback SavePatientCCDOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchDiagnosisOperationCompleted;
        
        private System.Threading.SendOrPostCallback TypeAheadDiagnosisSearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRepresentativeDDIForRxNormNameCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRepresentativeMedispanIdForNDFRTCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPartnersBeingLoggedOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsPartnerLoggingEnabledOperationCompleted;
        
        private System.Threading.SendOrPostCallback EnableLoggingForPartnerOperationCompleted;
        
        private System.Threading.SendOrPostCallback DisableLoggingForPartnerByPartnerIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAllRecordsFromSvcInstrumentationLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsValidPartnerLicenseRelationshipOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllProvidersAndTraitsForLicenseOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetShieldOtpFormsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetShieldSendOtpOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthenicateOTPOperationCompleted;
        
        private System.Threading.SendOrPostCallback DoesActivationCodeExistOperationCompleted;
        
        private System.Threading.SendOrPostCallback ActivateAndUpdateUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback ActivateAndUpdateUtilitiesUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateLicenseForExistingShieldTenantOperationCompleted;
        
        private System.Threading.SendOrPostCallback LinkExistingShieldUserToeRxUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback LinkExistingShieldUserToUtilitiesUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthenticateOtpForSigningOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetShieldExternalTenantIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTeaserAdFromServiceAlertOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertAllUsersInEnterpriseForHubEnrollmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertAllUsersInLicenseForHubEnrollmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUserToIlearnOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetiAssistSamlTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPPTPlusSamlTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDenialReasonsOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadMedicationByDDIAndCoverageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOtpFormsForSigningOperationCompleted;
        
        private System.Threading.SendOrPostCallback RequestOTPOperationCompleted;
        
        private System.Threading.SendOrPostCallback SignRxMockOperationCompleted;
        
        private System.Threading.SendOrPostCallback ActivateDeativateUserAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback MarkUserAdminStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateShieldUserTenantAdminStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetShieldUserTraitOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetProviderTraitsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPartnersOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetShieldUserTraitUsingUserTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetShieldUserTraitUsingUserTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetIdProofingUrlOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetShieldUserTraitsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchMedicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchMedicationAndClassOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadMedicationByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetECouponOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsECouponAvailableForDDIOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetECouponDetailByRxIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback ECouponConfirmOfferOperationCompleted;
        
        private System.Threading.SendOrPostCallback AreECouponNotesToRxPharmacyNotesUpdatedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetECouponDetailsLiteByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetECouponTransactionDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetECouponDxcResponseXmlOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendMessageTwilioOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsSMSAlertDailyCountReachedOperationCompleted;
        
        private System.Threading.SendOrPostCallback ECouponRefillRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback ECouponRefillPrintRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveRxErrorOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertMessageQueueTxOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateMessageQueueTxOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadMessageQueueTxOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPendingScriptsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFailedScriptsOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsValidPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStateLicenseAndDeaExpiryDateForUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEnterpriseInfoByPartnerIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetACRCommunitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback LaunchClinicalViewerOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitAcrPixFeedForPatientOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientCCDOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExportCCDToDBMotionOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsUserLoggingEnabledOperationCompleted;
        
        private System.Threading.SendOrPostCallback EnableLoggingForUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback DisableLoggingForUserByUserIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback ToggleActiveStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUsersBeingLoggedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMainAppLogRecordsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAllRecordsFromInstrumentationLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInfoScriptsMessageListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInfoScriptsMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddInfoScriptsMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateInfoScriptsMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveEPAQuestionSetRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendPAInitiationRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendPARequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendToEPATaskListOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertEPARequestsAdditionalInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendToEPARequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateEPATaskStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendePACancelRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveePAUserPreferneceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllBackdoorSitesOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateBackdoorUserAuditLogEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientRxHubMatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFullAppversionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetApplicationShieldStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLicenseShieldStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback CacheResetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEligAndMedHxStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuditLogPatientInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuditLogPatientRxInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuditLogPatientRxCSInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuditLogUserInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuditLogLicenseInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchShieldUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUsersFromePrescribeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetShieldInternalAppIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetShieldInternalEnvironmentIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetShieldInternalTenantIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetShieldInternalAppInstanceIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetShieldExternalAppInstanceIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRolesForApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetShieldUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthenticateAndAuthorizeUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthorizeUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthenticateSsoUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback RefreshSamlTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServiceAccountShieldTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServiceAccountShieldSamlTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNewShieldActivationCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateShieldTenantAndUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuditLogShieldInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateShieldConnectivityOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthenticateAndAuthorizeUserAgainstShieldDebugOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResetAndGeneratePasswordForUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveUserAppPropertyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserCountForLicenseOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateShieldTenantOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateShieldTenantOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeUserPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback LinkAndAuthorizeFederatedUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback LinkFederatedIdentityToShieldAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateTrustedTenantOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllShieldSecretQuestionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveSecretQuestionAnswersOperationCompleted;
        
        private System.Threading.SendOrPostCallback EnrollProviderOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserShieldSecretQuestionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResetForgottenPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthenticateAndAuthorizeUtilUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEnterpriseePAStatusByPartnerIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEnterpriseePAStatusByClientIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSecUsersInfoAnd3rdPartiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateShieldUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateShieldUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetDEARegistrantStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReconciledControlledSubstanceCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback RxOptionsUsedInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProviderDEALicensesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDEALicensesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDEALicenseOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAdminCountForLicenseOperationCompleted;
        
        private System.Threading.SendOrPostCallback SignPrescriptionAndInsertSignedScriptMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientsByLicenseOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientsLoadByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientsLoadByDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllergyByPatientOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRxByPatientOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDiagnosisByPatientOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientLastPharmacyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProviderFavoritesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProviderByLicenseOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatientDemographicsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLicenseByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLicenseCreationDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLicenseSiteByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllSitesByLicenseIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLicenseByPatientIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLicensePreferencesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveLicensePreferenceOperationCompleted;
        
        private System.Threading.SendOrPostCallback DURCheckSingleRxByDDIOperationCompleted;
        
        private System.Threading.SendOrPostCallback DURCheckSingleRxByRxIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveRxDUROperationCompleted;
        
        private System.Threading.SendOrPostCallback SendRxToAssistantOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateRxTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePrescriptionStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateProviderOfRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePrescriptionRxDetailStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePrescriptionPharmacyIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateScriptMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteScriptMessagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateVerifyMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateErrorMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateDUREVTScriptMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendScriptMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendOutboundInfoScriptMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApproveScriptMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback RejectScriptMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAuditInfoByUserNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback PrescriptionUpdateCreationTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNewUniqueUserNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserInfoByUAISessionTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserInfoByMobileServiceSessionTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserNameExistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchUsersInAllDatabasesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchUsersInShieldOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserBasicOperationCompleted;
        
        private System.Threading.SendOrPostCallback DenyTaskRxOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEULAOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAdPrivacyPolicyOperationCompleted;
        
        private System.Threading.SendOrPostCallback EULARecentlyUpdatedOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddMedToScriptPadOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveCSDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback EditScriptPadOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFromScriptPadOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertRxHeaderCanceledOperationCompleted;
        
        private System.Threading.SendOrPostCallback MarkAsFulfilledOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadRxLiteByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetAsSelfReportedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetScriptPadOperationCompleted;
        
        private System.Threading.SendOrPostCallback DurScriptPadRxOperationCompleted;
        
        private System.Threading.SendOrPostCallback SavePatientOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ePrescribeSvc() {
            this.Url = global::eRxWeb.Properties.Settings.Default.eRxWeb_ePrescribeSvc_ePrescribeSvc;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetPDMPSamlTokenCompletedEventHandler GetPDMPSamlTokenCompleted;
        
        /// <remarks/>
        public event RefreshPPTPlusSamlTokenCompletedEventHandler RefreshPPTPlusSamlTokenCompleted;
        
        /// <remarks/>
        public event RefreshPDMPSamlTokenCompletedEventHandler RefreshPDMPSamlTokenCompleted;
        
        /// <remarks/>
        public event GetPdmpEnrollmentFormInfoCompletedEventHandler GetPdmpEnrollmentFormInfoCompleted;
        
        /// <remarks/>
        public event GetMatchingPharmacyCompletedEventHandler GetMatchingPharmacyCompleted;
        
        /// <remarks/>
        public event SearchAccountsByNameCompletedEventHandler SearchAccountsByNameCompleted;
        
        /// <remarks/>
        public event GetShieldPasswordExpirationDateCompletedEventHandler GetShieldPasswordExpirationDateCompleted;
        
        /// <remarks/>
        public event AddMessageTrackingAckCompletedEventHandler AddMessageTrackingAckCompleted;
        
        /// <remarks/>
        public event GetMessageTrackingAcksOfUserCompletedEventHandler GetMessageTrackingAcksOfUserCompleted;
        
        /// <remarks/>
        public event PrintRxsCompletedEventHandler PrintRxsCompleted;
        
        /// <remarks/>
        public event RetrieveItemFromDocumentStoreCompletedEventHandler RetrieveItemFromDocumentStoreCompleted;
        
        /// <remarks/>
        public event SetRxDocumentStoreItemToPrintedStatusCompletedEventHandler SetRxDocumentStoreItemToPrintedStatusCompleted;
        
        /// <remarks/>
        public event ConvertFromHtmlToPdfCompletedEventHandler ConvertFromHtmlToPdfCompleted;
        
        /// <remarks/>
        public event RetrieveEncryptedRegistrationKeyCompletedEventHandler RetrieveEncryptedRegistrationKeyCompleted;
        
        /// <remarks/>
        public event RetrieveRegistrationSsoResponseCompletedEventHandler RetrieveRegistrationSsoResponseCompleted;
        
        /// <remarks/>
        public event CreateAndSignMobileAccessTokenCompletedEventHandler CreateAndSignMobileAccessTokenCompleted;
        
        /// <remarks/>
        public event GetUserShieldCspStatusInfoCompletedEventHandler GetUserShieldCspStatusInfoCompleted;
        
        /// <remarks/>
        public event RtpsSendDispositionCompletedEventHandler RtpsSendDispositionCompleted;
        
        /// <remarks/>
        public event LogShieldAuditEventCompletedEventHandler LogShieldAuditEventCompleted;
        
        /// <remarks/>
        public event CreateRegistrantUserCompletedEventHandler CreateRegistrantUserCompleted;
        
        /// <remarks/>
        public event CompleteRegistrationCompletedEventHandler CompleteRegistrationCompleted;
        
        /// <remarks/>
        public event GetRegistrantIdProofingLevelOfAssuranceCompletedEventHandler GetRegistrantIdProofingLevelOfAssuranceCompleted;
        
        /// <remarks/>
        public event LogRegistrationStepCompletedEventHandler LogRegistrationStepCompleted;
        
        /// <remarks/>
        public event PassUserIdProofingAndNpiCheckForAutomationCompletedEventHandler PassUserIdProofingAndNpiCheckForAutomationCompleted;
        
        /// <remarks/>
        public event InsertTestPatientsCompletedEventHandler InsertTestPatientsCompleted;
        
        /// <remarks/>
        public event ProcessHubMailboxHeaderListCompletedEventHandler ProcessHubMailboxHeaderListCompleted;
        
        /// <remarks/>
        public event SaveEPADecisionRequestCompletedEventHandler SaveEPADecisionRequestCompleted;
        
        /// <remarks/>
        public event SendEPATxHubConnectorMessageCompletedEventHandler SendEPATxHubConnectorMessageCompleted;
        
        /// <remarks/>
        public event ProcessNCPDPEPAMessageCompletedEventHandler ProcessNCPDPEPAMessageCompleted;
        
        /// <remarks/>
        public event AddLicenseToUMPCompletedEventHandler AddLicenseToUMPCompleted;
        
        /// <remarks/>
        public event UpdateLicenseInUMPCompletedEventHandler UpdateLicenseInUMPCompleted;
        
        /// <remarks/>
        public event AddUserToUMPCompletedEventHandler AddUserToUMPCompleted;
        
        /// <remarks/>
        public event UpdateUserInUMPCompletedEventHandler UpdateUserInUMPCompleted;
        
        /// <remarks/>
        public event UpdateLicenseInUMPByLicenseIDCompletedEventHandler UpdateLicenseInUMPByLicenseIDCompleted;
        
        /// <remarks/>
        public event LoadLicenseForUMPCompletedEventHandler LoadLicenseForUMPCompleted;
        
        /// <remarks/>
        public event GetUMPInformationCompletedEventHandler GetUMPInformationCompleted;
        
        /// <remarks/>
        public event GetUserUMPStatusCompletedEventHandler GetUserUMPStatusCompleted;
        
        /// <remarks/>
        public event UpdateUMPUserStatusCompletedEventHandler UpdateUMPUserStatusCompleted;
        
        /// <remarks/>
        public event GetLicenseUMPStatusCompletedEventHandler GetLicenseUMPStatusCompleted;
        
        /// <remarks/>
        public event UpdateUMPLicenseStatusCompletedEventHandler UpdateUMPLicenseStatusCompleted;
        
        /// <remarks/>
        public event GetProviderProgramEnrollmentsCompletedEventHandler GetProviderProgramEnrollmentsCompleted;
        
        /// <remarks/>
        public event RxInfoConfirmOfferCompletedEventHandler RxInfoConfirmOfferCompleted;
        
        /// <remarks/>
        public event GetRxInfoCompletedEventHandler GetRxInfoCompleted;
        
        /// <remarks/>
        public event IsProviderEnrolledInSpecialtyMedCompletedEventHandler IsProviderEnrolledInSpecialtyMedCompleted;
        
        /// <remarks/>
        public event ProcessInitiationRequestCompletedEventHandler ProcessInitiationRequestCompleted;
        
        /// <remarks/>
        public event GetStatusUpdateCompletedEventHandler GetStatusUpdateCompleted;
        
        /// <remarks/>
        public event GetStatusAndUpdateDatabaseCompletedEventHandler GetStatusAndUpdateDatabaseCompleted;
        
        /// <remarks/>
        public event GetStatusByActivityIdAndUpdateDatabaseCompletedEventHandler GetStatusByActivityIdAndUpdateDatabaseCompleted;
        
        /// <remarks/>
        public event GetStatusUpdateByActivityIDCompletedEventHandler GetStatusUpdateByActivityIDCompleted;
        
        /// <remarks/>
        public event ConfirmOfferCompletedEventHandler ConfirmOfferCompleted;
        
        /// <remarks/>
        public event DXCClientSyncWhitelistCompletedEventHandler DXCClientSyncWhitelistCompleted;
        
        /// <remarks/>
        public event IsRxInfoAvailableForDDICompletedEventHandler IsRxInfoAvailableForDDICompleted;
        
        /// <remarks/>
        public event GetRxInfoDetailsLiteByRxIDCompletedEventHandler GetRxInfoDetailsLiteByRxIDCompleted;
        
        /// <remarks/>
        public event GetRxInfoHtmlContentCompletedEventHandler GetRxInfoHtmlContentCompleted;
        
        /// <remarks/>
        public event AddOfficeLocationCompletedEventHandler AddOfficeLocationCompleted;
        
        /// <remarks/>
        public event UpdateOfficeLocationCompletedEventHandler UpdateOfficeLocationCompleted;
        
        /// <remarks/>
        public event GetOfficeLocationsCompletedEventHandler GetOfficeLocationsCompleted;
        
        /// <remarks/>
        public event UpdatePatientProblemCompletedEventHandler UpdatePatientProblemCompleted;
        
        /// <remarks/>
        public event SavePatientProblemCompletedEventHandler SavePatientProblemCompleted;
        
        /// <remarks/>
        public event GetPatientProblemsByPatientIDCompletedEventHandler GetPatientProblemsByPatientIDCompleted;
        
        /// <remarks/>
        public event SavePatientCCDCompletedEventHandler SavePatientCCDCompleted;
        
        /// <remarks/>
        public event SearchDiagnosisCompletedEventHandler SearchDiagnosisCompleted;
        
        /// <remarks/>
        public event TypeAheadDiagnosisSearchCompletedEventHandler TypeAheadDiagnosisSearchCompleted;
        
        /// <remarks/>
        public event GetRepresentativeDDIForRxNormNameCodeCompletedEventHandler GetRepresentativeDDIForRxNormNameCodeCompleted;
        
        /// <remarks/>
        public event GetRepresentativeMedispanIdForNDFRTCodeCompletedEventHandler GetRepresentativeMedispanIdForNDFRTCodeCompleted;
        
        /// <remarks/>
        public event GetPartnersBeingLoggedCompletedEventHandler GetPartnersBeingLoggedCompleted;
        
        /// <remarks/>
        public event IsPartnerLoggingEnabledCompletedEventHandler IsPartnerLoggingEnabledCompleted;
        
        /// <remarks/>
        public event EnableLoggingForPartnerCompletedEventHandler EnableLoggingForPartnerCompleted;
        
        /// <remarks/>
        public event DisableLoggingForPartnerByPartnerIDCompletedEventHandler DisableLoggingForPartnerByPartnerIDCompleted;
        
        /// <remarks/>
        public event DeleteAllRecordsFromSvcInstrumentationLogCompletedEventHandler DeleteAllRecordsFromSvcInstrumentationLogCompleted;
        
        /// <remarks/>
        public event IsValidPartnerLicenseRelationshipCompletedEventHandler IsValidPartnerLicenseRelationshipCompleted;
        
        /// <remarks/>
        public event GetAllProvidersAndTraitsForLicenseCompletedEventHandler GetAllProvidersAndTraitsForLicenseCompleted;
        
        /// <remarks/>
        public event GetShieldOtpFormsCompletedEventHandler GetShieldOtpFormsCompleted;
        
        /// <remarks/>
        public event GetShieldSendOtpCompletedEventHandler GetShieldSendOtpCompleted;
        
        /// <remarks/>
        public event AuthenicateOTPCompletedEventHandler AuthenicateOTPCompleted;
        
        /// <remarks/>
        public event DoesActivationCodeExistCompletedEventHandler DoesActivationCodeExistCompleted;
        
        /// <remarks/>
        public event ActivateAndUpdateUserCompletedEventHandler ActivateAndUpdateUserCompleted;
        
        /// <remarks/>
        public event ActivateAndUpdateUtilitiesUserCompletedEventHandler ActivateAndUpdateUtilitiesUserCompleted;
        
        /// <remarks/>
        public event CreateLicenseForExistingShieldTenantCompletedEventHandler CreateLicenseForExistingShieldTenantCompleted;
        
        /// <remarks/>
        public event LinkExistingShieldUserToeRxUserCompletedEventHandler LinkExistingShieldUserToeRxUserCompleted;
        
        /// <remarks/>
        public event LinkExistingShieldUserToUtilitiesUserCompletedEventHandler LinkExistingShieldUserToUtilitiesUserCompleted;
        
        /// <remarks/>
        public event AuthenticateOtpForSigningCompletedEventHandler AuthenticateOtpForSigningCompleted;
        
        /// <remarks/>
        public event GetShieldExternalTenantIDCompletedEventHandler GetShieldExternalTenantIDCompleted;
        
        /// <remarks/>
        public event GetTeaserAdFromServiceAlertCompletedEventHandler GetTeaserAdFromServiceAlertCompleted;
        
        /// <remarks/>
        public event InsertAllUsersInEnterpriseForHubEnrollmentCompletedEventHandler InsertAllUsersInEnterpriseForHubEnrollmentCompleted;
        
        /// <remarks/>
        public event InsertAllUsersInLicenseForHubEnrollmentCompletedEventHandler InsertAllUsersInLicenseForHubEnrollmentCompleted;
        
        /// <remarks/>
        public event AddUserToIlearnCompletedEventHandler AddUserToIlearnCompleted;
        
        /// <remarks/>
        public event GetiAssistSamlTokenCompletedEventHandler GetiAssistSamlTokenCompleted;
        
        /// <remarks/>
        public event GetPPTPlusSamlTokenCompletedEventHandler GetPPTPlusSamlTokenCompleted;
        
        /// <remarks/>
        public event GetDenialReasonsCompletedEventHandler GetDenialReasonsCompleted;
        
        /// <remarks/>
        public event LoadMedicationByDDIAndCoverageCompletedEventHandler LoadMedicationByDDIAndCoverageCompleted;
        
        /// <remarks/>
        public event GetOtpFormsForSigningCompletedEventHandler GetOtpFormsForSigningCompleted;
        
        /// <remarks/>
        public event RequestOTPCompletedEventHandler RequestOTPCompleted;
        
        /// <remarks/>
        public event SignRxMockCompletedEventHandler SignRxMockCompleted;
        
        /// <remarks/>
        public event ActivateDeativateUserAccountCompletedEventHandler ActivateDeativateUserAccountCompleted;
        
        /// <remarks/>
        public event MarkUserAdminStatusCompletedEventHandler MarkUserAdminStatusCompleted;
        
        /// <remarks/>
        public event UpdateShieldUserTenantAdminStatusCompletedEventHandler UpdateShieldUserTenantAdminStatusCompleted;
        
        /// <remarks/>
        public event SetShieldUserTraitCompletedEventHandler SetShieldUserTraitCompleted;
        
        /// <remarks/>
        public event SetProviderTraitsCompletedEventHandler SetProviderTraitsCompleted;
        
        /// <remarks/>
        public event GetPartnersCompletedEventHandler GetPartnersCompleted;
        
        /// <remarks/>
        public event SetShieldUserTraitUsingUserTokenCompletedEventHandler SetShieldUserTraitUsingUserTokenCompleted;
        
        /// <remarks/>
        public event GetShieldUserTraitUsingUserTokenCompletedEventHandler GetShieldUserTraitUsingUserTokenCompleted;
        
        /// <remarks/>
        public event GetIdProofingUrlCompletedEventHandler GetIdProofingUrlCompleted;
        
        /// <remarks/>
        public event GetShieldUserTraitsCompletedEventHandler GetShieldUserTraitsCompleted;
        
        /// <remarks/>
        public event SearchMedicationCompletedEventHandler SearchMedicationCompleted;
        
        /// <remarks/>
        public event SearchMedicationAndClassCompletedEventHandler SearchMedicationAndClassCompleted;
        
        /// <remarks/>
        public event LoadMedicationByNameCompletedEventHandler LoadMedicationByNameCompleted;
        
        /// <remarks/>
        public event GetECouponCompletedEventHandler GetECouponCompleted;
        
        /// <remarks/>
        public event IsECouponAvailableForDDICompletedEventHandler IsECouponAvailableForDDICompleted;
        
        /// <remarks/>
        public event GetECouponDetailByRxIDCompletedEventHandler GetECouponDetailByRxIDCompleted;
        
        /// <remarks/>
        public event ECouponConfirmOfferCompletedEventHandler ECouponConfirmOfferCompleted;
        
        /// <remarks/>
        public event AreECouponNotesToRxPharmacyNotesUpdatedCompletedEventHandler AreECouponNotesToRxPharmacyNotesUpdatedCompleted;
        
        /// <remarks/>
        public event GetECouponDetailsLiteByIDCompletedEventHandler GetECouponDetailsLiteByIDCompleted;
        
        /// <remarks/>
        public event GetECouponTransactionDetailCompletedEventHandler GetECouponTransactionDetailCompleted;
        
        /// <remarks/>
        public event GetECouponDxcResponseXmlCompletedEventHandler GetECouponDxcResponseXmlCompleted;
        
        /// <remarks/>
        public event SendMessageTwilioCompletedEventHandler SendMessageTwilioCompleted;
        
        /// <remarks/>
        public event IsSMSAlertDailyCountReachedCompletedEventHandler IsSMSAlertDailyCountReachedCompleted;
        
        /// <remarks/>
        public event ECouponRefillRequestCompletedEventHandler ECouponRefillRequestCompleted;
        
        /// <remarks/>
        public event ECouponRefillPrintRequestCompletedEventHandler ECouponRefillPrintRequestCompleted;
        
        /// <remarks/>
        public event SaveRxErrorCompletedEventHandler SaveRxErrorCompleted;
        
        /// <remarks/>
        public event InsertMessageQueueTxCompletedEventHandler InsertMessageQueueTxCompleted;
        
        /// <remarks/>
        public event UpdateMessageQueueTxCompletedEventHandler UpdateMessageQueueTxCompleted;
        
        /// <remarks/>
        public event LoadMessageQueueTxCompletedEventHandler LoadMessageQueueTxCompleted;
        
        /// <remarks/>
        public event GetPendingScriptsCompletedEventHandler GetPendingScriptsCompleted;
        
        /// <remarks/>
        public event GetFailedScriptsCompletedEventHandler GetFailedScriptsCompleted;
        
        /// <remarks/>
        public event IsValidPasswordCompletedEventHandler IsValidPasswordCompleted;
        
        /// <remarks/>
        public event GetStateLicenseAndDeaExpiryDateForUserCompletedEventHandler GetStateLicenseAndDeaExpiryDateForUserCompleted;
        
        /// <remarks/>
        public event GetEnterpriseInfoByPartnerIDCompletedEventHandler GetEnterpriseInfoByPartnerIDCompleted;
        
        /// <remarks/>
        public event GetACRCommunitiesCompletedEventHandler GetACRCommunitiesCompleted;
        
        /// <remarks/>
        public event LaunchClinicalViewerCompletedEventHandler LaunchClinicalViewerCompleted;
        
        /// <remarks/>
        public event SubmitAcrPixFeedForPatientCompletedEventHandler SubmitAcrPixFeedForPatientCompleted;
        
        /// <remarks/>
        public event GetPatientCCDCompletedEventHandler GetPatientCCDCompleted;
        
        /// <remarks/>
        public event ExportCCDToDBMotionCompletedEventHandler ExportCCDToDBMotionCompleted;
        
        /// <remarks/>
        public event IsUserLoggingEnabledCompletedEventHandler IsUserLoggingEnabledCompleted;
        
        /// <remarks/>
        public event EnableLoggingForUserCompletedEventHandler EnableLoggingForUserCompleted;
        
        /// <remarks/>
        public event DisableLoggingForUserByUserIDCompletedEventHandler DisableLoggingForUserByUserIDCompleted;
        
        /// <remarks/>
        public event ToggleActiveStatusCompletedEventHandler ToggleActiveStatusCompleted;
        
        /// <remarks/>
        public event GetUsersBeingLoggedCompletedEventHandler GetUsersBeingLoggedCompleted;
        
        /// <remarks/>
        public event GetMainAppLogRecordsCompletedEventHandler GetMainAppLogRecordsCompleted;
        
        /// <remarks/>
        public event DeleteAllRecordsFromInstrumentationLogCompletedEventHandler DeleteAllRecordsFromInstrumentationLogCompleted;
        
        /// <remarks/>
        public event GetInfoScriptsMessageListCompletedEventHandler GetInfoScriptsMessageListCompleted;
        
        /// <remarks/>
        public event GetInfoScriptsMessageCompletedEventHandler GetInfoScriptsMessageCompleted;
        
        /// <remarks/>
        public event AddInfoScriptsMessageCompletedEventHandler AddInfoScriptsMessageCompleted;
        
        /// <remarks/>
        public event UpdateInfoScriptsMessageCompletedEventHandler UpdateInfoScriptsMessageCompleted;
        
        /// <remarks/>
        public event SaveEPAQuestionSetRequestCompletedEventHandler SaveEPAQuestionSetRequestCompleted;
        
        /// <remarks/>
        public event SendPAInitiationRequestCompletedEventHandler SendPAInitiationRequestCompleted;
        
        /// <remarks/>
        public event SendPARequestCompletedEventHandler SendPARequestCompleted;
        
        /// <remarks/>
        public event SendToEPATaskListCompletedEventHandler SendToEPATaskListCompleted;
        
        /// <remarks/>
        public event InsertEPARequestsAdditionalInfoCompletedEventHandler InsertEPARequestsAdditionalInfoCompleted;
        
        /// <remarks/>
        public event SendToEPARequestCompletedEventHandler SendToEPARequestCompleted;
        
        /// <remarks/>
        public event UpdateEPATaskStatusCompletedEventHandler UpdateEPATaskStatusCompleted;
        
        /// <remarks/>
        public event SendePACancelRequestCompletedEventHandler SendePACancelRequestCompleted;
        
        /// <remarks/>
        public event SaveePAUserPreferneceCompletedEventHandler SaveePAUserPreferneceCompleted;
        
        /// <remarks/>
        public event GetAllBackdoorSitesCompletedEventHandler GetAllBackdoorSitesCompleted;
        
        /// <remarks/>
        public event CreateBackdoorUserAuditLogEntryCompletedEventHandler CreateBackdoorUserAuditLogEntryCompleted;
        
        /// <remarks/>
        public event GetPatientRxHubMatchCompletedEventHandler GetPatientRxHubMatchCompleted;
        
        /// <remarks/>
        public event GetFullAppversionCompletedEventHandler GetFullAppversionCompleted;
        
        /// <remarks/>
        public event GetApplicationShieldStatusCompletedEventHandler GetApplicationShieldStatusCompleted;
        
        /// <remarks/>
        public event GetLicenseShieldStatusCompletedEventHandler GetLicenseShieldStatusCompleted;
        
        /// <remarks/>
        public event CacheResetCompletedEventHandler CacheResetCompleted;
        
        /// <remarks/>
        public event GetEligAndMedHxStatusCompletedEventHandler GetEligAndMedHxStatusCompleted;
        
        /// <remarks/>
        public event AuditLogPatientInsertCompletedEventHandler AuditLogPatientInsertCompleted;
        
        /// <remarks/>
        public event AuditLogPatientRxInsertCompletedEventHandler AuditLogPatientRxInsertCompleted;
        
        /// <remarks/>
        public event AuditLogPatientRxCSInsertCompletedEventHandler AuditLogPatientRxCSInsertCompleted;
        
        /// <remarks/>
        public event AuditLogUserInsertCompletedEventHandler AuditLogUserInsertCompleted;
        
        /// <remarks/>
        public event AuditLogLicenseInsertCompletedEventHandler AuditLogLicenseInsertCompleted;
        
        /// <remarks/>
        public event GetUsersCompletedEventHandler GetUsersCompleted;
        
        /// <remarks/>
        public event SearchShieldUsersCompletedEventHandler SearchShieldUsersCompleted;
        
        /// <remarks/>
        public event GetUsersFromePrescribeCompletedEventHandler GetUsersFromePrescribeCompleted;
        
        /// <remarks/>
        public event GetShieldInternalAppIDCompletedEventHandler GetShieldInternalAppIDCompleted;
        
        /// <remarks/>
        public event GetShieldInternalEnvironmentIDCompletedEventHandler GetShieldInternalEnvironmentIDCompleted;
        
        /// <remarks/>
        public event GetShieldInternalTenantIDCompletedEventHandler GetShieldInternalTenantIDCompleted;
        
        /// <remarks/>
        public event GetShieldInternalAppInstanceIDCompletedEventHandler GetShieldInternalAppInstanceIDCompleted;
        
        /// <remarks/>
        public event GetShieldExternalAppInstanceIDCompletedEventHandler GetShieldExternalAppInstanceIDCompleted;
        
        /// <remarks/>
        public event GetRolesForApplicationCompletedEventHandler GetRolesForApplicationCompleted;
        
        /// <remarks/>
        public event GetShieldUserCompletedEventHandler GetShieldUserCompleted;
        
        /// <remarks/>
        public event AuthenticateAndAuthorizeUserCompletedEventHandler AuthenticateAndAuthorizeUserCompleted;
        
        /// <remarks/>
        public event AuthorizeUserCompletedEventHandler AuthorizeUserCompleted;
        
        /// <remarks/>
        public event AuthenticateSsoUserCompletedEventHandler AuthenticateSsoUserCompleted;
        
        /// <remarks/>
        public event RefreshSamlTokenCompletedEventHandler RefreshSamlTokenCompleted;
        
        /// <remarks/>
        public event GetServiceAccountShieldTokenCompletedEventHandler GetServiceAccountShieldTokenCompleted;
        
        /// <remarks/>
        public event GetServiceAccountShieldSamlTokenCompletedEventHandler GetServiceAccountShieldSamlTokenCompleted;
        
        /// <remarks/>
        public event GetNewShieldActivationCodeCompletedEventHandler GetNewShieldActivationCodeCompleted;
        
        /// <remarks/>
        public event CreateShieldTenantAndUserCompletedEventHandler CreateShieldTenantAndUserCompleted;
        
        /// <remarks/>
        public event AuditLogShieldInsertCompletedEventHandler AuditLogShieldInsertCompleted;
        
        /// <remarks/>
        public event ValidateShieldConnectivityCompletedEventHandler ValidateShieldConnectivityCompleted;
        
        /// <remarks/>
        public event AuthenticateAndAuthorizeUserAgainstShieldDebugCompletedEventHandler AuthenticateAndAuthorizeUserAgainstShieldDebugCompleted;
        
        /// <remarks/>
        public event ResetAndGeneratePasswordForUserCompletedEventHandler ResetAndGeneratePasswordForUserCompleted;
        
        /// <remarks/>
        public event SaveUserAppPropertyCompletedEventHandler SaveUserAppPropertyCompleted;
        
        /// <remarks/>
        public event GetUserCountForLicenseCompletedEventHandler GetUserCountForLicenseCompleted;
        
        /// <remarks/>
        public event CreateShieldTenantCompletedEventHandler CreateShieldTenantCompleted;
        
        /// <remarks/>
        public event UpdateShieldTenantCompletedEventHandler UpdateShieldTenantCompleted;
        
        /// <remarks/>
        public event ChangeUserPasswordCompletedEventHandler ChangeUserPasswordCompleted;
        
        /// <remarks/>
        public event LinkAndAuthorizeFederatedUserCompletedEventHandler LinkAndAuthorizeFederatedUserCompleted;
        
        /// <remarks/>
        public event LinkFederatedIdentityToShieldAccountCompletedEventHandler LinkFederatedIdentityToShieldAccountCompleted;
        
        /// <remarks/>
        public event CreateTrustedTenantCompletedEventHandler CreateTrustedTenantCompleted;
        
        /// <remarks/>
        public event GetAllShieldSecretQuestionsCompletedEventHandler GetAllShieldSecretQuestionsCompleted;
        
        /// <remarks/>
        public event SaveSecretQuestionAnswersCompletedEventHandler SaveSecretQuestionAnswersCompleted;
        
        /// <remarks/>
        public event EnrollProviderCompletedEventHandler EnrollProviderCompleted;
        
        /// <remarks/>
        public event GetUserShieldSecretQuestionsCompletedEventHandler GetUserShieldSecretQuestionsCompleted;
        
        /// <remarks/>
        public event ResetForgottenPasswordCompletedEventHandler ResetForgottenPasswordCompleted;
        
        /// <remarks/>
        public event AuthenticateAndAuthorizeUtilUserCompletedEventHandler AuthenticateAndAuthorizeUtilUserCompleted;
        
        /// <remarks/>
        public event GetEnterpriseePAStatusByPartnerIDCompletedEventHandler GetEnterpriseePAStatusByPartnerIDCompleted;
        
        /// <remarks/>
        public event GetEnterpriseePAStatusByClientIDCompletedEventHandler GetEnterpriseePAStatusByClientIDCompleted;
        
        /// <remarks/>
        public event UpdateSecUsersInfoAnd3rdPartiesCompletedEventHandler UpdateSecUsersInfoAnd3rdPartiesCompleted;
        
        /// <remarks/>
        public event AddUserCompletedEventHandler AddUserCompleted;
        
        /// <remarks/>
        public event UpdateUserCompletedEventHandler UpdateUserCompleted;
        
        /// <remarks/>
        public event CreateShieldUserCompletedEventHandler CreateShieldUserCompleted;
        
        /// <remarks/>
        public event UpdateShieldUserCompletedEventHandler UpdateShieldUserCompleted;
        
        /// <remarks/>
        public event SetDEARegistrantStatusCompletedEventHandler SetDEARegistrantStatusCompleted;
        
        /// <remarks/>
        public event GetReconciledControlledSubstanceCodeCompletedEventHandler GetReconciledControlledSubstanceCodeCompleted;
        
        /// <remarks/>
        public event RxOptionsUsedInsertCompletedEventHandler RxOptionsUsedInsertCompleted;
        
        /// <remarks/>
        public event GetProviderDEALicensesCompletedEventHandler GetProviderDEALicensesCompleted;
        
        /// <remarks/>
        public event UpdateDEALicensesCompletedEventHandler UpdateDEALicensesCompleted;
        
        /// <remarks/>
        public event DeleteDEALicenseCompletedEventHandler DeleteDEALicenseCompleted;
        
        /// <remarks/>
        public event GetAdminCountForLicenseCompletedEventHandler GetAdminCountForLicenseCompleted;
        
        /// <remarks/>
        public event SignPrescriptionAndInsertSignedScriptMessageCompletedEventHandler SignPrescriptionAndInsertSignedScriptMessageCompleted;
        
        /// <remarks/>
        public event GetPatientsByLicenseCompletedEventHandler GetPatientsByLicenseCompleted;
        
        /// <remarks/>
        public event GetPatientsCompletedEventHandler GetPatientsCompleted;
        
        /// <remarks/>
        public event GetPatientsLoadByIDCompletedEventHandler GetPatientsLoadByIDCompleted;
        
        /// <remarks/>
        public event GetPatientsLoadByDateCompletedEventHandler GetPatientsLoadByDateCompleted;
        
        /// <remarks/>
        public event GetAllergyByPatientCompletedEventHandler GetAllergyByPatientCompleted;
        
        /// <remarks/>
        public event GetRxByPatientCompletedEventHandler GetRxByPatientCompleted;
        
        /// <remarks/>
        public event GetDiagnosisByPatientCompletedEventHandler GetDiagnosisByPatientCompleted;
        
        /// <remarks/>
        public event GetPatientLastPharmacyCompletedEventHandler GetPatientLastPharmacyCompleted;
        
        /// <remarks/>
        public event GetProviderFavoritesCompletedEventHandler GetProviderFavoritesCompleted;
        
        /// <remarks/>
        public event GetProviderByLicenseCompletedEventHandler GetProviderByLicenseCompleted;
        
        /// <remarks/>
        public event GetPatientDemographicsCompletedEventHandler GetPatientDemographicsCompleted;
        
        /// <remarks/>
        public event GetLicenseByIDCompletedEventHandler GetLicenseByIDCompleted;
        
        /// <remarks/>
        public event GetLicenseCreationDateCompletedEventHandler GetLicenseCreationDateCompleted;
        
        /// <remarks/>
        public event GetLicenseSiteByIDCompletedEventHandler GetLicenseSiteByIDCompleted;
        
        /// <remarks/>
        public event GetAllSitesByLicenseIDCompletedEventHandler GetAllSitesByLicenseIDCompleted;
        
        /// <remarks/>
        public event GetLicenseByPatientIDCompletedEventHandler GetLicenseByPatientIDCompleted;
        
        /// <remarks/>
        public event GetLicensePreferencesCompletedEventHandler GetLicensePreferencesCompleted;
        
        /// <remarks/>
        public event SaveLicensePreferenceCompletedEventHandler SaveLicensePreferenceCompleted;
        
        /// <remarks/>
        public event DURCheckSingleRxByDDICompletedEventHandler DURCheckSingleRxByDDICompleted;
        
        /// <remarks/>
        public event DURCheckSingleRxByRxIDCompletedEventHandler DURCheckSingleRxByRxIDCompleted;
        
        /// <remarks/>
        public event SaveRxDURCompletedEventHandler SaveRxDURCompleted;
        
        /// <remarks/>
        public event SendRxToAssistantCompletedEventHandler SendRxToAssistantCompleted;
        
        /// <remarks/>
        public event UpdateRxTaskCompletedEventHandler UpdateRxTaskCompleted;
        
        /// <remarks/>
        public event UpdatePrescriptionStatusCompletedEventHandler UpdatePrescriptionStatusCompleted;
        
        /// <remarks/>
        public event UpdateProviderOfRecordCompletedEventHandler UpdateProviderOfRecordCompleted;
        
        /// <remarks/>
        public event UpdatePrescriptionRxDetailStatusCompletedEventHandler UpdatePrescriptionRxDetailStatusCompleted;
        
        /// <remarks/>
        public event UpdatePrescriptionPharmacyIDCompletedEventHandler UpdatePrescriptionPharmacyIDCompleted;
        
        /// <remarks/>
        public event CreateScriptMessageCompletedEventHandler CreateScriptMessageCompleted;
        
        /// <remarks/>
        public event DeleteScriptMessagesCompletedEventHandler DeleteScriptMessagesCompleted;
        
        /// <remarks/>
        public event CreateVerifyMessageCompletedEventHandler CreateVerifyMessageCompleted;
        
        /// <remarks/>
        public event CreateErrorMessageCompletedEventHandler CreateErrorMessageCompleted;
        
        /// <remarks/>
        public event CreateDUREVTScriptMessageCompletedEventHandler CreateDUREVTScriptMessageCompleted;
        
        /// <remarks/>
        public event SendScriptMessageCompletedEventHandler SendScriptMessageCompleted;
        
        /// <remarks/>
        public event SendOutboundInfoScriptMessageCompletedEventHandler SendOutboundInfoScriptMessageCompleted;
        
        /// <remarks/>
        public event ApproveScriptMessageCompletedEventHandler ApproveScriptMessageCompleted;
        
        /// <remarks/>
        public event RejectScriptMessageCompletedEventHandler RejectScriptMessageCompleted;
        
        /// <remarks/>
        public event GetAuditInfoByUserNameCompletedEventHandler GetAuditInfoByUserNameCompleted;
        
        /// <remarks/>
        public event PrescriptionUpdateCreationTypeCompletedEventHandler PrescriptionUpdateCreationTypeCompleted;
        
        /// <remarks/>
        public event GetNewUniqueUserNameCompletedEventHandler GetNewUniqueUserNameCompleted;
        
        /// <remarks/>
        public event GetUserInfoByUAISessionTokenCompletedEventHandler GetUserInfoByUAISessionTokenCompleted;
        
        /// <remarks/>
        public event GetUserInfoByMobileServiceSessionTokenCompletedEventHandler GetUserInfoByMobileServiceSessionTokenCompleted;
        
        /// <remarks/>
        public event UserNameExistsCompletedEventHandler UserNameExistsCompleted;
        
        /// <remarks/>
        public event SearchUsersInAllDatabasesCompletedEventHandler SearchUsersInAllDatabasesCompleted;
        
        /// <remarks/>
        public event SearchUsersInShieldCompletedEventHandler SearchUsersInShieldCompleted;
        
        /// <remarks/>
        public event GetUserCompletedEventHandler GetUserCompleted;
        
        /// <remarks/>
        public event GetUserBasicCompletedEventHandler GetUserBasicCompleted;
        
        /// <remarks/>
        public event DenyTaskRxCompletedEventHandler DenyTaskRxCompleted;
        
        /// <remarks/>
        public event GetEULACompletedEventHandler GetEULACompleted;
        
        /// <remarks/>
        public event GetAdPrivacyPolicyCompletedEventHandler GetAdPrivacyPolicyCompleted;
        
        /// <remarks/>
        public event EULARecentlyUpdatedCompletedEventHandler EULARecentlyUpdatedCompleted;
        
        /// <remarks/>
        public event AddMedToScriptPadCompletedEventHandler AddMedToScriptPadCompleted;
        
        /// <remarks/>
        public event SaveCSDetailsCompletedEventHandler SaveCSDetailsCompleted;
        
        /// <remarks/>
        public event EditScriptPadCompletedEventHandler EditScriptPadCompleted;
        
        /// <remarks/>
        public event DeleteFromScriptPadCompletedEventHandler DeleteFromScriptPadCompleted;
        
        /// <remarks/>
        public event InsertRxHeaderCanceledCompletedEventHandler InsertRxHeaderCanceledCompleted;
        
        /// <remarks/>
        public event MarkAsFulfilledCompletedEventHandler MarkAsFulfilledCompleted;
        
        /// <remarks/>
        public event LoadRxLiteByIDCompletedEventHandler LoadRxLiteByIDCompleted;
        
        /// <remarks/>
        public event SetAsSelfReportedCompletedEventHandler SetAsSelfReportedCompleted;
        
        /// <remarks/>
        public event GetScriptPadCompletedEventHandler GetScriptPadCompleted;
        
        /// <remarks/>
        public event DurScriptPadRxCompletedEventHandler DurScriptPadRxCompleted;
        
        /// <remarks/>
        public event SavePatientCompletedEventHandler SavePatientCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetPDMPSamlToken", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetPDMPSamlTokenResponse GetPDMPSamlToken(GetPDMPSamlTokenRequest request) {
            object[] results = this.Invoke("GetPDMPSamlToken", new object[] {
                        request});
            return ((GetPDMPSamlTokenResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetPDMPSamlTokenAsync(GetPDMPSamlTokenRequest request) {
            this.GetPDMPSamlTokenAsync(request, null);
        }
        
        /// <remarks/>
        public void GetPDMPSamlTokenAsync(GetPDMPSamlTokenRequest request, object userState) {
            if ((this.GetPDMPSamlTokenOperationCompleted == null)) {
                this.GetPDMPSamlTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPDMPSamlTokenOperationCompleted);
            }
            this.InvokeAsync("GetPDMPSamlToken", new object[] {
                        request}, this.GetPDMPSamlTokenOperationCompleted, userState);
        }
        
        private void OnGetPDMPSamlTokenOperationCompleted(object arg) {
            if ((this.GetPDMPSamlTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPDMPSamlTokenCompleted(this, new GetPDMPSamlTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/RefreshPPTPlusSamlToken", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetPPTPlusSamlTokenResponse RefreshPPTPlusSamlToken(GetPPTPlusSamlTokenRequest request) {
            object[] results = this.Invoke("RefreshPPTPlusSamlToken", new object[] {
                        request});
            return ((GetPPTPlusSamlTokenResponse)(results[0]));
        }
        
        /// <remarks/>
        public void RefreshPPTPlusSamlTokenAsync(GetPPTPlusSamlTokenRequest request) {
            this.RefreshPPTPlusSamlTokenAsync(request, null);
        }
        
        /// <remarks/>
        public void RefreshPPTPlusSamlTokenAsync(GetPPTPlusSamlTokenRequest request, object userState) {
            if ((this.RefreshPPTPlusSamlTokenOperationCompleted == null)) {
                this.RefreshPPTPlusSamlTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRefreshPPTPlusSamlTokenOperationCompleted);
            }
            this.InvokeAsync("RefreshPPTPlusSamlToken", new object[] {
                        request}, this.RefreshPPTPlusSamlTokenOperationCompleted, userState);
        }
        
        private void OnRefreshPPTPlusSamlTokenOperationCompleted(object arg) {
            if ((this.RefreshPPTPlusSamlTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RefreshPPTPlusSamlTokenCompleted(this, new RefreshPPTPlusSamlTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/RefreshPDMPSamlToken", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetPDMPSamlTokenResponse RefreshPDMPSamlToken(GetPDMPSamlTokenRequest request) {
            object[] results = this.Invoke("RefreshPDMPSamlToken", new object[] {
                        request});
            return ((GetPDMPSamlTokenResponse)(results[0]));
        }
        
        /// <remarks/>
        public void RefreshPDMPSamlTokenAsync(GetPDMPSamlTokenRequest request) {
            this.RefreshPDMPSamlTokenAsync(request, null);
        }
        
        /// <remarks/>
        public void RefreshPDMPSamlTokenAsync(GetPDMPSamlTokenRequest request, object userState) {
            if ((this.RefreshPDMPSamlTokenOperationCompleted == null)) {
                this.RefreshPDMPSamlTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRefreshPDMPSamlTokenOperationCompleted);
            }
            this.InvokeAsync("RefreshPDMPSamlToken", new object[] {
                        request}, this.RefreshPDMPSamlTokenOperationCompleted, userState);
        }
        
        private void OnRefreshPDMPSamlTokenOperationCompleted(object arg) {
            if ((this.RefreshPDMPSamlTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RefreshPDMPSamlTokenCompleted(this, new RefreshPDMPSamlTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetPdmpEnrollmentFormInfo", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetPdmpEnrollmentFormInfoResponse GetPdmpEnrollmentFormInfo(GetPdmpEnrollmentFormInfoRequest request) {
            object[] results = this.Invoke("GetPdmpEnrollmentFormInfo", new object[] {
                        request});
            return ((GetPdmpEnrollmentFormInfoResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetPdmpEnrollmentFormInfoAsync(GetPdmpEnrollmentFormInfoRequest request) {
            this.GetPdmpEnrollmentFormInfoAsync(request, null);
        }
        
        /// <remarks/>
        public void GetPdmpEnrollmentFormInfoAsync(GetPdmpEnrollmentFormInfoRequest request, object userState) {
            if ((this.GetPdmpEnrollmentFormInfoOperationCompleted == null)) {
                this.GetPdmpEnrollmentFormInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPdmpEnrollmentFormInfoOperationCompleted);
            }
            this.InvokeAsync("GetPdmpEnrollmentFormInfo", new object[] {
                        request}, this.GetPdmpEnrollmentFormInfoOperationCompleted, userState);
        }
        
        private void OnGetPdmpEnrollmentFormInfoOperationCompleted(object arg) {
            if ((this.GetPdmpEnrollmentFormInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPdmpEnrollmentFormInfoCompleted(this, new GetPdmpEnrollmentFormInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetMatchingPharmacy", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetMatchingPharmacyResponse GetMatchingPharmacy(GetMatchingPharmacyRequest request) {
            object[] results = this.Invoke("GetMatchingPharmacy", new object[] {
                        request});
            return ((GetMatchingPharmacyResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetMatchingPharmacyAsync(GetMatchingPharmacyRequest request) {
            this.GetMatchingPharmacyAsync(request, null);
        }
        
        /// <remarks/>
        public void GetMatchingPharmacyAsync(GetMatchingPharmacyRequest request, object userState) {
            if ((this.GetMatchingPharmacyOperationCompleted == null)) {
                this.GetMatchingPharmacyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMatchingPharmacyOperationCompleted);
            }
            this.InvokeAsync("GetMatchingPharmacy", new object[] {
                        request}, this.GetMatchingPharmacyOperationCompleted, userState);
        }
        
        private void OnGetMatchingPharmacyOperationCompleted(object arg) {
            if ((this.GetMatchingPharmacyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMatchingPharmacyCompleted(this, new GetMatchingPharmacyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/SearchAccountsByName", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SearchAccountsByNameResponse SearchAccountsByName(SearchAccountsByNameRequest request) {
            object[] results = this.Invoke("SearchAccountsByName", new object[] {
                        request});
            return ((SearchAccountsByNameResponse)(results[0]));
        }
        
        /// <remarks/>
        public void SearchAccountsByNameAsync(SearchAccountsByNameRequest request) {
            this.SearchAccountsByNameAsync(request, null);
        }
        
        /// <remarks/>
        public void SearchAccountsByNameAsync(SearchAccountsByNameRequest request, object userState) {
            if ((this.SearchAccountsByNameOperationCompleted == null)) {
                this.SearchAccountsByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchAccountsByNameOperationCompleted);
            }
            this.InvokeAsync("SearchAccountsByName", new object[] {
                        request}, this.SearchAccountsByNameOperationCompleted, userState);
        }
        
        private void OnSearchAccountsByNameOperationCompleted(object arg) {
            if ((this.SearchAccountsByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchAccountsByNameCompleted(this, new SearchAccountsByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetShieldPasswordExpirationDate", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetShieldPasswordExpirationDate(string shieldLoginId) {
            object[] results = this.Invoke("GetShieldPasswordExpirationDate", new object[] {
                        shieldLoginId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetShieldPasswordExpirationDateAsync(string shieldLoginId) {
            this.GetShieldPasswordExpirationDateAsync(shieldLoginId, null);
        }
        
        /// <remarks/>
        public void GetShieldPasswordExpirationDateAsync(string shieldLoginId, object userState) {
            if ((this.GetShieldPasswordExpirationDateOperationCompleted == null)) {
                this.GetShieldPasswordExpirationDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetShieldPasswordExpirationDateOperationCompleted);
            }
            this.InvokeAsync("GetShieldPasswordExpirationDate", new object[] {
                        shieldLoginId}, this.GetShieldPasswordExpirationDateOperationCompleted, userState);
        }
        
        private void OnGetShieldPasswordExpirationDateOperationCompleted(object arg) {
            if ((this.GetShieldPasswordExpirationDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetShieldPasswordExpirationDateCompleted(this, new GetShieldPasswordExpirationDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/AddMessageTrackingAck", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ePrescribeSvcResponse AddMessageTrackingAck(AddMessageTrackingAckRequest messageTrackingAckRequest) {
            object[] results = this.Invoke("AddMessageTrackingAck", new object[] {
                        messageTrackingAckRequest});
            return ((ePrescribeSvcResponse)(results[0]));
        }
        
        /// <remarks/>
        public void AddMessageTrackingAckAsync(AddMessageTrackingAckRequest messageTrackingAckRequest) {
            this.AddMessageTrackingAckAsync(messageTrackingAckRequest, null);
        }
        
        /// <remarks/>
        public void AddMessageTrackingAckAsync(AddMessageTrackingAckRequest messageTrackingAckRequest, object userState) {
            if ((this.AddMessageTrackingAckOperationCompleted == null)) {
                this.AddMessageTrackingAckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddMessageTrackingAckOperationCompleted);
            }
            this.InvokeAsync("AddMessageTrackingAck", new object[] {
                        messageTrackingAckRequest}, this.AddMessageTrackingAckOperationCompleted, userState);
        }
        
        private void OnAddMessageTrackingAckOperationCompleted(object arg) {
            if ((this.AddMessageTrackingAckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddMessageTrackingAckCompleted(this, new AddMessageTrackingAckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetMessageTrackingAcksOfUser", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetMessageTrackingAcksResponse GetMessageTrackingAcksOfUser(GetMessageTrackingAckRequest messageTrackingAckRequest) {
            object[] results = this.Invoke("GetMessageTrackingAcksOfUser", new object[] {
                        messageTrackingAckRequest});
            return ((GetMessageTrackingAcksResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetMessageTrackingAcksOfUserAsync(GetMessageTrackingAckRequest messageTrackingAckRequest) {
            this.GetMessageTrackingAcksOfUserAsync(messageTrackingAckRequest, null);
        }
        
        /// <remarks/>
        public void GetMessageTrackingAcksOfUserAsync(GetMessageTrackingAckRequest messageTrackingAckRequest, object userState) {
            if ((this.GetMessageTrackingAcksOfUserOperationCompleted == null)) {
                this.GetMessageTrackingAcksOfUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMessageTrackingAcksOfUserOperationCompleted);
            }
            this.InvokeAsync("GetMessageTrackingAcksOfUser", new object[] {
                        messageTrackingAckRequest}, this.GetMessageTrackingAcksOfUserOperationCompleted, userState);
        }
        
        private void OnGetMessageTrackingAcksOfUserOperationCompleted(object arg) {
            if ((this.GetMessageTrackingAcksOfUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMessageTrackingAcksOfUserCompleted(this, new GetMessageTrackingAcksOfUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/PrintRxs", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PrintRxResponse PrintRxs(PrintRxRequest request) {
            object[] results = this.Invoke("PrintRxs", new object[] {
                        request});
            return ((PrintRxResponse)(results[0]));
        }
        
        /// <remarks/>
        public void PrintRxsAsync(PrintRxRequest request) {
            this.PrintRxsAsync(request, null);
        }
        
        /// <remarks/>
        public void PrintRxsAsync(PrintRxRequest request, object userState) {
            if ((this.PrintRxsOperationCompleted == null)) {
                this.PrintRxsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrintRxsOperationCompleted);
            }
            this.InvokeAsync("PrintRxs", new object[] {
                        request}, this.PrintRxsOperationCompleted, userState);
        }
        
        private void OnPrintRxsOperationCompleted(object arg) {
            if ((this.PrintRxsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrintRxsCompleted(this, new PrintRxsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/RetrieveItemFromDocumentStore", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RetrieveItemFromDocumentStoreResponse RetrieveItemFromDocumentStore(RetrieveItemFromDocumentStoreRequest request) {
            object[] results = this.Invoke("RetrieveItemFromDocumentStore", new object[] {
                        request});
            return ((RetrieveItemFromDocumentStoreResponse)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveItemFromDocumentStoreAsync(RetrieveItemFromDocumentStoreRequest request) {
            this.RetrieveItemFromDocumentStoreAsync(request, null);
        }
        
        /// <remarks/>
        public void RetrieveItemFromDocumentStoreAsync(RetrieveItemFromDocumentStoreRequest request, object userState) {
            if ((this.RetrieveItemFromDocumentStoreOperationCompleted == null)) {
                this.RetrieveItemFromDocumentStoreOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveItemFromDocumentStoreOperationCompleted);
            }
            this.InvokeAsync("RetrieveItemFromDocumentStore", new object[] {
                        request}, this.RetrieveItemFromDocumentStoreOperationCompleted, userState);
        }
        
        private void OnRetrieveItemFromDocumentStoreOperationCompleted(object arg) {
            if ((this.RetrieveItemFromDocumentStoreCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveItemFromDocumentStoreCompleted(this, new RetrieveItemFromDocumentStoreCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/SetRxDocumentStoreItemToPrintedStatus", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ePrescribeSvcResponse SetRxDocumentStoreItemToPrintedStatus(SetDocumentAsPrintedRequest request) {
            object[] results = this.Invoke("SetRxDocumentStoreItemToPrintedStatus", new object[] {
                        request});
            return ((ePrescribeSvcResponse)(results[0]));
        }
        
        /// <remarks/>
        public void SetRxDocumentStoreItemToPrintedStatusAsync(SetDocumentAsPrintedRequest request) {
            this.SetRxDocumentStoreItemToPrintedStatusAsync(request, null);
        }
        
        /// <remarks/>
        public void SetRxDocumentStoreItemToPrintedStatusAsync(SetDocumentAsPrintedRequest request, object userState) {
            if ((this.SetRxDocumentStoreItemToPrintedStatusOperationCompleted == null)) {
                this.SetRxDocumentStoreItemToPrintedStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetRxDocumentStoreItemToPrintedStatusOperationCompleted);
            }
            this.InvokeAsync("SetRxDocumentStoreItemToPrintedStatus", new object[] {
                        request}, this.SetRxDocumentStoreItemToPrintedStatusOperationCompleted, userState);
        }
        
        private void OnSetRxDocumentStoreItemToPrintedStatusOperationCompleted(object arg) {
            if ((this.SetRxDocumentStoreItemToPrintedStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetRxDocumentStoreItemToPrintedStatusCompleted(this, new SetRxDocumentStoreItemToPrintedStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/ConvertFromHtmlToPdf", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ConvertFromHtmlToPdfResponse ConvertFromHtmlToPdf(ConvertFromHtmlToPdfRequest request) {
            object[] results = this.Invoke("ConvertFromHtmlToPdf", new object[] {
                        request});
            return ((ConvertFromHtmlToPdfResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ConvertFromHtmlToPdfAsync(ConvertFromHtmlToPdfRequest request) {
            this.ConvertFromHtmlToPdfAsync(request, null);
        }
        
        /// <remarks/>
        public void ConvertFromHtmlToPdfAsync(ConvertFromHtmlToPdfRequest request, object userState) {
            if ((this.ConvertFromHtmlToPdfOperationCompleted == null)) {
                this.ConvertFromHtmlToPdfOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConvertFromHtmlToPdfOperationCompleted);
            }
            this.InvokeAsync("ConvertFromHtmlToPdf", new object[] {
                        request}, this.ConvertFromHtmlToPdfOperationCompleted, userState);
        }
        
        private void OnConvertFromHtmlToPdfOperationCompleted(object arg) {
            if ((this.ConvertFromHtmlToPdfCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConvertFromHtmlToPdfCompleted(this, new ConvertFromHtmlToPdfCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/RetrieveEncryptedRegistrationKey", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MobileSsoRegistrationResponse RetrieveEncryptedRegistrationKey(MobileSsoRegistrationRequest request) {
            object[] results = this.Invoke("RetrieveEncryptedRegistrationKey", new object[] {
                        request});
            return ((MobileSsoRegistrationResponse)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveEncryptedRegistrationKeyAsync(MobileSsoRegistrationRequest request) {
            this.RetrieveEncryptedRegistrationKeyAsync(request, null);
        }
        
        /// <remarks/>
        public void RetrieveEncryptedRegistrationKeyAsync(MobileSsoRegistrationRequest request, object userState) {
            if ((this.RetrieveEncryptedRegistrationKeyOperationCompleted == null)) {
                this.RetrieveEncryptedRegistrationKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveEncryptedRegistrationKeyOperationCompleted);
            }
            this.InvokeAsync("RetrieveEncryptedRegistrationKey", new object[] {
                        request}, this.RetrieveEncryptedRegistrationKeyOperationCompleted, userState);
        }
        
        private void OnRetrieveEncryptedRegistrationKeyOperationCompleted(object arg) {
            if ((this.RetrieveEncryptedRegistrationKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveEncryptedRegistrationKeyCompleted(this, new RetrieveEncryptedRegistrationKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/RetrieveRegistrationSsoResponse", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RegistrationSsoResponse RetrieveRegistrationSsoResponse(RegistrationSsoRequest request) {
            object[] results = this.Invoke("RetrieveRegistrationSsoResponse", new object[] {
                        request});
            return ((RegistrationSsoResponse)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveRegistrationSsoResponseAsync(RegistrationSsoRequest request) {
            this.RetrieveRegistrationSsoResponseAsync(request, null);
        }
        
        /// <remarks/>
        public void RetrieveRegistrationSsoResponseAsync(RegistrationSsoRequest request, object userState) {
            if ((this.RetrieveRegistrationSsoResponseOperationCompleted == null)) {
                this.RetrieveRegistrationSsoResponseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveRegistrationSsoResponseOperationCompleted);
            }
            this.InvokeAsync("RetrieveRegistrationSsoResponse", new object[] {
                        request}, this.RetrieveRegistrationSsoResponseOperationCompleted, userState);
        }
        
        private void OnRetrieveRegistrationSsoResponseOperationCompleted(object arg) {
            if ((this.RetrieveRegistrationSsoResponseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveRegistrationSsoResponseCompleted(this, new RetrieveRegistrationSsoResponseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/CreateAndSignMobileAccessToken", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CreateAndSignMobileAccessTokenResponse CreateAndSignMobileAccessToken(CreateAndSignMobileAccessTokenRequest request) {
            object[] results = this.Invoke("CreateAndSignMobileAccessToken", new object[] {
                        request});
            return ((CreateAndSignMobileAccessTokenResponse)(results[0]));
        }
        
        /// <remarks/>
        public void CreateAndSignMobileAccessTokenAsync(CreateAndSignMobileAccessTokenRequest request) {
            this.CreateAndSignMobileAccessTokenAsync(request, null);
        }
        
        /// <remarks/>
        public void CreateAndSignMobileAccessTokenAsync(CreateAndSignMobileAccessTokenRequest request, object userState) {
            if ((this.CreateAndSignMobileAccessTokenOperationCompleted == null)) {
                this.CreateAndSignMobileAccessTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateAndSignMobileAccessTokenOperationCompleted);
            }
            this.InvokeAsync("CreateAndSignMobileAccessToken", new object[] {
                        request}, this.CreateAndSignMobileAccessTokenOperationCompleted, userState);
        }
        
        private void OnCreateAndSignMobileAccessTokenOperationCompleted(object arg) {
            if ((this.CreateAndSignMobileAccessTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateAndSignMobileAccessTokenCompleted(this, new CreateAndSignMobileAccessTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetUserShieldCspStatusInfo", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetUserShieldCspStatusInfoResponse GetUserShieldCspStatusInfo(GetUserShieldCspStatusInfoRequest request) {
            object[] results = this.Invoke("GetUserShieldCspStatusInfo", new object[] {
                        request});
            return ((GetUserShieldCspStatusInfoResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserShieldCspStatusInfoAsync(GetUserShieldCspStatusInfoRequest request) {
            this.GetUserShieldCspStatusInfoAsync(request, null);
        }
        
        /// <remarks/>
        public void GetUserShieldCspStatusInfoAsync(GetUserShieldCspStatusInfoRequest request, object userState) {
            if ((this.GetUserShieldCspStatusInfoOperationCompleted == null)) {
                this.GetUserShieldCspStatusInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserShieldCspStatusInfoOperationCompleted);
            }
            this.InvokeAsync("GetUserShieldCspStatusInfo", new object[] {
                        request}, this.GetUserShieldCspStatusInfoOperationCompleted, userState);
        }
        
        private void OnGetUserShieldCspStatusInfoOperationCompleted(object arg) {
            if ((this.GetUserShieldCspStatusInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserShieldCspStatusInfoCompleted(this, new GetUserShieldCspStatusInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/RtpsSendDisposition", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ePrescribeSvcResponse RtpsSendDisposition(RtpsCRxDispositionRequest request) {
            object[] results = this.Invoke("RtpsSendDisposition", new object[] {
                        request});
            return ((ePrescribeSvcResponse)(results[0]));
        }
        
        /// <remarks/>
        public void RtpsSendDispositionAsync(RtpsCRxDispositionRequest request) {
            this.RtpsSendDispositionAsync(request, null);
        }
        
        /// <remarks/>
        public void RtpsSendDispositionAsync(RtpsCRxDispositionRequest request, object userState) {
            if ((this.RtpsSendDispositionOperationCompleted == null)) {
                this.RtpsSendDispositionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRtpsSendDispositionOperationCompleted);
            }
            this.InvokeAsync("RtpsSendDisposition", new object[] {
                        request}, this.RtpsSendDispositionOperationCompleted, userState);
        }
        
        private void OnRtpsSendDispositionOperationCompleted(object arg) {
            if ((this.RtpsSendDispositionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RtpsSendDispositionCompleted(this, new RtpsSendDispositionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/LogShieldAuditEvent", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ShieldAuditEventResponse LogShieldAuditEvent(ShieldAuditEventRequest request) {
            object[] results = this.Invoke("LogShieldAuditEvent", new object[] {
                        request});
            return ((ShieldAuditEventResponse)(results[0]));
        }
        
        /// <remarks/>
        public void LogShieldAuditEventAsync(ShieldAuditEventRequest request) {
            this.LogShieldAuditEventAsync(request, null);
        }
        
        /// <remarks/>
        public void LogShieldAuditEventAsync(ShieldAuditEventRequest request, object userState) {
            if ((this.LogShieldAuditEventOperationCompleted == null)) {
                this.LogShieldAuditEventOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogShieldAuditEventOperationCompleted);
            }
            this.InvokeAsync("LogShieldAuditEvent", new object[] {
                        request}, this.LogShieldAuditEventOperationCompleted, userState);
        }
        
        private void OnLogShieldAuditEventOperationCompleted(object arg) {
            if ((this.LogShieldAuditEventCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LogShieldAuditEventCompleted(this, new LogShieldAuditEventCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/CreateRegistrantUser", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CreateRegistrantUserResponse CreateRegistrantUser(CreateRegistrantUserRequest createRegistrantUserRequest) {
            object[] results = this.Invoke("CreateRegistrantUser", new object[] {
                        createRegistrantUserRequest});
            return ((CreateRegistrantUserResponse)(results[0]));
        }
        
        /// <remarks/>
        public void CreateRegistrantUserAsync(CreateRegistrantUserRequest createRegistrantUserRequest) {
            this.CreateRegistrantUserAsync(createRegistrantUserRequest, null);
        }
        
        /// <remarks/>
        public void CreateRegistrantUserAsync(CreateRegistrantUserRequest createRegistrantUserRequest, object userState) {
            if ((this.CreateRegistrantUserOperationCompleted == null)) {
                this.CreateRegistrantUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateRegistrantUserOperationCompleted);
            }
            this.InvokeAsync("CreateRegistrantUser", new object[] {
                        createRegistrantUserRequest}, this.CreateRegistrantUserOperationCompleted, userState);
        }
        
        private void OnCreateRegistrantUserOperationCompleted(object arg) {
            if ((this.CreateRegistrantUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateRegistrantUserCompleted(this, new CreateRegistrantUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/CompleteRegistration", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ePrescribeSvcResponse CompleteRegistration(CompleteRegistrationRequest completeRegistrationRequest) {
            object[] results = this.Invoke("CompleteRegistration", new object[] {
                        completeRegistrationRequest});
            return ((ePrescribeSvcResponse)(results[0]));
        }
        
        /// <remarks/>
        public void CompleteRegistrationAsync(CompleteRegistrationRequest completeRegistrationRequest) {
            this.CompleteRegistrationAsync(completeRegistrationRequest, null);
        }
        
        /// <remarks/>
        public void CompleteRegistrationAsync(CompleteRegistrationRequest completeRegistrationRequest, object userState) {
            if ((this.CompleteRegistrationOperationCompleted == null)) {
                this.CompleteRegistrationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCompleteRegistrationOperationCompleted);
            }
            this.InvokeAsync("CompleteRegistration", new object[] {
                        completeRegistrationRequest}, this.CompleteRegistrationOperationCompleted, userState);
        }
        
        private void OnCompleteRegistrationOperationCompleted(object arg) {
            if ((this.CompleteRegistrationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CompleteRegistrationCompleted(this, new CompleteRegistrationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetRegistrantIdProofingLevelOfAssurance", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetRegistrantIdProofingLoaResponse GetRegistrantIdProofingLevelOfAssurance(GetRegistrantIdProofingLoaRequest getRegistrantIdProofingLoaRequest) {
            object[] results = this.Invoke("GetRegistrantIdProofingLevelOfAssurance", new object[] {
                        getRegistrantIdProofingLoaRequest});
            return ((GetRegistrantIdProofingLoaResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetRegistrantIdProofingLevelOfAssuranceAsync(GetRegistrantIdProofingLoaRequest getRegistrantIdProofingLoaRequest) {
            this.GetRegistrantIdProofingLevelOfAssuranceAsync(getRegistrantIdProofingLoaRequest, null);
        }
        
        /// <remarks/>
        public void GetRegistrantIdProofingLevelOfAssuranceAsync(GetRegistrantIdProofingLoaRequest getRegistrantIdProofingLoaRequest, object userState) {
            if ((this.GetRegistrantIdProofingLevelOfAssuranceOperationCompleted == null)) {
                this.GetRegistrantIdProofingLevelOfAssuranceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRegistrantIdProofingLevelOfAssuranceOperationCompleted);
            }
            this.InvokeAsync("GetRegistrantIdProofingLevelOfAssurance", new object[] {
                        getRegistrantIdProofingLoaRequest}, this.GetRegistrantIdProofingLevelOfAssuranceOperationCompleted, userState);
        }
        
        private void OnGetRegistrantIdProofingLevelOfAssuranceOperationCompleted(object arg) {
            if ((this.GetRegistrantIdProofingLevelOfAssuranceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRegistrantIdProofingLevelOfAssuranceCompleted(this, new GetRegistrantIdProofingLevelOfAssuranceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/LogRegistrationStep", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ePrescribeSvcResponse LogRegistrationStep(LogRegistrationStepRequest logRegistrationStepRequest) {
            object[] results = this.Invoke("LogRegistrationStep", new object[] {
                        logRegistrationStepRequest});
            return ((ePrescribeSvcResponse)(results[0]));
        }
        
        /// <remarks/>
        public void LogRegistrationStepAsync(LogRegistrationStepRequest logRegistrationStepRequest) {
            this.LogRegistrationStepAsync(logRegistrationStepRequest, null);
        }
        
        /// <remarks/>
        public void LogRegistrationStepAsync(LogRegistrationStepRequest logRegistrationStepRequest, object userState) {
            if ((this.LogRegistrationStepOperationCompleted == null)) {
                this.LogRegistrationStepOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogRegistrationStepOperationCompleted);
            }
            this.InvokeAsync("LogRegistrationStep", new object[] {
                        logRegistrationStepRequest}, this.LogRegistrationStepOperationCompleted, userState);
        }
        
        private void OnLogRegistrationStepOperationCompleted(object arg) {
            if ((this.LogRegistrationStepCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LogRegistrationStepCompleted(this, new LogRegistrationStepCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/PassUserIdProofingAndNpiCheckForAutomation", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ePrescribeSvcResponse PassUserIdProofingAndNpiCheckForAutomation(PassUserIdProofingAndNpiCheckRequest request) {
            object[] results = this.Invoke("PassUserIdProofingAndNpiCheckForAutomation", new object[] {
                        request});
            return ((ePrescribeSvcResponse)(results[0]));
        }
        
        /// <remarks/>
        public void PassUserIdProofingAndNpiCheckForAutomationAsync(PassUserIdProofingAndNpiCheckRequest request) {
            this.PassUserIdProofingAndNpiCheckForAutomationAsync(request, null);
        }
        
        /// <remarks/>
        public void PassUserIdProofingAndNpiCheckForAutomationAsync(PassUserIdProofingAndNpiCheckRequest request, object userState) {
            if ((this.PassUserIdProofingAndNpiCheckForAutomationOperationCompleted == null)) {
                this.PassUserIdProofingAndNpiCheckForAutomationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPassUserIdProofingAndNpiCheckForAutomationOperationCompleted);
            }
            this.InvokeAsync("PassUserIdProofingAndNpiCheckForAutomation", new object[] {
                        request}, this.PassUserIdProofingAndNpiCheckForAutomationOperationCompleted, userState);
        }
        
        private void OnPassUserIdProofingAndNpiCheckForAutomationOperationCompleted(object arg) {
            if ((this.PassUserIdProofingAndNpiCheckForAutomationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PassUserIdProofingAndNpiCheckForAutomationCompleted(this, new PassUserIdProofingAndNpiCheckForAutomationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/InsertTestPatients", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ePrescribeSvcResponse InsertTestPatients(InsertTestPatientsRequest request) {
            object[] results = this.Invoke("InsertTestPatients", new object[] {
                        request});
            return ((ePrescribeSvcResponse)(results[0]));
        }
        
        /// <remarks/>
        public void InsertTestPatientsAsync(InsertTestPatientsRequest request) {
            this.InsertTestPatientsAsync(request, null);
        }
        
        /// <remarks/>
        public void InsertTestPatientsAsync(InsertTestPatientsRequest request, object userState) {
            if ((this.InsertTestPatientsOperationCompleted == null)) {
                this.InsertTestPatientsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertTestPatientsOperationCompleted);
            }
            this.InvokeAsync("InsertTestPatients", new object[] {
                        request}, this.InsertTestPatientsOperationCompleted, userState);
        }
        
        private void OnInsertTestPatientsOperationCompleted(object arg) {
            if ((this.InsertTestPatientsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertTestPatientsCompleted(this, new InsertTestPatientsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/ProcessHubMailboxHeaderList", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProcessHubMailboxHeaderListResponse ProcessHubMailboxHeaderList(ProcessHubMailboxHeaderListRequest request) {
            object[] results = this.Invoke("ProcessHubMailboxHeaderList", new object[] {
                        request});
            return ((ProcessHubMailboxHeaderListResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ProcessHubMailboxHeaderListAsync(ProcessHubMailboxHeaderListRequest request) {
            this.ProcessHubMailboxHeaderListAsync(request, null);
        }
        
        /// <remarks/>
        public void ProcessHubMailboxHeaderListAsync(ProcessHubMailboxHeaderListRequest request, object userState) {
            if ((this.ProcessHubMailboxHeaderListOperationCompleted == null)) {
                this.ProcessHubMailboxHeaderListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProcessHubMailboxHeaderListOperationCompleted);
            }
            this.InvokeAsync("ProcessHubMailboxHeaderList", new object[] {
                        request}, this.ProcessHubMailboxHeaderListOperationCompleted, userState);
        }
        
        private void OnProcessHubMailboxHeaderListOperationCompleted(object arg) {
            if ((this.ProcessHubMailboxHeaderListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProcessHubMailboxHeaderListCompleted(this, new ProcessHubMailboxHeaderListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/SaveEPADecisionRequest", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SaveEPADecisionRequest([System.Xml.Serialization.XmlElementAttribute("saveEPADecisionRequest")] EPAMsgRequest saveEPADecisionRequest1) {
            this.Invoke("SaveEPADecisionRequest", new object[] {
                        saveEPADecisionRequest1});
        }
        
        /// <remarks/>
        public void SaveEPADecisionRequestAsync(EPAMsgRequest saveEPADecisionRequest1) {
            this.SaveEPADecisionRequestAsync(saveEPADecisionRequest1, null);
        }
        
        /// <remarks/>
        public void SaveEPADecisionRequestAsync(EPAMsgRequest saveEPADecisionRequest1, object userState) {
            if ((this.SaveEPADecisionRequestOperationCompleted == null)) {
                this.SaveEPADecisionRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveEPADecisionRequestOperationCompleted);
            }
            this.InvokeAsync("SaveEPADecisionRequest", new object[] {
                        saveEPADecisionRequest1}, this.SaveEPADecisionRequestOperationCompleted, userState);
        }
        
        private void OnSaveEPADecisionRequestOperationCompleted(object arg) {
            if ((this.SaveEPADecisionRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveEPADecisionRequestCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/SendEPATxHubConnectorMessage", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public HubResponse SendEPATxHubConnectorMessage(string message) {
            object[] results = this.Invoke("SendEPATxHubConnectorMessage", new object[] {
                        message});
            return ((HubResponse)(results[0]));
        }
        
        /// <remarks/>
        public void SendEPATxHubConnectorMessageAsync(string message) {
            this.SendEPATxHubConnectorMessageAsync(message, null);
        }
        
        /// <remarks/>
        public void SendEPATxHubConnectorMessageAsync(string message, object userState) {
            if ((this.SendEPATxHubConnectorMessageOperationCompleted == null)) {
                this.SendEPATxHubConnectorMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendEPATxHubConnectorMessageOperationCompleted);
            }
            this.InvokeAsync("SendEPATxHubConnectorMessage", new object[] {
                        message}, this.SendEPATxHubConnectorMessageOperationCompleted, userState);
        }
        
        private void OnSendEPATxHubConnectorMessageOperationCompleted(object arg) {
            if ((this.SendEPATxHubConnectorMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendEPATxHubConnectorMessageCompleted(this, new SendEPATxHubConnectorMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/ProcessNCPDPEPAMessage", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ProcessNCPDPEPAMessage(string request) {
            object[] results = this.Invoke("ProcessNCPDPEPAMessage", new object[] {
                        request});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ProcessNCPDPEPAMessageAsync(string request) {
            this.ProcessNCPDPEPAMessageAsync(request, null);
        }
        
        /// <remarks/>
        public void ProcessNCPDPEPAMessageAsync(string request, object userState) {
            if ((this.ProcessNCPDPEPAMessageOperationCompleted == null)) {
                this.ProcessNCPDPEPAMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProcessNCPDPEPAMessageOperationCompleted);
            }
            this.InvokeAsync("ProcessNCPDPEPAMessage", new object[] {
                        request}, this.ProcessNCPDPEPAMessageOperationCompleted, userState);
        }
        
        private void OnProcessNCPDPEPAMessageOperationCompleted(object arg) {
            if ((this.ProcessNCPDPEPAMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProcessNCPDPEPAMessageCompleted(this, new ProcessNCPDPEPAMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/AddLicenseToUMP", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AddLicenseToUMPResponse AddLicenseToUMP(AddLicenseToUMPRequest request) {
            object[] results = this.Invoke("AddLicenseToUMP", new object[] {
                        request});
            return ((AddLicenseToUMPResponse)(results[0]));
        }
        
        /// <remarks/>
        public void AddLicenseToUMPAsync(AddLicenseToUMPRequest request) {
            this.AddLicenseToUMPAsync(request, null);
        }
        
        /// <remarks/>
        public void AddLicenseToUMPAsync(AddLicenseToUMPRequest request, object userState) {
            if ((this.AddLicenseToUMPOperationCompleted == null)) {
                this.AddLicenseToUMPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddLicenseToUMPOperationCompleted);
            }
            this.InvokeAsync("AddLicenseToUMP", new object[] {
                        request}, this.AddLicenseToUMPOperationCompleted, userState);
        }
        
        private void OnAddLicenseToUMPOperationCompleted(object arg) {
            if ((this.AddLicenseToUMPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddLicenseToUMPCompleted(this, new AddLicenseToUMPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/UpdateLicenseInUMP", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UpdateLicenseInUMPResponse UpdateLicenseInUMP(UpdateLicenseInUMPRequest request) {
            object[] results = this.Invoke("UpdateLicenseInUMP", new object[] {
                        request});
            return ((UpdateLicenseInUMPResponse)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateLicenseInUMPAsync(UpdateLicenseInUMPRequest request) {
            this.UpdateLicenseInUMPAsync(request, null);
        }
        
        /// <remarks/>
        public void UpdateLicenseInUMPAsync(UpdateLicenseInUMPRequest request, object userState) {
            if ((this.UpdateLicenseInUMPOperationCompleted == null)) {
                this.UpdateLicenseInUMPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateLicenseInUMPOperationCompleted);
            }
            this.InvokeAsync("UpdateLicenseInUMP", new object[] {
                        request}, this.UpdateLicenseInUMPOperationCompleted, userState);
        }
        
        private void OnUpdateLicenseInUMPOperationCompleted(object arg) {
            if ((this.UpdateLicenseInUMPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateLicenseInUMPCompleted(this, new UpdateLicenseInUMPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/AddUserToUMP", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AddUserToUMPResponse AddUserToUMP(AddUserToUMPRequest request) {
            object[] results = this.Invoke("AddUserToUMP", new object[] {
                        request});
            return ((AddUserToUMPResponse)(results[0]));
        }
        
        /// <remarks/>
        public void AddUserToUMPAsync(AddUserToUMPRequest request) {
            this.AddUserToUMPAsync(request, null);
        }
        
        /// <remarks/>
        public void AddUserToUMPAsync(AddUserToUMPRequest request, object userState) {
            if ((this.AddUserToUMPOperationCompleted == null)) {
                this.AddUserToUMPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUserToUMPOperationCompleted);
            }
            this.InvokeAsync("AddUserToUMP", new object[] {
                        request}, this.AddUserToUMPOperationCompleted, userState);
        }
        
        private void OnAddUserToUMPOperationCompleted(object arg) {
            if ((this.AddUserToUMPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUserToUMPCompleted(this, new AddUserToUMPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/UpdateUserInUMP", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UpdateUserInUMPResponse UpdateUserInUMP(UpdateUserInUMPRequest request) {
            object[] results = this.Invoke("UpdateUserInUMP", new object[] {
                        request});
            return ((UpdateUserInUMPResponse)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateUserInUMPAsync(UpdateUserInUMPRequest request) {
            this.UpdateUserInUMPAsync(request, null);
        }
        
        /// <remarks/>
        public void UpdateUserInUMPAsync(UpdateUserInUMPRequest request, object userState) {
            if ((this.UpdateUserInUMPOperationCompleted == null)) {
                this.UpdateUserInUMPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserInUMPOperationCompleted);
            }
            this.InvokeAsync("UpdateUserInUMP", new object[] {
                        request}, this.UpdateUserInUMPOperationCompleted, userState);
        }
        
        private void OnUpdateUserInUMPOperationCompleted(object arg) {
            if ((this.UpdateUserInUMPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserInUMPCompleted(this, new UpdateUserInUMPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/UpdateLicenseInUMPByLicenseID", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateLicenseInUMPByLicenseID(string licenseID, ConnectionStringPointer dbID) {
            object[] results = this.Invoke("UpdateLicenseInUMPByLicenseID", new object[] {
                        licenseID,
                        dbID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateLicenseInUMPByLicenseIDAsync(string licenseID, ConnectionStringPointer dbID) {
            this.UpdateLicenseInUMPByLicenseIDAsync(licenseID, dbID, null);
        }
        
        /// <remarks/>
        public void UpdateLicenseInUMPByLicenseIDAsync(string licenseID, ConnectionStringPointer dbID, object userState) {
            if ((this.UpdateLicenseInUMPByLicenseIDOperationCompleted == null)) {
                this.UpdateLicenseInUMPByLicenseIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateLicenseInUMPByLicenseIDOperationCompleted);
            }
            this.InvokeAsync("UpdateLicenseInUMPByLicenseID", new object[] {
                        licenseID,
                        dbID}, this.UpdateLicenseInUMPByLicenseIDOperationCompleted, userState);
        }
        
        private void OnUpdateLicenseInUMPByLicenseIDOperationCompleted(object arg) {
            if ((this.UpdateLicenseInUMPByLicenseIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateLicenseInUMPByLicenseIDCompleted(this, new UpdateLicenseInUMPByLicenseIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/LoadLicenseForUMP", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LicenseInfoForUMP LoadLicenseForUMP(string licenseID, ConnectionStringPointer dbID) {
            object[] results = this.Invoke("LoadLicenseForUMP", new object[] {
                        licenseID,
                        dbID});
            return ((LicenseInfoForUMP)(results[0]));
        }
        
        /// <remarks/>
        public void LoadLicenseForUMPAsync(string licenseID, ConnectionStringPointer dbID) {
            this.LoadLicenseForUMPAsync(licenseID, dbID, null);
        }
        
        /// <remarks/>
        public void LoadLicenseForUMPAsync(string licenseID, ConnectionStringPointer dbID, object userState) {
            if ((this.LoadLicenseForUMPOperationCompleted == null)) {
                this.LoadLicenseForUMPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadLicenseForUMPOperationCompleted);
            }
            this.InvokeAsync("LoadLicenseForUMP", new object[] {
                        licenseID,
                        dbID}, this.LoadLicenseForUMPOperationCompleted, userState);
        }
        
        private void OnLoadLicenseForUMPOperationCompleted(object arg) {
            if ((this.LoadLicenseForUMPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadLicenseForUMPCompleted(this, new LoadLicenseForUMPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetUMPInformation", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UMPInfoByLicenseID GetUMPInformation(string licenseID, ConnectionStringPointer dbID) {
            object[] results = this.Invoke("GetUMPInformation", new object[] {
                        licenseID,
                        dbID});
            return ((UMPInfoByLicenseID)(results[0]));
        }
        
        /// <remarks/>
        public void GetUMPInformationAsync(string licenseID, ConnectionStringPointer dbID) {
            this.GetUMPInformationAsync(licenseID, dbID, null);
        }
        
        /// <remarks/>
        public void GetUMPInformationAsync(string licenseID, ConnectionStringPointer dbID, object userState) {
            if ((this.GetUMPInformationOperationCompleted == null)) {
                this.GetUMPInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUMPInformationOperationCompleted);
            }
            this.InvokeAsync("GetUMPInformation", new object[] {
                        licenseID,
                        dbID}, this.GetUMPInformationOperationCompleted, userState);
        }
        
        private void OnGetUMPInformationOperationCompleted(object arg) {
            if ((this.GetUMPInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUMPInformationCompleted(this, new GetUMPInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetUserUMPStatus", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetUserUMPStatus(string userGuid, ConnectionStringPointer dbID) {
            object[] results = this.Invoke("GetUserUMPStatus", new object[] {
                        userGuid,
                        dbID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserUMPStatusAsync(string userGuid, ConnectionStringPointer dbID) {
            this.GetUserUMPStatusAsync(userGuid, dbID, null);
        }
        
        /// <remarks/>
        public void GetUserUMPStatusAsync(string userGuid, ConnectionStringPointer dbID, object userState) {
            if ((this.GetUserUMPStatusOperationCompleted == null)) {
                this.GetUserUMPStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserUMPStatusOperationCompleted);
            }
            this.InvokeAsync("GetUserUMPStatus", new object[] {
                        userGuid,
                        dbID}, this.GetUserUMPStatusOperationCompleted, userState);
        }
        
        private void OnGetUserUMPStatusOperationCompleted(object arg) {
            if ((this.GetUserUMPStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserUMPStatusCompleted(this, new GetUserUMPStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/UpdateUMPUserStatus", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateUMPUserStatus(string userName, string message, bool isSuccessful, ImportType importType, UMPUserStatus status, ConnectionStringPointer dbID) {
            this.Invoke("UpdateUMPUserStatus", new object[] {
                        userName,
                        message,
                        isSuccessful,
                        importType,
                        status,
                        dbID});
        }
        
        /// <remarks/>
        public void UpdateUMPUserStatusAsync(string userName, string message, bool isSuccessful, ImportType importType, UMPUserStatus status, ConnectionStringPointer dbID) {
            this.UpdateUMPUserStatusAsync(userName, message, isSuccessful, importType, status, dbID, null);
        }
        
        /// <remarks/>
        public void UpdateUMPUserStatusAsync(string userName, string message, bool isSuccessful, ImportType importType, UMPUserStatus status, ConnectionStringPointer dbID, object userState) {
            if ((this.UpdateUMPUserStatusOperationCompleted == null)) {
                this.UpdateUMPUserStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUMPUserStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateUMPUserStatus", new object[] {
                        userName,
                        message,
                        isSuccessful,
                        importType,
                        status,
                        dbID}, this.UpdateUMPUserStatusOperationCompleted, userState);
        }
        
        private void OnUpdateUMPUserStatusOperationCompleted(object arg) {
            if ((this.UpdateUMPUserStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUMPUserStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetLicenseUMPStatus", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetLicenseUMPStatus(string licenseID, ConnectionStringPointer dbID) {
            object[] results = this.Invoke("GetLicenseUMPStatus", new object[] {
                        licenseID,
                        dbID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetLicenseUMPStatusAsync(string licenseID, ConnectionStringPointer dbID) {
            this.GetLicenseUMPStatusAsync(licenseID, dbID, null);
        }
        
        /// <remarks/>
        public void GetLicenseUMPStatusAsync(string licenseID, ConnectionStringPointer dbID, object userState) {
            if ((this.GetLicenseUMPStatusOperationCompleted == null)) {
                this.GetLicenseUMPStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLicenseUMPStatusOperationCompleted);
            }
            this.InvokeAsync("GetLicenseUMPStatus", new object[] {
                        licenseID,
                        dbID}, this.GetLicenseUMPStatusOperationCompleted, userState);
        }
        
        private void OnGetLicenseUMPStatusOperationCompleted(object arg) {
            if ((this.GetLicenseUMPStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLicenseUMPStatusCompleted(this, new GetLicenseUMPStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/UpdateUMPLicenseStatus", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateUMPLicenseStatus(string licenseID, string message, bool isSuccessful, ImportType importType, UMPLicenseStatus status, ConnectionStringPointer dbID) {
            this.Invoke("UpdateUMPLicenseStatus", new object[] {
                        licenseID,
                        message,
                        isSuccessful,
                        importType,
                        status,
                        dbID});
        }
        
        /// <remarks/>
        public void UpdateUMPLicenseStatusAsync(string licenseID, string message, bool isSuccessful, ImportType importType, UMPLicenseStatus status, ConnectionStringPointer dbID) {
            this.UpdateUMPLicenseStatusAsync(licenseID, message, isSuccessful, importType, status, dbID, null);
        }
        
        /// <remarks/>
        public void UpdateUMPLicenseStatusAsync(string licenseID, string message, bool isSuccessful, ImportType importType, UMPLicenseStatus status, ConnectionStringPointer dbID, object userState) {
            if ((this.UpdateUMPLicenseStatusOperationCompleted == null)) {
                this.UpdateUMPLicenseStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUMPLicenseStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateUMPLicenseStatus", new object[] {
                        licenseID,
                        message,
                        isSuccessful,
                        importType,
                        status,
                        dbID}, this.UpdateUMPLicenseStatusOperationCompleted, userState);
        }
        
        private void OnUpdateUMPLicenseStatusOperationCompleted(object arg) {
            if ((this.UpdateUMPLicenseStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUMPLicenseStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetProviderProgramEnrollments", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetProviderProgramEnrollmentsResponse GetProviderProgramEnrollments(GetProviderProgramEnrollmentsRequest request) {
            object[] results = this.Invoke("GetProviderProgramEnrollments", new object[] {
                        request});
            return ((GetProviderProgramEnrollmentsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetProviderProgramEnrollmentsAsync(GetProviderProgramEnrollmentsRequest request) {
            this.GetProviderProgramEnrollmentsAsync(request, null);
        }
        
        /// <remarks/>
        public void GetProviderProgramEnrollmentsAsync(GetProviderProgramEnrollmentsRequest request, object userState) {
            if ((this.GetProviderProgramEnrollmentsOperationCompleted == null)) {
                this.GetProviderProgramEnrollmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProviderProgramEnrollmentsOperationCompleted);
            }
            this.InvokeAsync("GetProviderProgramEnrollments", new object[] {
                        request}, this.GetProviderProgramEnrollmentsOperationCompleted, userState);
        }
        
        private void OnGetProviderProgramEnrollmentsOperationCompleted(object arg) {
            if ((this.GetProviderProgramEnrollmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProviderProgramEnrollmentsCompleted(this, new GetProviderProgramEnrollmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/RxInfoConfirmOffer", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DXCClientUserResponse RxInfoConfirmOffer(RxInfoRequest request) {
            object[] results = this.Invoke("RxInfoConfirmOffer", new object[] {
                        request});
            return ((DXCClientUserResponse)(results[0]));
        }
        
        /// <remarks/>
        public void RxInfoConfirmOfferAsync(RxInfoRequest request) {
            this.RxInfoConfirmOfferAsync(request, null);
        }
        
        /// <remarks/>
        public void RxInfoConfirmOfferAsync(RxInfoRequest request, object userState) {
            if ((this.RxInfoConfirmOfferOperationCompleted == null)) {
                this.RxInfoConfirmOfferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRxInfoConfirmOfferOperationCompleted);
            }
            this.InvokeAsync("RxInfoConfirmOffer", new object[] {
                        request}, this.RxInfoConfirmOfferOperationCompleted, userState);
        }
        
        private void OnRxInfoConfirmOfferOperationCompleted(object arg) {
            if ((this.RxInfoConfirmOfferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RxInfoConfirmOfferCompleted(this, new RxInfoConfirmOfferCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetRxInfo", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DXCClientUserResponse GetRxInfo(RxInfoRequest request) {
            object[] results = this.Invoke("GetRxInfo", new object[] {
                        request});
            return ((DXCClientUserResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetRxInfoAsync(RxInfoRequest request) {
            this.GetRxInfoAsync(request, null);
        }
        
        /// <remarks/>
        public void GetRxInfoAsync(RxInfoRequest request, object userState) {
            if ((this.GetRxInfoOperationCompleted == null)) {
                this.GetRxInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRxInfoOperationCompleted);
            }
            this.InvokeAsync("GetRxInfo", new object[] {
                        request}, this.GetRxInfoOperationCompleted, userState);
        }
        
        private void OnGetRxInfoOperationCompleted(object arg) {
            if ((this.GetRxInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRxInfoCompleted(this, new GetRxInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/IsProviderEnrolledInSpecialtyMed", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsProviderEnrolledInSpecialtyMed(GetSpecialtyMedRequest assistRxRequest) {
            object[] results = this.Invoke("IsProviderEnrolledInSpecialtyMed", new object[] {
                        assistRxRequest});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsProviderEnrolledInSpecialtyMedAsync(GetSpecialtyMedRequest assistRxRequest) {
            this.IsProviderEnrolledInSpecialtyMedAsync(assistRxRequest, null);
        }
        
        /// <remarks/>
        public void IsProviderEnrolledInSpecialtyMedAsync(GetSpecialtyMedRequest assistRxRequest, object userState) {
            if ((this.IsProviderEnrolledInSpecialtyMedOperationCompleted == null)) {
                this.IsProviderEnrolledInSpecialtyMedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsProviderEnrolledInSpecialtyMedOperationCompleted);
            }
            this.InvokeAsync("IsProviderEnrolledInSpecialtyMed", new object[] {
                        assistRxRequest}, this.IsProviderEnrolledInSpecialtyMedOperationCompleted, userState);
        }
        
        private void OnIsProviderEnrolledInSpecialtyMedOperationCompleted(object arg) {
            if ((this.IsProviderEnrolledInSpecialtyMedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsProviderEnrolledInSpecialtyMedCompleted(this, new IsProviderEnrolledInSpecialtyMedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/ProcessInitiationRequest", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public InitiationResult ProcessInitiationRequest([System.Xml.Serialization.XmlElementAttribute("processInitiationRequest")] DXCProcessInitiationRequest processInitiationRequest1) {
            object[] results = this.Invoke("ProcessInitiationRequest", new object[] {
                        processInitiationRequest1});
            return ((InitiationResult)(results[0]));
        }
        
        /// <remarks/>
        public void ProcessInitiationRequestAsync(DXCProcessInitiationRequest processInitiationRequest1) {
            this.ProcessInitiationRequestAsync(processInitiationRequest1, null);
        }
        
        /// <remarks/>
        public void ProcessInitiationRequestAsync(DXCProcessInitiationRequest processInitiationRequest1, object userState) {
            if ((this.ProcessInitiationRequestOperationCompleted == null)) {
                this.ProcessInitiationRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProcessInitiationRequestOperationCompleted);
            }
            this.InvokeAsync("ProcessInitiationRequest", new object[] {
                        processInitiationRequest1}, this.ProcessInitiationRequestOperationCompleted, userState);
        }
        
        private void OnProcessInitiationRequestOperationCompleted(object arg) {
            if ((this.ProcessInitiationRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProcessInitiationRequestCompleted(this, new ProcessInitiationRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetStatusUpdate", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StatusMessageResult GetStatusUpdate(DXCRecommendationContextRequest context) {
            object[] results = this.Invoke("GetStatusUpdate", new object[] {
                        context});
            return ((StatusMessageResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetStatusUpdateAsync(DXCRecommendationContextRequest context) {
            this.GetStatusUpdateAsync(context, null);
        }
        
        /// <remarks/>
        public void GetStatusUpdateAsync(DXCRecommendationContextRequest context, object userState) {
            if ((this.GetStatusUpdateOperationCompleted == null)) {
                this.GetStatusUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStatusUpdateOperationCompleted);
            }
            this.InvokeAsync("GetStatusUpdate", new object[] {
                        context}, this.GetStatusUpdateOperationCompleted, userState);
        }
        
        private void OnGetStatusUpdateOperationCompleted(object arg) {
            if ((this.GetStatusUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStatusUpdateCompleted(this, new GetStatusUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetStatusAndUpdateDatabase", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetStatusAndUpdateDatabase(DXCRecommendationContextRequest context) {
            this.Invoke("GetStatusAndUpdateDatabase", new object[] {
                        context});
        }
        
        /// <remarks/>
        public void GetStatusAndUpdateDatabaseAsync(DXCRecommendationContextRequest context) {
            this.GetStatusAndUpdateDatabaseAsync(context, null);
        }
        
        /// <remarks/>
        public void GetStatusAndUpdateDatabaseAsync(DXCRecommendationContextRequest context, object userState) {
            if ((this.GetStatusAndUpdateDatabaseOperationCompleted == null)) {
                this.GetStatusAndUpdateDatabaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStatusAndUpdateDatabaseOperationCompleted);
            }
            this.InvokeAsync("GetStatusAndUpdateDatabase", new object[] {
                        context}, this.GetStatusAndUpdateDatabaseOperationCompleted, userState);
        }
        
        private void OnGetStatusAndUpdateDatabaseOperationCompleted(object arg) {
            if ((this.GetStatusAndUpdateDatabaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStatusAndUpdateDatabaseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetStatusByActivityIdAndUpdateDatabase", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetStatusByActivityIdAndUpdateDatabase(DXCGetStatusUpdateByActivityIDRequest request) {
            this.Invoke("GetStatusByActivityIdAndUpdateDatabase", new object[] {
                        request});
        }
        
        /// <remarks/>
        public void GetStatusByActivityIdAndUpdateDatabaseAsync(DXCGetStatusUpdateByActivityIDRequest request) {
            this.GetStatusByActivityIdAndUpdateDatabaseAsync(request, null);
        }
        
        /// <remarks/>
        public void GetStatusByActivityIdAndUpdateDatabaseAsync(DXCGetStatusUpdateByActivityIDRequest request, object userState) {
            if ((this.GetStatusByActivityIdAndUpdateDatabaseOperationCompleted == null)) {
                this.GetStatusByActivityIdAndUpdateDatabaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStatusByActivityIdAndUpdateDatabaseOperationCompleted);
            }
            this.InvokeAsync("GetStatusByActivityIdAndUpdateDatabase", new object[] {
                        request}, this.GetStatusByActivityIdAndUpdateDatabaseOperationCompleted, userState);
        }
        
        private void OnGetStatusByActivityIdAndUpdateDatabaseOperationCompleted(object arg) {
            if ((this.GetStatusByActivityIdAndUpdateDatabaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStatusByActivityIdAndUpdateDatabaseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetStatusUpdateByActivityID", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StatusMessageResult GetStatusUpdateByActivityID(DXCGetStatusUpdateByActivityIDRequest request) {
            object[] results = this.Invoke("GetStatusUpdateByActivityID", new object[] {
                        request});
            return ((StatusMessageResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetStatusUpdateByActivityIDAsync(DXCGetStatusUpdateByActivityIDRequest request) {
            this.GetStatusUpdateByActivityIDAsync(request, null);
        }
        
        /// <remarks/>
        public void GetStatusUpdateByActivityIDAsync(DXCGetStatusUpdateByActivityIDRequest request, object userState) {
            if ((this.GetStatusUpdateByActivityIDOperationCompleted == null)) {
                this.GetStatusUpdateByActivityIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStatusUpdateByActivityIDOperationCompleted);
            }
            this.InvokeAsync("GetStatusUpdateByActivityID", new object[] {
                        request}, this.GetStatusUpdateByActivityIDOperationCompleted, userState);
        }
        
        private void OnGetStatusUpdateByActivityIDOperationCompleted(object arg) {
            if ((this.GetStatusUpdateByActivityIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStatusUpdateByActivityIDCompleted(this, new GetStatusUpdateByActivityIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/ConfirmOffer", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ConfirmOffer(DXCConfirmOfferCombinedRequest confirmOfferCombinedRequest) {
            this.Invoke("ConfirmOffer", new object[] {
                        confirmOfferCombinedRequest});
        }
        
        /// <remarks/>
        public void ConfirmOfferAsync(DXCConfirmOfferCombinedRequest confirmOfferCombinedRequest) {
            this.ConfirmOfferAsync(confirmOfferCombinedRequest, null);
        }
        
        /// <remarks/>
        public void ConfirmOfferAsync(DXCConfirmOfferCombinedRequest confirmOfferCombinedRequest, object userState) {
            if ((this.ConfirmOfferOperationCompleted == null)) {
                this.ConfirmOfferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmOfferOperationCompleted);
            }
            this.InvokeAsync("ConfirmOffer", new object[] {
                        confirmOfferCombinedRequest}, this.ConfirmOfferOperationCompleted, userState);
        }
        
        private void OnConfirmOfferOperationCompleted(object arg) {
            if ((this.ConfirmOfferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmOfferCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/DXCClientSyncWhitelist", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DXCClientSyncWhitelist(DXCSyncWhitelistRequest request) {
            this.Invoke("DXCClientSyncWhitelist", new object[] {
                        request});
        }
        
        /// <remarks/>
        public void DXCClientSyncWhitelistAsync(DXCSyncWhitelistRequest request) {
            this.DXCClientSyncWhitelistAsync(request, null);
        }
        
        /// <remarks/>
        public void DXCClientSyncWhitelistAsync(DXCSyncWhitelistRequest request, object userState) {
            if ((this.DXCClientSyncWhitelistOperationCompleted == null)) {
                this.DXCClientSyncWhitelistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDXCClientSyncWhitelistOperationCompleted);
            }
            this.InvokeAsync("DXCClientSyncWhitelist", new object[] {
                        request}, this.DXCClientSyncWhitelistOperationCompleted, userState);
        }
        
        private void OnDXCClientSyncWhitelistOperationCompleted(object arg) {
            if ((this.DXCClientSyncWhitelistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DXCClientSyncWhitelistCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/IsRxInfoAvailableForDDI", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsRxInfoAvailableForDDI(string ddi, ConnectionStringPointer dbID) {
            object[] results = this.Invoke("IsRxInfoAvailableForDDI", new object[] {
                        ddi,
                        dbID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsRxInfoAvailableForDDIAsync(string ddi, ConnectionStringPointer dbID) {
            this.IsRxInfoAvailableForDDIAsync(ddi, dbID, null);
        }
        
        /// <remarks/>
        public void IsRxInfoAvailableForDDIAsync(string ddi, ConnectionStringPointer dbID, object userState) {
            if ((this.IsRxInfoAvailableForDDIOperationCompleted == null)) {
                this.IsRxInfoAvailableForDDIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsRxInfoAvailableForDDIOperationCompleted);
            }
            this.InvokeAsync("IsRxInfoAvailableForDDI", new object[] {
                        ddi,
                        dbID}, this.IsRxInfoAvailableForDDIOperationCompleted, userState);
        }
        
        private void OnIsRxInfoAvailableForDDIOperationCompleted(object arg) {
            if ((this.IsRxInfoAvailableForDDICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsRxInfoAvailableForDDICompleted(this, new IsRxInfoAvailableForDDICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetRxInfoDetailsLiteByRxID", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetRxInfoDetailsLiteByRxIDResponse GetRxInfoDetailsLiteByRxID(GetRxInfoDetailsLiteByRxIDRequest request) {
            object[] results = this.Invoke("GetRxInfoDetailsLiteByRxID", new object[] {
                        request});
            return ((GetRxInfoDetailsLiteByRxIDResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetRxInfoDetailsLiteByRxIDAsync(GetRxInfoDetailsLiteByRxIDRequest request) {
            this.GetRxInfoDetailsLiteByRxIDAsync(request, null);
        }
        
        /// <remarks/>
        public void GetRxInfoDetailsLiteByRxIDAsync(GetRxInfoDetailsLiteByRxIDRequest request, object userState) {
            if ((this.GetRxInfoDetailsLiteByRxIDOperationCompleted == null)) {
                this.GetRxInfoDetailsLiteByRxIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRxInfoDetailsLiteByRxIDOperationCompleted);
            }
            this.InvokeAsync("GetRxInfoDetailsLiteByRxID", new object[] {
                        request}, this.GetRxInfoDetailsLiteByRxIDOperationCompleted, userState);
        }
        
        private void OnGetRxInfoDetailsLiteByRxIDOperationCompleted(object arg) {
            if ((this.GetRxInfoDetailsLiteByRxIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRxInfoDetailsLiteByRxIDCompleted(this, new GetRxInfoDetailsLiteByRxIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetRxInfoHtmlContent", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetRxInfoHtmlContent(GetRxInfoHtmlContentRequest request) {
            object[] results = this.Invoke("GetRxInfoHtmlContent", new object[] {
                        request});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRxInfoHtmlContentAsync(GetRxInfoHtmlContentRequest request) {
            this.GetRxInfoHtmlContentAsync(request, null);
        }
        
        /// <remarks/>
        public void GetRxInfoHtmlContentAsync(GetRxInfoHtmlContentRequest request, object userState) {
            if ((this.GetRxInfoHtmlContentOperationCompleted == null)) {
                this.GetRxInfoHtmlContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRxInfoHtmlContentOperationCompleted);
            }
            this.InvokeAsync("GetRxInfoHtmlContent", new object[] {
                        request}, this.GetRxInfoHtmlContentOperationCompleted, userState);
        }
        
        private void OnGetRxInfoHtmlContentOperationCompleted(object arg) {
            if ((this.GetRxInfoHtmlContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRxInfoHtmlContentCompleted(this, new GetRxInfoHtmlContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/AddOfficeLocation", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AddOfficeLocationResponse AddOfficeLocation(AddOfficeLocationRequest request) {
            object[] results = this.Invoke("AddOfficeLocation", new object[] {
                        request});
            return ((AddOfficeLocationResponse)(results[0]));
        }
        
        /// <remarks/>
        public void AddOfficeLocationAsync(AddOfficeLocationRequest request) {
            this.AddOfficeLocationAsync(request, null);
        }
        
        /// <remarks/>
        public void AddOfficeLocationAsync(AddOfficeLocationRequest request, object userState) {
            if ((this.AddOfficeLocationOperationCompleted == null)) {
                this.AddOfficeLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddOfficeLocationOperationCompleted);
            }
            this.InvokeAsync("AddOfficeLocation", new object[] {
                        request}, this.AddOfficeLocationOperationCompleted, userState);
        }
        
        private void OnAddOfficeLocationOperationCompleted(object arg) {
            if ((this.AddOfficeLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddOfficeLocationCompleted(this, new AddOfficeLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/UpdateOfficeLocation", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UpdateOfficeLocationResponse UpdateOfficeLocation(UpdateOfficeLocationRequest request) {
            object[] results = this.Invoke("UpdateOfficeLocation", new object[] {
                        request});
            return ((UpdateOfficeLocationResponse)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateOfficeLocationAsync(UpdateOfficeLocationRequest request) {
            this.UpdateOfficeLocationAsync(request, null);
        }
        
        /// <remarks/>
        public void UpdateOfficeLocationAsync(UpdateOfficeLocationRequest request, object userState) {
            if ((this.UpdateOfficeLocationOperationCompleted == null)) {
                this.UpdateOfficeLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOfficeLocationOperationCompleted);
            }
            this.InvokeAsync("UpdateOfficeLocation", new object[] {
                        request}, this.UpdateOfficeLocationOperationCompleted, userState);
        }
        
        private void OnUpdateOfficeLocationOperationCompleted(object arg) {
            if ((this.UpdateOfficeLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateOfficeLocationCompleted(this, new UpdateOfficeLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetOfficeLocations", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetOfficeLocationsResponse GetOfficeLocations(GetOfficeLocationRequest request) {
            object[] results = this.Invoke("GetOfficeLocations", new object[] {
                        request});
            return ((GetOfficeLocationsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetOfficeLocationsAsync(GetOfficeLocationRequest request) {
            this.GetOfficeLocationsAsync(request, null);
        }
        
        /// <remarks/>
        public void GetOfficeLocationsAsync(GetOfficeLocationRequest request, object userState) {
            if ((this.GetOfficeLocationsOperationCompleted == null)) {
                this.GetOfficeLocationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOfficeLocationsOperationCompleted);
            }
            this.InvokeAsync("GetOfficeLocations", new object[] {
                        request}, this.GetOfficeLocationsOperationCompleted, userState);
        }
        
        private void OnGetOfficeLocationsOperationCompleted(object arg) {
            if ((this.GetOfficeLocationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOfficeLocationsCompleted(this, new GetOfficeLocationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/UpdatePatientProblem", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UpdatePatientProblemResponse UpdatePatientProblem(UpdatePatientProblemRequest request) {
            object[] results = this.Invoke("UpdatePatientProblem", new object[] {
                        request});
            return ((UpdatePatientProblemResponse)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePatientProblemAsync(UpdatePatientProblemRequest request) {
            this.UpdatePatientProblemAsync(request, null);
        }
        
        /// <remarks/>
        public void UpdatePatientProblemAsync(UpdatePatientProblemRequest request, object userState) {
            if ((this.UpdatePatientProblemOperationCompleted == null)) {
                this.UpdatePatientProblemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePatientProblemOperationCompleted);
            }
            this.InvokeAsync("UpdatePatientProblem", new object[] {
                        request}, this.UpdatePatientProblemOperationCompleted, userState);
        }
        
        private void OnUpdatePatientProblemOperationCompleted(object arg) {
            if ((this.UpdatePatientProblemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePatientProblemCompleted(this, new UpdatePatientProblemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/SavePatientProblem", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SavePatientProblemResponse SavePatientProblem(SavePatientProblemRequest request) {
            object[] results = this.Invoke("SavePatientProblem", new object[] {
                        request});
            return ((SavePatientProblemResponse)(results[0]));
        }
        
        /// <remarks/>
        public void SavePatientProblemAsync(SavePatientProblemRequest request) {
            this.SavePatientProblemAsync(request, null);
        }
        
        /// <remarks/>
        public void SavePatientProblemAsync(SavePatientProblemRequest request, object userState) {
            if ((this.SavePatientProblemOperationCompleted == null)) {
                this.SavePatientProblemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSavePatientProblemOperationCompleted);
            }
            this.InvokeAsync("SavePatientProblem", new object[] {
                        request}, this.SavePatientProblemOperationCompleted, userState);
        }
        
        private void OnSavePatientProblemOperationCompleted(object arg) {
            if ((this.SavePatientProblemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SavePatientProblemCompleted(this, new SavePatientProblemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetPatientProblemsByPatientID", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PatientProblem[] GetPatientProblemsByPatientID(System.Guid patientID, System.Guid licenseID) {
            object[] results = this.Invoke("GetPatientProblemsByPatientID", new object[] {
                        patientID,
                        licenseID});
            return ((PatientProblem[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientProblemsByPatientIDAsync(System.Guid patientID, System.Guid licenseID) {
            this.GetPatientProblemsByPatientIDAsync(patientID, licenseID, null);
        }
        
        /// <remarks/>
        public void GetPatientProblemsByPatientIDAsync(System.Guid patientID, System.Guid licenseID, object userState) {
            if ((this.GetPatientProblemsByPatientIDOperationCompleted == null)) {
                this.GetPatientProblemsByPatientIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientProblemsByPatientIDOperationCompleted);
            }
            this.InvokeAsync("GetPatientProblemsByPatientID", new object[] {
                        patientID,
                        licenseID}, this.GetPatientProblemsByPatientIDOperationCompleted, userState);
        }
        
        private void OnGetPatientProblemsByPatientIDOperationCompleted(object arg) {
            if ((this.GetPatientProblemsByPatientIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientProblemsByPatientIDCompleted(this, new GetPatientProblemsByPatientIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/SavePatientCCD", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SavePatientCCDResponse SavePatientCCD(SavePatientCCDRequest request) {
            object[] results = this.Invoke("SavePatientCCD", new object[] {
                        request});
            return ((SavePatientCCDResponse)(results[0]));
        }
        
        /// <remarks/>
        public void SavePatientCCDAsync(SavePatientCCDRequest request) {
            this.SavePatientCCDAsync(request, null);
        }
        
        /// <remarks/>
        public void SavePatientCCDAsync(SavePatientCCDRequest request, object userState) {
            if ((this.SavePatientCCDOperationCompleted == null)) {
                this.SavePatientCCDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSavePatientCCDOperationCompleted);
            }
            this.InvokeAsync("SavePatientCCD", new object[] {
                        request}, this.SavePatientCCDOperationCompleted, userState);
        }
        
        private void OnSavePatientCCDOperationCompleted(object arg) {
            if ((this.SavePatientCCDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SavePatientCCDCompleted(this, new SavePatientCCDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/SearchDiagnosis", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SearchDiagnosisResponse SearchDiagnosis(DiagnosisSearchRequest diagnosisSearchRequest) {
            object[] results = this.Invoke("SearchDiagnosis", new object[] {
                        diagnosisSearchRequest});
            return ((SearchDiagnosisResponse)(results[0]));
        }
        
        /// <remarks/>
        public void SearchDiagnosisAsync(DiagnosisSearchRequest diagnosisSearchRequest) {
            this.SearchDiagnosisAsync(diagnosisSearchRequest, null);
        }
        
        /// <remarks/>
        public void SearchDiagnosisAsync(DiagnosisSearchRequest diagnosisSearchRequest, object userState) {
            if ((this.SearchDiagnosisOperationCompleted == null)) {
                this.SearchDiagnosisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchDiagnosisOperationCompleted);
            }
            this.InvokeAsync("SearchDiagnosis", new object[] {
                        diagnosisSearchRequest}, this.SearchDiagnosisOperationCompleted, userState);
        }
        
        private void OnSearchDiagnosisOperationCompleted(object arg) {
            if ((this.SearchDiagnosisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchDiagnosisCompleted(this, new SearchDiagnosisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/TypeAheadDiagnosisSearch", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] TypeAheadDiagnosisSearch(DiagnosisSearchRequest diagnosisSearchRequest) {
            object[] results = this.Invoke("TypeAheadDiagnosisSearch", new object[] {
                        diagnosisSearchRequest});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void TypeAheadDiagnosisSearchAsync(DiagnosisSearchRequest diagnosisSearchRequest) {
            this.TypeAheadDiagnosisSearchAsync(diagnosisSearchRequest, null);
        }
        
        /// <remarks/>
        public void TypeAheadDiagnosisSearchAsync(DiagnosisSearchRequest diagnosisSearchRequest, object userState) {
            if ((this.TypeAheadDiagnosisSearchOperationCompleted == null)) {
                this.TypeAheadDiagnosisSearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTypeAheadDiagnosisSearchOperationCompleted);
            }
            this.InvokeAsync("TypeAheadDiagnosisSearch", new object[] {
                        diagnosisSearchRequest}, this.TypeAheadDiagnosisSearchOperationCompleted, userState);
        }
        
        private void OnTypeAheadDiagnosisSearchOperationCompleted(object arg) {
            if ((this.TypeAheadDiagnosisSearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TypeAheadDiagnosisSearchCompleted(this, new TypeAheadDiagnosisSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetRepresentativeDDIForRxNormNameCode", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetRepresentativeDDIForRxNormNameCode(string rxNormCode) {
            object[] results = this.Invoke("GetRepresentativeDDIForRxNormNameCode", new object[] {
                        rxNormCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRepresentativeDDIForRxNormNameCodeAsync(string rxNormCode) {
            this.GetRepresentativeDDIForRxNormNameCodeAsync(rxNormCode, null);
        }
        
        /// <remarks/>
        public void GetRepresentativeDDIForRxNormNameCodeAsync(string rxNormCode, object userState) {
            if ((this.GetRepresentativeDDIForRxNormNameCodeOperationCompleted == null)) {
                this.GetRepresentativeDDIForRxNormNameCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRepresentativeDDIForRxNormNameCodeOperationCompleted);
            }
            this.InvokeAsync("GetRepresentativeDDIForRxNormNameCode", new object[] {
                        rxNormCode}, this.GetRepresentativeDDIForRxNormNameCodeOperationCompleted, userState);
        }
        
        private void OnGetRepresentativeDDIForRxNormNameCodeOperationCompleted(object arg) {
            if ((this.GetRepresentativeDDIForRxNormNameCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRepresentativeDDIForRxNormNameCodeCompleted(this, new GetRepresentativeDDIForRxNormNameCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetRepresentativeMedispanIdForNDFRTCode", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetRepresentativeMedispanIdForNDFRTCode(string NDFRTCode) {
            object[] results = this.Invoke("GetRepresentativeMedispanIdForNDFRTCode", new object[] {
                        NDFRTCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRepresentativeMedispanIdForNDFRTCodeAsync(string NDFRTCode) {
            this.GetRepresentativeMedispanIdForNDFRTCodeAsync(NDFRTCode, null);
        }
        
        /// <remarks/>
        public void GetRepresentativeMedispanIdForNDFRTCodeAsync(string NDFRTCode, object userState) {
            if ((this.GetRepresentativeMedispanIdForNDFRTCodeOperationCompleted == null)) {
                this.GetRepresentativeMedispanIdForNDFRTCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRepresentativeMedispanIdForNDFRTCodeOperationCompleted);
            }
            this.InvokeAsync("GetRepresentativeMedispanIdForNDFRTCode", new object[] {
                        NDFRTCode}, this.GetRepresentativeMedispanIdForNDFRTCodeOperationCompleted, userState);
        }
        
        private void OnGetRepresentativeMedispanIdForNDFRTCodeOperationCompleted(object arg) {
            if ((this.GetRepresentativeMedispanIdForNDFRTCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRepresentativeMedispanIdForNDFRTCodeCompleted(this, new GetRepresentativeMedispanIdForNDFRTCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetPartnersBeingLogged", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PartnersBeingLoggedResponse GetPartnersBeingLogged(PartnersBeingLoggedRequest request) {
            object[] results = this.Invoke("GetPartnersBeingLogged", new object[] {
                        request});
            return ((PartnersBeingLoggedResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetPartnersBeingLoggedAsync(PartnersBeingLoggedRequest request) {
            this.GetPartnersBeingLoggedAsync(request, null);
        }
        
        /// <remarks/>
        public void GetPartnersBeingLoggedAsync(PartnersBeingLoggedRequest request, object userState) {
            if ((this.GetPartnersBeingLoggedOperationCompleted == null)) {
                this.GetPartnersBeingLoggedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPartnersBeingLoggedOperationCompleted);
            }
            this.InvokeAsync("GetPartnersBeingLogged", new object[] {
                        request}, this.GetPartnersBeingLoggedOperationCompleted, userState);
        }
        
        private void OnGetPartnersBeingLoggedOperationCompleted(object arg) {
            if ((this.GetPartnersBeingLoggedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPartnersBeingLoggedCompleted(this, new GetPartnersBeingLoggedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/IsPartnerLoggingEnabled", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsPartnerLoggingEnabled(PartnerLoggingEnabledRequest request) {
            object[] results = this.Invoke("IsPartnerLoggingEnabled", new object[] {
                        request});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsPartnerLoggingEnabledAsync(PartnerLoggingEnabledRequest request) {
            this.IsPartnerLoggingEnabledAsync(request, null);
        }
        
        /// <remarks/>
        public void IsPartnerLoggingEnabledAsync(PartnerLoggingEnabledRequest request, object userState) {
            if ((this.IsPartnerLoggingEnabledOperationCompleted == null)) {
                this.IsPartnerLoggingEnabledOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsPartnerLoggingEnabledOperationCompleted);
            }
            this.InvokeAsync("IsPartnerLoggingEnabled", new object[] {
                        request}, this.IsPartnerLoggingEnabledOperationCompleted, userState);
        }
        
        private void OnIsPartnerLoggingEnabledOperationCompleted(object arg) {
            if ((this.IsPartnerLoggingEnabledCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsPartnerLoggingEnabledCompleted(this, new IsPartnerLoggingEnabledCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/EnableLoggingForPartner", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool EnableLoggingForPartner(EnableLoggingForPartnerRequest request) {
            object[] results = this.Invoke("EnableLoggingForPartner", new object[] {
                        request});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void EnableLoggingForPartnerAsync(EnableLoggingForPartnerRequest request) {
            this.EnableLoggingForPartnerAsync(request, null);
        }
        
        /// <remarks/>
        public void EnableLoggingForPartnerAsync(EnableLoggingForPartnerRequest request, object userState) {
            if ((this.EnableLoggingForPartnerOperationCompleted == null)) {
                this.EnableLoggingForPartnerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnableLoggingForPartnerOperationCompleted);
            }
            this.InvokeAsync("EnableLoggingForPartner", new object[] {
                        request}, this.EnableLoggingForPartnerOperationCompleted, userState);
        }
        
        private void OnEnableLoggingForPartnerOperationCompleted(object arg) {
            if ((this.EnableLoggingForPartnerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnableLoggingForPartnerCompleted(this, new EnableLoggingForPartnerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/DisableLoggingForPartnerByPartnerID", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DisableLoggingForPartnerByPartnerID(DisableLoggingForPartnerByPartnerIDRequest request) {
            object[] results = this.Invoke("DisableLoggingForPartnerByPartnerID", new object[] {
                        request});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DisableLoggingForPartnerByPartnerIDAsync(DisableLoggingForPartnerByPartnerIDRequest request) {
            this.DisableLoggingForPartnerByPartnerIDAsync(request, null);
        }
        
        /// <remarks/>
        public void DisableLoggingForPartnerByPartnerIDAsync(DisableLoggingForPartnerByPartnerIDRequest request, object userState) {
            if ((this.DisableLoggingForPartnerByPartnerIDOperationCompleted == null)) {
                this.DisableLoggingForPartnerByPartnerIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDisableLoggingForPartnerByPartnerIDOperationCompleted);
            }
            this.InvokeAsync("DisableLoggingForPartnerByPartnerID", new object[] {
                        request}, this.DisableLoggingForPartnerByPartnerIDOperationCompleted, userState);
        }
        
        private void OnDisableLoggingForPartnerByPartnerIDOperationCompleted(object arg) {
            if ((this.DisableLoggingForPartnerByPartnerIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DisableLoggingForPartnerByPartnerIDCompleted(this, new DisableLoggingForPartnerByPartnerIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/DeleteAllRecordsFromSvcInstrumentationLog", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteAllRecordsFromSvcInstrumentationLog() {
            object[] results = this.Invoke("DeleteAllRecordsFromSvcInstrumentationLog", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAllRecordsFromSvcInstrumentationLogAsync() {
            this.DeleteAllRecordsFromSvcInstrumentationLogAsync(null);
        }
        
        /// <remarks/>
        public void DeleteAllRecordsFromSvcInstrumentationLogAsync(object userState) {
            if ((this.DeleteAllRecordsFromSvcInstrumentationLogOperationCompleted == null)) {
                this.DeleteAllRecordsFromSvcInstrumentationLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAllRecordsFromSvcInstrumentationLogOperationCompleted);
            }
            this.InvokeAsync("DeleteAllRecordsFromSvcInstrumentationLog", new object[0], this.DeleteAllRecordsFromSvcInstrumentationLogOperationCompleted, userState);
        }
        
        private void OnDeleteAllRecordsFromSvcInstrumentationLogOperationCompleted(object arg) {
            if ((this.DeleteAllRecordsFromSvcInstrumentationLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAllRecordsFromSvcInstrumentationLogCompleted(this, new DeleteAllRecordsFromSvcInstrumentationLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/IsValidPartnerLicenseRelationship", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsValidPartnerLicenseRelationship(IsValidPartnerLicenseRelationshipRequest request) {
            object[] results = this.Invoke("IsValidPartnerLicenseRelationship", new object[] {
                        request});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsValidPartnerLicenseRelationshipAsync(IsValidPartnerLicenseRelationshipRequest request) {
            this.IsValidPartnerLicenseRelationshipAsync(request, null);
        }
        
        /// <remarks/>
        public void IsValidPartnerLicenseRelationshipAsync(IsValidPartnerLicenseRelationshipRequest request, object userState) {
            if ((this.IsValidPartnerLicenseRelationshipOperationCompleted == null)) {
                this.IsValidPartnerLicenseRelationshipOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsValidPartnerLicenseRelationshipOperationCompleted);
            }
            this.InvokeAsync("IsValidPartnerLicenseRelationship", new object[] {
                        request}, this.IsValidPartnerLicenseRelationshipOperationCompleted, userState);
        }
        
        private void OnIsValidPartnerLicenseRelationshipOperationCompleted(object arg) {
            if ((this.IsValidPartnerLicenseRelationshipCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsValidPartnerLicenseRelationshipCompleted(this, new IsValidPartnerLicenseRelationshipCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetAllProvidersAndTraitsForLicense", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetAllProvidersAndTraitsForLicenseResponse GetAllProvidersAndTraitsForLicense(GetAllProvidersAndTraitsForLicenseRequest request) {
            object[] results = this.Invoke("GetAllProvidersAndTraitsForLicense", new object[] {
                        request});
            return ((GetAllProvidersAndTraitsForLicenseResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllProvidersAndTraitsForLicenseAsync(GetAllProvidersAndTraitsForLicenseRequest request) {
            this.GetAllProvidersAndTraitsForLicenseAsync(request, null);
        }
        
        /// <remarks/>
        public void GetAllProvidersAndTraitsForLicenseAsync(GetAllProvidersAndTraitsForLicenseRequest request, object userState) {
            if ((this.GetAllProvidersAndTraitsForLicenseOperationCompleted == null)) {
                this.GetAllProvidersAndTraitsForLicenseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllProvidersAndTraitsForLicenseOperationCompleted);
            }
            this.InvokeAsync("GetAllProvidersAndTraitsForLicense", new object[] {
                        request}, this.GetAllProvidersAndTraitsForLicenseOperationCompleted, userState);
        }
        
        private void OnGetAllProvidersAndTraitsForLicenseOperationCompleted(object arg) {
            if ((this.GetAllProvidersAndTraitsForLicenseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllProvidersAndTraitsForLicenseCompleted(this, new GetAllProvidersAndTraitsForLicenseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetShieldOtpForms", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetShieldOTPFormsResponse GetShieldOtpForms(GetShieldOTPFormsRequest request) {
            object[] results = this.Invoke("GetShieldOtpForms", new object[] {
                        request});
            return ((GetShieldOTPFormsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetShieldOtpFormsAsync(GetShieldOTPFormsRequest request) {
            this.GetShieldOtpFormsAsync(request, null);
        }
        
        /// <remarks/>
        public void GetShieldOtpFormsAsync(GetShieldOTPFormsRequest request, object userState) {
            if ((this.GetShieldOtpFormsOperationCompleted == null)) {
                this.GetShieldOtpFormsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetShieldOtpFormsOperationCompleted);
            }
            this.InvokeAsync("GetShieldOtpForms", new object[] {
                        request}, this.GetShieldOtpFormsOperationCompleted, userState);
        }
        
        private void OnGetShieldOtpFormsOperationCompleted(object arg) {
            if ((this.GetShieldOtpFormsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetShieldOtpFormsCompleted(this, new GetShieldOtpFormsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetShieldSendOtp", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetShieldSendOTPResponse GetShieldSendOtp(GetShieldSendOTPRequest request) {
            object[] results = this.Invoke("GetShieldSendOtp", new object[] {
                        request});
            return ((GetShieldSendOTPResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetShieldSendOtpAsync(GetShieldSendOTPRequest request) {
            this.GetShieldSendOtpAsync(request, null);
        }
        
        /// <remarks/>
        public void GetShieldSendOtpAsync(GetShieldSendOTPRequest request, object userState) {
            if ((this.GetShieldSendOtpOperationCompleted == null)) {
                this.GetShieldSendOtpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetShieldSendOtpOperationCompleted);
            }
            this.InvokeAsync("GetShieldSendOtp", new object[] {
                        request}, this.GetShieldSendOtpOperationCompleted, userState);
        }
        
        private void OnGetShieldSendOtpOperationCompleted(object arg) {
            if ((this.GetShieldSendOtpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetShieldSendOtpCompleted(this, new GetShieldSendOtpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/AuthenicateOTP", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetShieldAuthenicateOTPFormsResponse AuthenicateOTP(GetShieldAuthenicateOTPRequest request) {
            object[] results = this.Invoke("AuthenicateOTP", new object[] {
                        request});
            return ((GetShieldAuthenicateOTPFormsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void AuthenicateOTPAsync(GetShieldAuthenicateOTPRequest request) {
            this.AuthenicateOTPAsync(request, null);
        }
        
        /// <remarks/>
        public void AuthenicateOTPAsync(GetShieldAuthenicateOTPRequest request, object userState) {
            if ((this.AuthenicateOTPOperationCompleted == null)) {
                this.AuthenicateOTPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthenicateOTPOperationCompleted);
            }
            this.InvokeAsync("AuthenicateOTP", new object[] {
                        request}, this.AuthenicateOTPOperationCompleted, userState);
        }
        
        private void OnAuthenicateOTPOperationCompleted(object arg) {
            if ((this.AuthenicateOTPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthenicateOTPCompleted(this, new AuthenicateOTPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/DoesActivationCodeExist", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DoesActivationCodeExist(string activationCode) {
            object[] results = this.Invoke("DoesActivationCodeExist", new object[] {
                        activationCode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DoesActivationCodeExistAsync(string activationCode) {
            this.DoesActivationCodeExistAsync(activationCode, null);
        }
        
        /// <remarks/>
        public void DoesActivationCodeExistAsync(string activationCode, object userState) {
            if ((this.DoesActivationCodeExistOperationCompleted == null)) {
                this.DoesActivationCodeExistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDoesActivationCodeExistOperationCompleted);
            }
            this.InvokeAsync("DoesActivationCodeExist", new object[] {
                        activationCode}, this.DoesActivationCodeExistOperationCompleted, userState);
        }
        
        private void OnDoesActivationCodeExistOperationCompleted(object arg) {
            if ((this.DoesActivationCodeExistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DoesActivationCodeExistCompleted(this, new DoesActivationCodeExistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/ActivateAndUpdateUser", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ActivateAndUpdateUserResponse ActivateAndUpdateUser(ActivateAndUpdateUserRequest request) {
            object[] results = this.Invoke("ActivateAndUpdateUser", new object[] {
                        request});
            return ((ActivateAndUpdateUserResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ActivateAndUpdateUserAsync(ActivateAndUpdateUserRequest request) {
            this.ActivateAndUpdateUserAsync(request, null);
        }
        
        /// <remarks/>
        public void ActivateAndUpdateUserAsync(ActivateAndUpdateUserRequest request, object userState) {
            if ((this.ActivateAndUpdateUserOperationCompleted == null)) {
                this.ActivateAndUpdateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnActivateAndUpdateUserOperationCompleted);
            }
            this.InvokeAsync("ActivateAndUpdateUser", new object[] {
                        request}, this.ActivateAndUpdateUserOperationCompleted, userState);
        }
        
        private void OnActivateAndUpdateUserOperationCompleted(object arg) {
            if ((this.ActivateAndUpdateUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ActivateAndUpdateUserCompleted(this, new ActivateAndUpdateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/ActivateAndUpdateUtilitiesUser", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ActivateAndUpdateUserResponse ActivateAndUpdateUtilitiesUser(ActivateAndUpdateUserRequest request) {
            object[] results = this.Invoke("ActivateAndUpdateUtilitiesUser", new object[] {
                        request});
            return ((ActivateAndUpdateUserResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ActivateAndUpdateUtilitiesUserAsync(ActivateAndUpdateUserRequest request) {
            this.ActivateAndUpdateUtilitiesUserAsync(request, null);
        }
        
        /// <remarks/>
        public void ActivateAndUpdateUtilitiesUserAsync(ActivateAndUpdateUserRequest request, object userState) {
            if ((this.ActivateAndUpdateUtilitiesUserOperationCompleted == null)) {
                this.ActivateAndUpdateUtilitiesUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnActivateAndUpdateUtilitiesUserOperationCompleted);
            }
            this.InvokeAsync("ActivateAndUpdateUtilitiesUser", new object[] {
                        request}, this.ActivateAndUpdateUtilitiesUserOperationCompleted, userState);
        }
        
        private void OnActivateAndUpdateUtilitiesUserOperationCompleted(object arg) {
            if ((this.ActivateAndUpdateUtilitiesUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ActivateAndUpdateUtilitiesUserCompleted(this, new ActivateAndUpdateUtilitiesUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/CreateLicenseForExistingShieldTenant", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CreateLicenseForExistingShieldTenantResponse CreateLicenseForExistingShieldTenant(CreateLicenseForExistingShieldTenantRequest createLicenseForExistingShieldTenantRequest) {
            object[] results = this.Invoke("CreateLicenseForExistingShieldTenant", new object[] {
                        createLicenseForExistingShieldTenantRequest});
            return ((CreateLicenseForExistingShieldTenantResponse)(results[0]));
        }
        
        /// <remarks/>
        public void CreateLicenseForExistingShieldTenantAsync(CreateLicenseForExistingShieldTenantRequest createLicenseForExistingShieldTenantRequest) {
            this.CreateLicenseForExistingShieldTenantAsync(createLicenseForExistingShieldTenantRequest, null);
        }
        
        /// <remarks/>
        public void CreateLicenseForExistingShieldTenantAsync(CreateLicenseForExistingShieldTenantRequest createLicenseForExistingShieldTenantRequest, object userState) {
            if ((this.CreateLicenseForExistingShieldTenantOperationCompleted == null)) {
                this.CreateLicenseForExistingShieldTenantOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateLicenseForExistingShieldTenantOperationCompleted);
            }
            this.InvokeAsync("CreateLicenseForExistingShieldTenant", new object[] {
                        createLicenseForExistingShieldTenantRequest}, this.CreateLicenseForExistingShieldTenantOperationCompleted, userState);
        }
        
        private void OnCreateLicenseForExistingShieldTenantOperationCompleted(object arg) {
            if ((this.CreateLicenseForExistingShieldTenantCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateLicenseForExistingShieldTenantCompleted(this, new CreateLicenseForExistingShieldTenantCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/LinkExistingShieldUserToeRxUser", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LinkExistingShieldUserToeRxUserResponse LinkExistingShieldUserToeRxUser(LinkExistingShieldUserToeRxUserRequest request) {
            object[] results = this.Invoke("LinkExistingShieldUserToeRxUser", new object[] {
                        request});
            return ((LinkExistingShieldUserToeRxUserResponse)(results[0]));
        }
        
        /// <remarks/>
        public void LinkExistingShieldUserToeRxUserAsync(LinkExistingShieldUserToeRxUserRequest request) {
            this.LinkExistingShieldUserToeRxUserAsync(request, null);
        }
        
        /// <remarks/>
        public void LinkExistingShieldUserToeRxUserAsync(LinkExistingShieldUserToeRxUserRequest request, object userState) {
            if ((this.LinkExistingShieldUserToeRxUserOperationCompleted == null)) {
                this.LinkExistingShieldUserToeRxUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLinkExistingShieldUserToeRxUserOperationCompleted);
            }
            this.InvokeAsync("LinkExistingShieldUserToeRxUser", new object[] {
                        request}, this.LinkExistingShieldUserToeRxUserOperationCompleted, userState);
        }
        
        private void OnLinkExistingShieldUserToeRxUserOperationCompleted(object arg) {
            if ((this.LinkExistingShieldUserToeRxUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LinkExistingShieldUserToeRxUserCompleted(this, new LinkExistingShieldUserToeRxUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/LinkExistingShieldUserToUtilitiesUser", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LinkExistingShieldUserToeRxUserResponse LinkExistingShieldUserToUtilitiesUser(LinkExistingShieldUserToeRxUserRequest request) {
            object[] results = this.Invoke("LinkExistingShieldUserToUtilitiesUser", new object[] {
                        request});
            return ((LinkExistingShieldUserToeRxUserResponse)(results[0]));
        }
        
        /// <remarks/>
        public void LinkExistingShieldUserToUtilitiesUserAsync(LinkExistingShieldUserToeRxUserRequest request) {
            this.LinkExistingShieldUserToUtilitiesUserAsync(request, null);
        }
        
        /// <remarks/>
        public void LinkExistingShieldUserToUtilitiesUserAsync(LinkExistingShieldUserToeRxUserRequest request, object userState) {
            if ((this.LinkExistingShieldUserToUtilitiesUserOperationCompleted == null)) {
                this.LinkExistingShieldUserToUtilitiesUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLinkExistingShieldUserToUtilitiesUserOperationCompleted);
            }
            this.InvokeAsync("LinkExistingShieldUserToUtilitiesUser", new object[] {
                        request}, this.LinkExistingShieldUserToUtilitiesUserOperationCompleted, userState);
        }
        
        private void OnLinkExistingShieldUserToUtilitiesUserOperationCompleted(object arg) {
            if ((this.LinkExistingShieldUserToUtilitiesUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LinkExistingShieldUserToUtilitiesUserCompleted(this, new LinkExistingShieldUserToUtilitiesUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/AuthenticateOtpForSigning", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AuthenticateOtpFormsForSigningResponse AuthenticateOtpForSigning(GetShieldAuthenicateOTPRequest request) {
            object[] results = this.Invoke("AuthenticateOtpForSigning", new object[] {
                        request});
            return ((AuthenticateOtpFormsForSigningResponse)(results[0]));
        }
        
        /// <remarks/>
        public void AuthenticateOtpForSigningAsync(GetShieldAuthenicateOTPRequest request) {
            this.AuthenticateOtpForSigningAsync(request, null);
        }
        
        /// <remarks/>
        public void AuthenticateOtpForSigningAsync(GetShieldAuthenicateOTPRequest request, object userState) {
            if ((this.AuthenticateOtpForSigningOperationCompleted == null)) {
                this.AuthenticateOtpForSigningOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthenticateOtpForSigningOperationCompleted);
            }
            this.InvokeAsync("AuthenticateOtpForSigning", new object[] {
                        request}, this.AuthenticateOtpForSigningOperationCompleted, userState);
        }
        
        private void OnAuthenticateOtpForSigningOperationCompleted(object arg) {
            if ((this.AuthenticateOtpForSigningCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthenticateOtpForSigningCompleted(this, new AuthenticateOtpForSigningCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetShieldExternalTenantID", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetShieldExternalTenantID(string accountID) {
            object[] results = this.Invoke("GetShieldExternalTenantID", new object[] {
                        accountID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetShieldExternalTenantIDAsync(string accountID) {
            this.GetShieldExternalTenantIDAsync(accountID, null);
        }
        
        /// <remarks/>
        public void GetShieldExternalTenantIDAsync(string accountID, object userState) {
            if ((this.GetShieldExternalTenantIDOperationCompleted == null)) {
                this.GetShieldExternalTenantIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetShieldExternalTenantIDOperationCompleted);
            }
            this.InvokeAsync("GetShieldExternalTenantID", new object[] {
                        accountID}, this.GetShieldExternalTenantIDOperationCompleted, userState);
        }
        
        private void OnGetShieldExternalTenantIDOperationCompleted(object arg) {
            if ((this.GetShieldExternalTenantIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetShieldExternalTenantIDCompleted(this, new GetShieldExternalTenantIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetTeaserAdFromServiceAlert", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TeaserAdResponse[] GetTeaserAdFromServiceAlert(TeaserAdRequest request) {
            object[] results = this.Invoke("GetTeaserAdFromServiceAlert", new object[] {
                        request});
            return ((TeaserAdResponse[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTeaserAdFromServiceAlertAsync(TeaserAdRequest request) {
            this.GetTeaserAdFromServiceAlertAsync(request, null);
        }
        
        /// <remarks/>
        public void GetTeaserAdFromServiceAlertAsync(TeaserAdRequest request, object userState) {
            if ((this.GetTeaserAdFromServiceAlertOperationCompleted == null)) {
                this.GetTeaserAdFromServiceAlertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTeaserAdFromServiceAlertOperationCompleted);
            }
            this.InvokeAsync("GetTeaserAdFromServiceAlert", new object[] {
                        request}, this.GetTeaserAdFromServiceAlertOperationCompleted, userState);
        }
        
        private void OnGetTeaserAdFromServiceAlertOperationCompleted(object arg) {
            if ((this.GetTeaserAdFromServiceAlertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTeaserAdFromServiceAlertCompleted(this, new GetTeaserAdFromServiceAlertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/InsertAllUsersInEnterpriseForHubEnrollment", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertAllUsersInEnterpriseForHubEnrollment(string entepriseClientId) {
            this.Invoke("InsertAllUsersInEnterpriseForHubEnrollment", new object[] {
                        entepriseClientId});
        }
        
        /// <remarks/>
        public void InsertAllUsersInEnterpriseForHubEnrollmentAsync(string entepriseClientId) {
            this.InsertAllUsersInEnterpriseForHubEnrollmentAsync(entepriseClientId, null);
        }
        
        /// <remarks/>
        public void InsertAllUsersInEnterpriseForHubEnrollmentAsync(string entepriseClientId, object userState) {
            if ((this.InsertAllUsersInEnterpriseForHubEnrollmentOperationCompleted == null)) {
                this.InsertAllUsersInEnterpriseForHubEnrollmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertAllUsersInEnterpriseForHubEnrollmentOperationCompleted);
            }
            this.InvokeAsync("InsertAllUsersInEnterpriseForHubEnrollment", new object[] {
                        entepriseClientId}, this.InsertAllUsersInEnterpriseForHubEnrollmentOperationCompleted, userState);
        }
        
        private void OnInsertAllUsersInEnterpriseForHubEnrollmentOperationCompleted(object arg) {
            if ((this.InsertAllUsersInEnterpriseForHubEnrollmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertAllUsersInEnterpriseForHubEnrollmentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/InsertAllUsersInLicenseForHubEnrollment", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertAllUsersInLicenseForHubEnrollment(InsertAllUsersInLicenseForHubEnrollmentRequest request) {
            this.Invoke("InsertAllUsersInLicenseForHubEnrollment", new object[] {
                        request});
        }
        
        /// <remarks/>
        public void InsertAllUsersInLicenseForHubEnrollmentAsync(InsertAllUsersInLicenseForHubEnrollmentRequest request) {
            this.InsertAllUsersInLicenseForHubEnrollmentAsync(request, null);
        }
        
        /// <remarks/>
        public void InsertAllUsersInLicenseForHubEnrollmentAsync(InsertAllUsersInLicenseForHubEnrollmentRequest request, object userState) {
            if ((this.InsertAllUsersInLicenseForHubEnrollmentOperationCompleted == null)) {
                this.InsertAllUsersInLicenseForHubEnrollmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertAllUsersInLicenseForHubEnrollmentOperationCompleted);
            }
            this.InvokeAsync("InsertAllUsersInLicenseForHubEnrollment", new object[] {
                        request}, this.InsertAllUsersInLicenseForHubEnrollmentOperationCompleted, userState);
        }
        
        private void OnInsertAllUsersInLicenseForHubEnrollmentOperationCompleted(object arg) {
            if ((this.InsertAllUsersInLicenseForHubEnrollmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertAllUsersInLicenseForHubEnrollmentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/AddUserToIlearn", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddUserToIlearn(ILearnRequest request) {
            object[] results = this.Invoke("AddUserToIlearn", new object[] {
                        request});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddUserToIlearnAsync(ILearnRequest request) {
            this.AddUserToIlearnAsync(request, null);
        }
        
        /// <remarks/>
        public void AddUserToIlearnAsync(ILearnRequest request, object userState) {
            if ((this.AddUserToIlearnOperationCompleted == null)) {
                this.AddUserToIlearnOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUserToIlearnOperationCompleted);
            }
            this.InvokeAsync("AddUserToIlearn", new object[] {
                        request}, this.AddUserToIlearnOperationCompleted, userState);
        }
        
        private void OnAddUserToIlearnOperationCompleted(object arg) {
            if ((this.AddUserToIlearnCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUserToIlearnCompleted(this, new AddUserToIlearnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetiAssistSamlToken", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetiAssistSamlTokenResponse GetiAssistSamlToken(GetiAssistSamlTokenRequest request) {
            object[] results = this.Invoke("GetiAssistSamlToken", new object[] {
                        request});
            return ((GetiAssistSamlTokenResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetiAssistSamlTokenAsync(GetiAssistSamlTokenRequest request) {
            this.GetiAssistSamlTokenAsync(request, null);
        }
        
        /// <remarks/>
        public void GetiAssistSamlTokenAsync(GetiAssistSamlTokenRequest request, object userState) {
            if ((this.GetiAssistSamlTokenOperationCompleted == null)) {
                this.GetiAssistSamlTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetiAssistSamlTokenOperationCompleted);
            }
            this.InvokeAsync("GetiAssistSamlToken", new object[] {
                        request}, this.GetiAssistSamlTokenOperationCompleted, userState);
        }
        
        private void OnGetiAssistSamlTokenOperationCompleted(object arg) {
            if ((this.GetiAssistSamlTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetiAssistSamlTokenCompleted(this, new GetiAssistSamlTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetPPTPlusSamlToken", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetPPTPlusSamlTokenResponse GetPPTPlusSamlToken(GetPPTPlusSamlTokenRequest request) {
            object[] results = this.Invoke("GetPPTPlusSamlToken", new object[] {
                        request});
            return ((GetPPTPlusSamlTokenResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetPPTPlusSamlTokenAsync(GetPPTPlusSamlTokenRequest request) {
            this.GetPPTPlusSamlTokenAsync(request, null);
        }
        
        /// <remarks/>
        public void GetPPTPlusSamlTokenAsync(GetPPTPlusSamlTokenRequest request, object userState) {
            if ((this.GetPPTPlusSamlTokenOperationCompleted == null)) {
                this.GetPPTPlusSamlTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPPTPlusSamlTokenOperationCompleted);
            }
            this.InvokeAsync("GetPPTPlusSamlToken", new object[] {
                        request}, this.GetPPTPlusSamlTokenOperationCompleted, userState);
        }
        
        private void OnGetPPTPlusSamlTokenOperationCompleted(object arg) {
            if ((this.GetPPTPlusSamlTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPPTPlusSamlTokenCompleted(this, new GetPPTPlusSamlTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetDenialReasons", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DenialReasonResponse GetDenialReasons(GetDenialReasonsRequest request) {
            object[] results = this.Invoke("GetDenialReasons", new object[] {
                        request});
            return ((DenialReasonResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetDenialReasonsAsync(GetDenialReasonsRequest request) {
            this.GetDenialReasonsAsync(request, null);
        }
        
        /// <remarks/>
        public void GetDenialReasonsAsync(GetDenialReasonsRequest request, object userState) {
            if ((this.GetDenialReasonsOperationCompleted == null)) {
                this.GetDenialReasonsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDenialReasonsOperationCompleted);
            }
            this.InvokeAsync("GetDenialReasons", new object[] {
                        request}, this.GetDenialReasonsOperationCompleted, userState);
        }
        
        private void OnGetDenialReasonsOperationCompleted(object arg) {
            if ((this.GetDenialReasonsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDenialReasonsCompleted(this, new GetDenialReasonsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/LoadMedicationByDDIAndCoverage", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MedicationResponse LoadMedicationByDDIAndCoverage(string DDI, string coverageId, string formularyID, string otcCoverage, int genericDrugPolicy, int unlistedDrugPolicy, ConnectionStringPointer dbID) {
            object[] results = this.Invoke("LoadMedicationByDDIAndCoverage", new object[] {
                        DDI,
                        coverageId,
                        formularyID,
                        otcCoverage,
                        genericDrugPolicy,
                        unlistedDrugPolicy,
                        dbID});
            return ((MedicationResponse)(results[0]));
        }
        
        /// <remarks/>
        public void LoadMedicationByDDIAndCoverageAsync(string DDI, string coverageId, string formularyID, string otcCoverage, int genericDrugPolicy, int unlistedDrugPolicy, ConnectionStringPointer dbID) {
            this.LoadMedicationByDDIAndCoverageAsync(DDI, coverageId, formularyID, otcCoverage, genericDrugPolicy, unlistedDrugPolicy, dbID, null);
        }
        
        /// <remarks/>
        public void LoadMedicationByDDIAndCoverageAsync(string DDI, string coverageId, string formularyID, string otcCoverage, int genericDrugPolicy, int unlistedDrugPolicy, ConnectionStringPointer dbID, object userState) {
            if ((this.LoadMedicationByDDIAndCoverageOperationCompleted == null)) {
                this.LoadMedicationByDDIAndCoverageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadMedicationByDDIAndCoverageOperationCompleted);
            }
            this.InvokeAsync("LoadMedicationByDDIAndCoverage", new object[] {
                        DDI,
                        coverageId,
                        formularyID,
                        otcCoverage,
                        genericDrugPolicy,
                        unlistedDrugPolicy,
                        dbID}, this.LoadMedicationByDDIAndCoverageOperationCompleted, userState);
        }
        
        private void OnLoadMedicationByDDIAndCoverageOperationCompleted(object arg) {
            if ((this.LoadMedicationByDDIAndCoverageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadMedicationByDDIAndCoverageCompleted(this, new LoadMedicationByDDIAndCoverageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetOtpFormsForSigning", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetShieldOTPFormsResponse GetOtpFormsForSigning(GetShieldOTPFormsRequest request) {
            object[] results = this.Invoke("GetOtpFormsForSigning", new object[] {
                        request});
            return ((GetShieldOTPFormsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetOtpFormsForSigningAsync(GetShieldOTPFormsRequest request) {
            this.GetOtpFormsForSigningAsync(request, null);
        }
        
        /// <remarks/>
        public void GetOtpFormsForSigningAsync(GetShieldOTPFormsRequest request, object userState) {
            if ((this.GetOtpFormsForSigningOperationCompleted == null)) {
                this.GetOtpFormsForSigningOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOtpFormsForSigningOperationCompleted);
            }
            this.InvokeAsync("GetOtpFormsForSigning", new object[] {
                        request}, this.GetOtpFormsForSigningOperationCompleted, userState);
        }
        
        private void OnGetOtpFormsForSigningOperationCompleted(object arg) {
            if ((this.GetOtpFormsForSigningCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOtpFormsForSigningCompleted(this, new GetOtpFormsForSigningCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/RequestOTP", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetShieldSendOTPResponse RequestOTP(GetShieldSendOTPRequest request) {
            object[] results = this.Invoke("RequestOTP", new object[] {
                        request});
            return ((GetShieldSendOTPResponse)(results[0]));
        }
        
        /// <remarks/>
        public void RequestOTPAsync(GetShieldSendOTPRequest request) {
            this.RequestOTPAsync(request, null);
        }
        
        /// <remarks/>
        public void RequestOTPAsync(GetShieldSendOTPRequest request, object userState) {
            if ((this.RequestOTPOperationCompleted == null)) {
                this.RequestOTPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRequestOTPOperationCompleted);
            }
            this.InvokeAsync("RequestOTP", new object[] {
                        request}, this.RequestOTPOperationCompleted, userState);
        }
        
        private void OnRequestOTPOperationCompleted(object arg) {
            if ((this.RequestOTPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RequestOTPCompleted(this, new RequestOTPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/SignRxMock", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SignRxMock(string unsignedRx) {
            object[] results = this.Invoke("SignRxMock", new object[] {
                        unsignedRx});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SignRxMockAsync(string unsignedRx) {
            this.SignRxMockAsync(unsignedRx, null);
        }
        
        /// <remarks/>
        public void SignRxMockAsync(string unsignedRx, object userState) {
            if ((this.SignRxMockOperationCompleted == null)) {
                this.SignRxMockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSignRxMockOperationCompleted);
            }
            this.InvokeAsync("SignRxMock", new object[] {
                        unsignedRx}, this.SignRxMockOperationCompleted, userState);
        }
        
        private void OnSignRxMockOperationCompleted(object arg) {
            if ((this.SignRxMockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SignRxMockCompleted(this, new SignRxMockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/ActivateDeativateUserAccount", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UpdateUserResponse ActivateDeativateUserAccount(UpdateUserRequest updateUserRequest) {
            object[] results = this.Invoke("ActivateDeativateUserAccount", new object[] {
                        updateUserRequest});
            return ((UpdateUserResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ActivateDeativateUserAccountAsync(UpdateUserRequest updateUserRequest) {
            this.ActivateDeativateUserAccountAsync(updateUserRequest, null);
        }
        
        /// <remarks/>
        public void ActivateDeativateUserAccountAsync(UpdateUserRequest updateUserRequest, object userState) {
            if ((this.ActivateDeativateUserAccountOperationCompleted == null)) {
                this.ActivateDeativateUserAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnActivateDeativateUserAccountOperationCompleted);
            }
            this.InvokeAsync("ActivateDeativateUserAccount", new object[] {
                        updateUserRequest}, this.ActivateDeativateUserAccountOperationCompleted, userState);
        }
        
        private void OnActivateDeativateUserAccountOperationCompleted(object arg) {
            if ((this.ActivateDeativateUserAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ActivateDeativateUserAccountCompleted(this, new ActivateDeativateUserAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/MarkUserAdminStatus", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UpdateUserResponse MarkUserAdminStatus(UpdateUserRequest updateUserRequest) {
            object[] results = this.Invoke("MarkUserAdminStatus", new object[] {
                        updateUserRequest});
            return ((UpdateUserResponse)(results[0]));
        }
        
        /// <remarks/>
        public void MarkUserAdminStatusAsync(UpdateUserRequest updateUserRequest) {
            this.MarkUserAdminStatusAsync(updateUserRequest, null);
        }
        
        /// <remarks/>
        public void MarkUserAdminStatusAsync(UpdateUserRequest updateUserRequest, object userState) {
            if ((this.MarkUserAdminStatusOperationCompleted == null)) {
                this.MarkUserAdminStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMarkUserAdminStatusOperationCompleted);
            }
            this.InvokeAsync("MarkUserAdminStatus", new object[] {
                        updateUserRequest}, this.MarkUserAdminStatusOperationCompleted, userState);
        }
        
        private void OnMarkUserAdminStatusOperationCompleted(object arg) {
            if ((this.MarkUserAdminStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MarkUserAdminStatusCompleted(this, new MarkUserAdminStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/UpdateShieldUserTenantAdminStatus", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UpdateShieldUserTenantAdminStatusResponse UpdateShieldUserTenantAdminStatus(UpdateShieldUserTenantAdminStatusRequest req) {
            object[] results = this.Invoke("UpdateShieldUserTenantAdminStatus", new object[] {
                        req});
            return ((UpdateShieldUserTenantAdminStatusResponse)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateShieldUserTenantAdminStatusAsync(UpdateShieldUserTenantAdminStatusRequest req) {
            this.UpdateShieldUserTenantAdminStatusAsync(req, null);
        }
        
        /// <remarks/>
        public void UpdateShieldUserTenantAdminStatusAsync(UpdateShieldUserTenantAdminStatusRequest req, object userState) {
            if ((this.UpdateShieldUserTenantAdminStatusOperationCompleted == null)) {
                this.UpdateShieldUserTenantAdminStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateShieldUserTenantAdminStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateShieldUserTenantAdminStatus", new object[] {
                        req}, this.UpdateShieldUserTenantAdminStatusOperationCompleted, userState);
        }
        
        private void OnUpdateShieldUserTenantAdminStatusOperationCompleted(object arg) {
            if ((this.UpdateShieldUserTenantAdminStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateShieldUserTenantAdminStatusCompleted(this, new UpdateShieldUserTenantAdminStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/SetShieldUserTrait", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SetShieldUserTraitResponse SetShieldUserTrait(SetShieldUserTraitRequest request) {
            object[] results = this.Invoke("SetShieldUserTrait", new object[] {
                        request});
            return ((SetShieldUserTraitResponse)(results[0]));
        }
        
        /// <remarks/>
        public void SetShieldUserTraitAsync(SetShieldUserTraitRequest request) {
            this.SetShieldUserTraitAsync(request, null);
        }
        
        /// <remarks/>
        public void SetShieldUserTraitAsync(SetShieldUserTraitRequest request, object userState) {
            if ((this.SetShieldUserTraitOperationCompleted == null)) {
                this.SetShieldUserTraitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetShieldUserTraitOperationCompleted);
            }
            this.InvokeAsync("SetShieldUserTrait", new object[] {
                        request}, this.SetShieldUserTraitOperationCompleted, userState);
        }
        
        private void OnSetShieldUserTraitOperationCompleted(object arg) {
            if ((this.SetShieldUserTraitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetShieldUserTraitCompleted(this, new SetShieldUserTraitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/SetProviderTraits", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SetProviderTraitsResponse SetProviderTraits(SetProviderTraitsRequest request) {
            object[] results = this.Invoke("SetProviderTraits", new object[] {
                        request});
            return ((SetProviderTraitsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void SetProviderTraitsAsync(SetProviderTraitsRequest request) {
            this.SetProviderTraitsAsync(request, null);
        }
        
        /// <remarks/>
        public void SetProviderTraitsAsync(SetProviderTraitsRequest request, object userState) {
            if ((this.SetProviderTraitsOperationCompleted == null)) {
                this.SetProviderTraitsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetProviderTraitsOperationCompleted);
            }
            this.InvokeAsync("SetProviderTraits", new object[] {
                        request}, this.SetProviderTraitsOperationCompleted, userState);
        }
        
        private void OnSetProviderTraitsOperationCompleted(object arg) {
            if ((this.SetProviderTraitsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetProviderTraitsCompleted(this, new SetProviderTraitsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetPartners", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Partner[] GetPartners() {
            object[] results = this.Invoke("GetPartners", new object[0]);
            return ((Partner[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPartnersAsync() {
            this.GetPartnersAsync(null);
        }
        
        /// <remarks/>
        public void GetPartnersAsync(object userState) {
            if ((this.GetPartnersOperationCompleted == null)) {
                this.GetPartnersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPartnersOperationCompleted);
            }
            this.InvokeAsync("GetPartners", new object[0], this.GetPartnersOperationCompleted, userState);
        }
        
        private void OnGetPartnersOperationCompleted(object arg) {
            if ((this.GetPartnersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPartnersCompleted(this, new GetPartnersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/SetShieldUserTraitUsingUserToken", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SetShieldUserTraitResponse SetShieldUserTraitUsingUserToken(SetShieldUserTraitRequest request) {
            object[] results = this.Invoke("SetShieldUserTraitUsingUserToken", new object[] {
                        request});
            return ((SetShieldUserTraitResponse)(results[0]));
        }
        
        /// <remarks/>
        public void SetShieldUserTraitUsingUserTokenAsync(SetShieldUserTraitRequest request) {
            this.SetShieldUserTraitUsingUserTokenAsync(request, null);
        }
        
        /// <remarks/>
        public void SetShieldUserTraitUsingUserTokenAsync(SetShieldUserTraitRequest request, object userState) {
            if ((this.SetShieldUserTraitUsingUserTokenOperationCompleted == null)) {
                this.SetShieldUserTraitUsingUserTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetShieldUserTraitUsingUserTokenOperationCompleted);
            }
            this.InvokeAsync("SetShieldUserTraitUsingUserToken", new object[] {
                        request}, this.SetShieldUserTraitUsingUserTokenOperationCompleted, userState);
        }
        
        private void OnSetShieldUserTraitUsingUserTokenOperationCompleted(object arg) {
            if ((this.SetShieldUserTraitUsingUserTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetShieldUserTraitUsingUserTokenCompleted(this, new SetShieldUserTraitUsingUserTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetShieldUserTraitUsingUserToken", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetShieldUserTraitsResponse GetShieldUserTraitUsingUserToken(GetShieldUserTraitsRequest request) {
            object[] results = this.Invoke("GetShieldUserTraitUsingUserToken", new object[] {
                        request});
            return ((GetShieldUserTraitsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetShieldUserTraitUsingUserTokenAsync(GetShieldUserTraitsRequest request) {
            this.GetShieldUserTraitUsingUserTokenAsync(request, null);
        }
        
        /// <remarks/>
        public void GetShieldUserTraitUsingUserTokenAsync(GetShieldUserTraitsRequest request, object userState) {
            if ((this.GetShieldUserTraitUsingUserTokenOperationCompleted == null)) {
                this.GetShieldUserTraitUsingUserTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetShieldUserTraitUsingUserTokenOperationCompleted);
            }
            this.InvokeAsync("GetShieldUserTraitUsingUserToken", new object[] {
                        request}, this.GetShieldUserTraitUsingUserTokenOperationCompleted, userState);
        }
        
        private void OnGetShieldUserTraitUsingUserTokenOperationCompleted(object arg) {
            if ((this.GetShieldUserTraitUsingUserTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetShieldUserTraitUsingUserTokenCompleted(this, new GetShieldUserTraitUsingUserTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetIdProofingUrl", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetIdProofingUrlResponse GetIdProofingUrl(GetIdProofingUrlRequest request) {
            object[] results = this.Invoke("GetIdProofingUrl", new object[] {
                        request});
            return ((GetIdProofingUrlResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetIdProofingUrlAsync(GetIdProofingUrlRequest request) {
            this.GetIdProofingUrlAsync(request, null);
        }
        
        /// <remarks/>
        public void GetIdProofingUrlAsync(GetIdProofingUrlRequest request, object userState) {
            if ((this.GetIdProofingUrlOperationCompleted == null)) {
                this.GetIdProofingUrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIdProofingUrlOperationCompleted);
            }
            this.InvokeAsync("GetIdProofingUrl", new object[] {
                        request}, this.GetIdProofingUrlOperationCompleted, userState);
        }
        
        private void OnGetIdProofingUrlOperationCompleted(object arg) {
            if ((this.GetIdProofingUrlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetIdProofingUrlCompleted(this, new GetIdProofingUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetShieldUserTraits", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetShieldUserTraitsResponse GetShieldUserTraits(GetShieldUserTraitsRequest request) {
            object[] results = this.Invoke("GetShieldUserTraits", new object[] {
                        request});
            return ((GetShieldUserTraitsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetShieldUserTraitsAsync(GetShieldUserTraitsRequest request) {
            this.GetShieldUserTraitsAsync(request, null);
        }
        
        /// <remarks/>
        public void GetShieldUserTraitsAsync(GetShieldUserTraitsRequest request, object userState) {
            if ((this.GetShieldUserTraitsOperationCompleted == null)) {
                this.GetShieldUserTraitsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetShieldUserTraitsOperationCompleted);
            }
            this.InvokeAsync("GetShieldUserTraits", new object[] {
                        request}, this.GetShieldUserTraitsOperationCompleted, userState);
        }
        
        private void OnGetShieldUserTraitsOperationCompleted(object arg) {
            if ((this.GetShieldUserTraitsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetShieldUserTraitsCompleted(this, new GetShieldUserTraitsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/SearchMedication", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SearchMedicationResponse SearchMedication(SearchMedicationRequest request) {
            object[] results = this.Invoke("SearchMedication", new object[] {
                        request});
            return ((SearchMedicationResponse)(results[0]));
        }
        
        /// <remarks/>
        public void SearchMedicationAsync(SearchMedicationRequest request) {
            this.SearchMedicationAsync(request, null);
        }
        
        /// <remarks/>
        public void SearchMedicationAsync(SearchMedicationRequest request, object userState) {
            if ((this.SearchMedicationOperationCompleted == null)) {
                this.SearchMedicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchMedicationOperationCompleted);
            }
            this.InvokeAsync("SearchMedication", new object[] {
                        request}, this.SearchMedicationOperationCompleted, userState);
        }
        
        private void OnSearchMedicationOperationCompleted(object arg) {
            if ((this.SearchMedicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchMedicationCompleted(this, new SearchMedicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/SearchMedicationAndClass", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SearchMedicationAndClassResponse SearchMedicationAndClass(SearchMedicationAndClassRequest request) {
            object[] results = this.Invoke("SearchMedicationAndClass", new object[] {
                        request});
            return ((SearchMedicationAndClassResponse)(results[0]));
        }
        
        /// <remarks/>
        public void SearchMedicationAndClassAsync(SearchMedicationAndClassRequest request) {
            this.SearchMedicationAndClassAsync(request, null);
        }
        
        /// <remarks/>
        public void SearchMedicationAndClassAsync(SearchMedicationAndClassRequest request, object userState) {
            if ((this.SearchMedicationAndClassOperationCompleted == null)) {
                this.SearchMedicationAndClassOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchMedicationAndClassOperationCompleted);
            }
            this.InvokeAsync("SearchMedicationAndClass", new object[] {
                        request}, this.SearchMedicationAndClassOperationCompleted, userState);
        }
        
        private void OnSearchMedicationAndClassOperationCompleted(object arg) {
            if ((this.SearchMedicationAndClassCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchMedicationAndClassCompleted(this, new SearchMedicationAndClassCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/LoadMedicationByName", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LoadMedicationResponse LoadMedicationByName(LoadMedicationRequest request) {
            object[] results = this.Invoke("LoadMedicationByName", new object[] {
                        request});
            return ((LoadMedicationResponse)(results[0]));
        }
        
        /// <remarks/>
        public void LoadMedicationByNameAsync(LoadMedicationRequest request) {
            this.LoadMedicationByNameAsync(request, null);
        }
        
        /// <remarks/>
        public void LoadMedicationByNameAsync(LoadMedicationRequest request, object userState) {
            if ((this.LoadMedicationByNameOperationCompleted == null)) {
                this.LoadMedicationByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadMedicationByNameOperationCompleted);
            }
            this.InvokeAsync("LoadMedicationByName", new object[] {
                        request}, this.LoadMedicationByNameOperationCompleted, userState);
        }
        
        private void OnLoadMedicationByNameOperationCompleted(object arg) {
            if ((this.LoadMedicationByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadMedicationByNameCompleted(this, new LoadMedicationByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetECoupon", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DXCClientUserResponse GetECoupon(ECouponRequest request) {
            object[] results = this.Invoke("GetECoupon", new object[] {
                        request});
            return ((DXCClientUserResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetECouponAsync(ECouponRequest request) {
            this.GetECouponAsync(request, null);
        }
        
        /// <remarks/>
        public void GetECouponAsync(ECouponRequest request, object userState) {
            if ((this.GetECouponOperationCompleted == null)) {
                this.GetECouponOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetECouponOperationCompleted);
            }
            this.InvokeAsync("GetECoupon", new object[] {
                        request}, this.GetECouponOperationCompleted, userState);
        }
        
        private void OnGetECouponOperationCompleted(object arg) {
            if ((this.GetECouponCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetECouponCompleted(this, new GetECouponCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/IsECouponAvailableForDDI", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsECouponAvailableForDDI(string ddi, ConnectionStringPointer dbID) {
            object[] results = this.Invoke("IsECouponAvailableForDDI", new object[] {
                        ddi,
                        dbID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsECouponAvailableForDDIAsync(string ddi, ConnectionStringPointer dbID) {
            this.IsECouponAvailableForDDIAsync(ddi, dbID, null);
        }
        
        /// <remarks/>
        public void IsECouponAvailableForDDIAsync(string ddi, ConnectionStringPointer dbID, object userState) {
            if ((this.IsECouponAvailableForDDIOperationCompleted == null)) {
                this.IsECouponAvailableForDDIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsECouponAvailableForDDIOperationCompleted);
            }
            this.InvokeAsync("IsECouponAvailableForDDI", new object[] {
                        ddi,
                        dbID}, this.IsECouponAvailableForDDIOperationCompleted, userState);
        }
        
        private void OnIsECouponAvailableForDDIOperationCompleted(object arg) {
            if ((this.IsECouponAvailableForDDICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsECouponAvailableForDDICompleted(this, new IsECouponAvailableForDDICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetECouponDetailByRxID", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetECouponDetailByRxIDResponse GetECouponDetailByRxID(ECouponRequest request) {
            object[] results = this.Invoke("GetECouponDetailByRxID", new object[] {
                        request});
            return ((GetECouponDetailByRxIDResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetECouponDetailByRxIDAsync(ECouponRequest request) {
            this.GetECouponDetailByRxIDAsync(request, null);
        }
        
        /// <remarks/>
        public void GetECouponDetailByRxIDAsync(ECouponRequest request, object userState) {
            if ((this.GetECouponDetailByRxIDOperationCompleted == null)) {
                this.GetECouponDetailByRxIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetECouponDetailByRxIDOperationCompleted);
            }
            this.InvokeAsync("GetECouponDetailByRxID", new object[] {
                        request}, this.GetECouponDetailByRxIDOperationCompleted, userState);
        }
        
        private void OnGetECouponDetailByRxIDOperationCompleted(object arg) {
            if ((this.GetECouponDetailByRxIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetECouponDetailByRxIDCompleted(this, new GetECouponDetailByRxIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/ECouponConfirmOffer", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DXCClientUserResponse ECouponConfirmOffer(ECouponRequest request) {
            object[] results = this.Invoke("ECouponConfirmOffer", new object[] {
                        request});
            return ((DXCClientUserResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ECouponConfirmOfferAsync(ECouponRequest request) {
            this.ECouponConfirmOfferAsync(request, null);
        }
        
        /// <remarks/>
        public void ECouponConfirmOfferAsync(ECouponRequest request, object userState) {
            if ((this.ECouponConfirmOfferOperationCompleted == null)) {
                this.ECouponConfirmOfferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnECouponConfirmOfferOperationCompleted);
            }
            this.InvokeAsync("ECouponConfirmOffer", new object[] {
                        request}, this.ECouponConfirmOfferOperationCompleted, userState);
        }
        
        private void OnECouponConfirmOfferOperationCompleted(object arg) {
            if ((this.ECouponConfirmOfferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ECouponConfirmOfferCompleted(this, new ECouponConfirmOfferCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/AreECouponNotesToRxPharmacyNotesUpdated", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AreECouponNotesToRxPharmacyNotesUpdated(ECouponRequest request) {
            object[] results = this.Invoke("AreECouponNotesToRxPharmacyNotesUpdated", new object[] {
                        request});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AreECouponNotesToRxPharmacyNotesUpdatedAsync(ECouponRequest request) {
            this.AreECouponNotesToRxPharmacyNotesUpdatedAsync(request, null);
        }
        
        /// <remarks/>
        public void AreECouponNotesToRxPharmacyNotesUpdatedAsync(ECouponRequest request, object userState) {
            if ((this.AreECouponNotesToRxPharmacyNotesUpdatedOperationCompleted == null)) {
                this.AreECouponNotesToRxPharmacyNotesUpdatedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAreECouponNotesToRxPharmacyNotesUpdatedOperationCompleted);
            }
            this.InvokeAsync("AreECouponNotesToRxPharmacyNotesUpdated", new object[] {
                        request}, this.AreECouponNotesToRxPharmacyNotesUpdatedOperationCompleted, userState);
        }
        
        private void OnAreECouponNotesToRxPharmacyNotesUpdatedOperationCompleted(object arg) {
            if ((this.AreECouponNotesToRxPharmacyNotesUpdatedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AreECouponNotesToRxPharmacyNotesUpdatedCompleted(this, new AreECouponNotesToRxPharmacyNotesUpdatedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetECouponDetailsLiteByID", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetECouponDetailsLiteByIDResponse GetECouponDetailsLiteByID(ECouponRequest request) {
            object[] results = this.Invoke("GetECouponDetailsLiteByID", new object[] {
                        request});
            return ((GetECouponDetailsLiteByIDResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetECouponDetailsLiteByIDAsync(ECouponRequest request) {
            this.GetECouponDetailsLiteByIDAsync(request, null);
        }
        
        /// <remarks/>
        public void GetECouponDetailsLiteByIDAsync(ECouponRequest request, object userState) {
            if ((this.GetECouponDetailsLiteByIDOperationCompleted == null)) {
                this.GetECouponDetailsLiteByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetECouponDetailsLiteByIDOperationCompleted);
            }
            this.InvokeAsync("GetECouponDetailsLiteByID", new object[] {
                        request}, this.GetECouponDetailsLiteByIDOperationCompleted, userState);
        }
        
        private void OnGetECouponDetailsLiteByIDOperationCompleted(object arg) {
            if ((this.GetECouponDetailsLiteByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetECouponDetailsLiteByIDCompleted(this, new GetECouponDetailsLiteByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetECouponTransactionDetail", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetECouponTransactionDetailResponse GetECouponTransactionDetail(GetECouponTransactionDetailRequest request) {
            object[] results = this.Invoke("GetECouponTransactionDetail", new object[] {
                        request});
            return ((GetECouponTransactionDetailResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetECouponTransactionDetailAsync(GetECouponTransactionDetailRequest request) {
            this.GetECouponTransactionDetailAsync(request, null);
        }
        
        /// <remarks/>
        public void GetECouponTransactionDetailAsync(GetECouponTransactionDetailRequest request, object userState) {
            if ((this.GetECouponTransactionDetailOperationCompleted == null)) {
                this.GetECouponTransactionDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetECouponTransactionDetailOperationCompleted);
            }
            this.InvokeAsync("GetECouponTransactionDetail", new object[] {
                        request}, this.GetECouponTransactionDetailOperationCompleted, userState);
        }
        
        private void OnGetECouponTransactionDetailOperationCompleted(object arg) {
            if ((this.GetECouponTransactionDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetECouponTransactionDetailCompleted(this, new GetECouponTransactionDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetECouponDxcResponseXml", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetECouponDxcResponseXml(ECouponRequest request) {
            object[] results = this.Invoke("GetECouponDxcResponseXml", new object[] {
                        request});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetECouponDxcResponseXmlAsync(ECouponRequest request) {
            this.GetECouponDxcResponseXmlAsync(request, null);
        }
        
        /// <remarks/>
        public void GetECouponDxcResponseXmlAsync(ECouponRequest request, object userState) {
            if ((this.GetECouponDxcResponseXmlOperationCompleted == null)) {
                this.GetECouponDxcResponseXmlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetECouponDxcResponseXmlOperationCompleted);
            }
            this.InvokeAsync("GetECouponDxcResponseXml", new object[] {
                        request}, this.GetECouponDxcResponseXmlOperationCompleted, userState);
        }
        
        private void OnGetECouponDxcResponseXmlOperationCompleted(object arg) {
            if ((this.GetECouponDxcResponseXmlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetECouponDxcResponseXmlCompleted(this, new GetECouponDxcResponseXmlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/SendMessageTwilio", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ePrescribeSvcResponse SendMessageTwilio(SMSAlertsRequest request) {
            object[] results = this.Invoke("SendMessageTwilio", new object[] {
                        request});
            return ((ePrescribeSvcResponse)(results[0]));
        }
        
        /// <remarks/>
        public void SendMessageTwilioAsync(SMSAlertsRequest request) {
            this.SendMessageTwilioAsync(request, null);
        }
        
        /// <remarks/>
        public void SendMessageTwilioAsync(SMSAlertsRequest request, object userState) {
            if ((this.SendMessageTwilioOperationCompleted == null)) {
                this.SendMessageTwilioOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMessageTwilioOperationCompleted);
            }
            this.InvokeAsync("SendMessageTwilio", new object[] {
                        request}, this.SendMessageTwilioOperationCompleted, userState);
        }
        
        private void OnSendMessageTwilioOperationCompleted(object arg) {
            if ((this.SendMessageTwilioCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendMessageTwilioCompleted(this, new SendMessageTwilioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/IsSMSAlertDailyCountReached", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsSMSAlertDailyCountReached(ePrescribeSvcRequest request) {
            object[] results = this.Invoke("IsSMSAlertDailyCountReached", new object[] {
                        request});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsSMSAlertDailyCountReachedAsync(ePrescribeSvcRequest request) {
            this.IsSMSAlertDailyCountReachedAsync(request, null);
        }
        
        /// <remarks/>
        public void IsSMSAlertDailyCountReachedAsync(ePrescribeSvcRequest request, object userState) {
            if ((this.IsSMSAlertDailyCountReachedOperationCompleted == null)) {
                this.IsSMSAlertDailyCountReachedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsSMSAlertDailyCountReachedOperationCompleted);
            }
            this.InvokeAsync("IsSMSAlertDailyCountReached", new object[] {
                        request}, this.IsSMSAlertDailyCountReachedOperationCompleted, userState);
        }
        
        private void OnIsSMSAlertDailyCountReachedOperationCompleted(object arg) {
            if ((this.IsSMSAlertDailyCountReachedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsSMSAlertDailyCountReachedCompleted(this, new IsSMSAlertDailyCountReachedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/ECouponRefillRequest", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ECouponRefillResponse ECouponRefillRequest(ECouponRefillRequest request) {
            object[] results = this.Invoke("ECouponRefillRequest", new object[] {
                        request});
            return ((ECouponRefillResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ECouponRefillRequestAsync(ECouponRefillRequest request) {
            this.ECouponRefillRequestAsync(request, null);
        }
        
        /// <remarks/>
        public void ECouponRefillRequestAsync(ECouponRefillRequest request, object userState) {
            if ((this.ECouponRefillRequestOperationCompleted == null)) {
                this.ECouponRefillRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnECouponRefillRequestOperationCompleted);
            }
            this.InvokeAsync("ECouponRefillRequest", new object[] {
                        request}, this.ECouponRefillRequestOperationCompleted, userState);
        }
        
        private void OnECouponRefillRequestOperationCompleted(object arg) {
            if ((this.ECouponRefillRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ECouponRefillRequestCompleted(this, new ECouponRefillRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/ECouponRefillPrintRequest", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ECouponRefillPrintResponse ECouponRefillPrintRequest(ECouponRefillRequest request) {
            object[] results = this.Invoke("ECouponRefillPrintRequest", new object[] {
                        request});
            return ((ECouponRefillPrintResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ECouponRefillPrintRequestAsync(ECouponRefillRequest request) {
            this.ECouponRefillPrintRequestAsync(request, null);
        }
        
        /// <remarks/>
        public void ECouponRefillPrintRequestAsync(ECouponRefillRequest request, object userState) {
            if ((this.ECouponRefillPrintRequestOperationCompleted == null)) {
                this.ECouponRefillPrintRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnECouponRefillPrintRequestOperationCompleted);
            }
            this.InvokeAsync("ECouponRefillPrintRequest", new object[] {
                        request}, this.ECouponRefillPrintRequestOperationCompleted, userState);
        }
        
        private void OnECouponRefillPrintRequestOperationCompleted(object arg) {
            if ((this.ECouponRefillPrintRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ECouponRefillPrintRequestCompleted(this, new ECouponRefillPrintRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/SaveRxError", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SaveRxErrorResponse SaveRxError(SaveRxErrorRequest request) {
            object[] results = this.Invoke("SaveRxError", new object[] {
                        request});
            return ((SaveRxErrorResponse)(results[0]));
        }
        
        /// <remarks/>
        public void SaveRxErrorAsync(SaveRxErrorRequest request) {
            this.SaveRxErrorAsync(request, null);
        }
        
        /// <remarks/>
        public void SaveRxErrorAsync(SaveRxErrorRequest request, object userState) {
            if ((this.SaveRxErrorOperationCompleted == null)) {
                this.SaveRxErrorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveRxErrorOperationCompleted);
            }
            this.InvokeAsync("SaveRxError", new object[] {
                        request}, this.SaveRxErrorOperationCompleted, userState);
        }
        
        private void OnSaveRxErrorOperationCompleted(object arg) {
            if ((this.SaveRxErrorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveRxErrorCompleted(this, new SaveRxErrorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/InsertMessageQueueTx", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public InsertMessageQueueResponse InsertMessageQueueTx(InsertMessageQueueRequest request) {
            object[] results = this.Invoke("InsertMessageQueueTx", new object[] {
                        request});
            return ((InsertMessageQueueResponse)(results[0]));
        }
        
        /// <remarks/>
        public void InsertMessageQueueTxAsync(InsertMessageQueueRequest request) {
            this.InsertMessageQueueTxAsync(request, null);
        }
        
        /// <remarks/>
        public void InsertMessageQueueTxAsync(InsertMessageQueueRequest request, object userState) {
            if ((this.InsertMessageQueueTxOperationCompleted == null)) {
                this.InsertMessageQueueTxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertMessageQueueTxOperationCompleted);
            }
            this.InvokeAsync("InsertMessageQueueTx", new object[] {
                        request}, this.InsertMessageQueueTxOperationCompleted, userState);
        }
        
        private void OnInsertMessageQueueTxOperationCompleted(object arg) {
            if ((this.InsertMessageQueueTxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertMessageQueueTxCompleted(this, new InsertMessageQueueTxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/UpdateMessageQueueTx", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UpdateMessageQueueResponse UpdateMessageQueueTx(UpdateMessageQueueRequest request) {
            object[] results = this.Invoke("UpdateMessageQueueTx", new object[] {
                        request});
            return ((UpdateMessageQueueResponse)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateMessageQueueTxAsync(UpdateMessageQueueRequest request) {
            this.UpdateMessageQueueTxAsync(request, null);
        }
        
        /// <remarks/>
        public void UpdateMessageQueueTxAsync(UpdateMessageQueueRequest request, object userState) {
            if ((this.UpdateMessageQueueTxOperationCompleted == null)) {
                this.UpdateMessageQueueTxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateMessageQueueTxOperationCompleted);
            }
            this.InvokeAsync("UpdateMessageQueueTx", new object[] {
                        request}, this.UpdateMessageQueueTxOperationCompleted, userState);
        }
        
        private void OnUpdateMessageQueueTxOperationCompleted(object arg) {
            if ((this.UpdateMessageQueueTxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateMessageQueueTxCompleted(this, new UpdateMessageQueueTxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/LoadMessageQueueTx", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LoadMessageQueueTxResponse LoadMessageQueueTx(LoadMessageQueueTxRequest request) {
            object[] results = this.Invoke("LoadMessageQueueTx", new object[] {
                        request});
            return ((LoadMessageQueueTxResponse)(results[0]));
        }
        
        /// <remarks/>
        public void LoadMessageQueueTxAsync(LoadMessageQueueTxRequest request) {
            this.LoadMessageQueueTxAsync(request, null);
        }
        
        /// <remarks/>
        public void LoadMessageQueueTxAsync(LoadMessageQueueTxRequest request, object userState) {
            if ((this.LoadMessageQueueTxOperationCompleted == null)) {
                this.LoadMessageQueueTxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadMessageQueueTxOperationCompleted);
            }
            this.InvokeAsync("LoadMessageQueueTx", new object[] {
                        request}, this.LoadMessageQueueTxOperationCompleted, userState);
        }
        
        private void OnLoadMessageQueueTxOperationCompleted(object arg) {
            if ((this.LoadMessageQueueTxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadMessageQueueTxCompleted(this, new LoadMessageQueueTxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetPendingScripts", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetPendingScriptsResponse GetPendingScripts(GetPendingScriptsRequest request) {
            object[] results = this.Invoke("GetPendingScripts", new object[] {
                        request});
            return ((GetPendingScriptsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetPendingScriptsAsync(GetPendingScriptsRequest request) {
            this.GetPendingScriptsAsync(request, null);
        }
        
        /// <remarks/>
        public void GetPendingScriptsAsync(GetPendingScriptsRequest request, object userState) {
            if ((this.GetPendingScriptsOperationCompleted == null)) {
                this.GetPendingScriptsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPendingScriptsOperationCompleted);
            }
            this.InvokeAsync("GetPendingScripts", new object[] {
                        request}, this.GetPendingScriptsOperationCompleted, userState);
        }
        
        private void OnGetPendingScriptsOperationCompleted(object arg) {
            if ((this.GetPendingScriptsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPendingScriptsCompleted(this, new GetPendingScriptsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetFailedScripts", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetFailedScriptsResponse GetFailedScripts(GetFailedScriptsRequest request) {
            object[] results = this.Invoke("GetFailedScripts", new object[] {
                        request});
            return ((GetFailedScriptsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetFailedScriptsAsync(GetFailedScriptsRequest request) {
            this.GetFailedScriptsAsync(request, null);
        }
        
        /// <remarks/>
        public void GetFailedScriptsAsync(GetFailedScriptsRequest request, object userState) {
            if ((this.GetFailedScriptsOperationCompleted == null)) {
                this.GetFailedScriptsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFailedScriptsOperationCompleted);
            }
            this.InvokeAsync("GetFailedScripts", new object[] {
                        request}, this.GetFailedScriptsOperationCompleted, userState);
        }
        
        private void OnGetFailedScriptsOperationCompleted(object arg) {
            if ((this.GetFailedScriptsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFailedScriptsCompleted(this, new GetFailedScriptsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/IsValidPassword", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public IsValidPasswordResponse IsValidPassword(IsValidPasswordRequest req) {
            object[] results = this.Invoke("IsValidPassword", new object[] {
                        req});
            return ((IsValidPasswordResponse)(results[0]));
        }
        
        /// <remarks/>
        public void IsValidPasswordAsync(IsValidPasswordRequest req) {
            this.IsValidPasswordAsync(req, null);
        }
        
        /// <remarks/>
        public void IsValidPasswordAsync(IsValidPasswordRequest req, object userState) {
            if ((this.IsValidPasswordOperationCompleted == null)) {
                this.IsValidPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsValidPasswordOperationCompleted);
            }
            this.InvokeAsync("IsValidPassword", new object[] {
                        req}, this.IsValidPasswordOperationCompleted, userState);
        }
        
        private void OnIsValidPasswordOperationCompleted(object arg) {
            if ((this.IsValidPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsValidPasswordCompleted(this, new IsValidPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetStateLicenseAndDeaExpiryDateForUser", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetStateLicenseAndDeaExpiryDateForUserResponse GetStateLicenseAndDeaExpiryDateForUser(GetStateLicenseAndDeaExpiryDateForUserRequest request) {
            object[] results = this.Invoke("GetStateLicenseAndDeaExpiryDateForUser", new object[] {
                        request});
            return ((GetStateLicenseAndDeaExpiryDateForUserResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetStateLicenseAndDeaExpiryDateForUserAsync(GetStateLicenseAndDeaExpiryDateForUserRequest request) {
            this.GetStateLicenseAndDeaExpiryDateForUserAsync(request, null);
        }
        
        /// <remarks/>
        public void GetStateLicenseAndDeaExpiryDateForUserAsync(GetStateLicenseAndDeaExpiryDateForUserRequest request, object userState) {
            if ((this.GetStateLicenseAndDeaExpiryDateForUserOperationCompleted == null)) {
                this.GetStateLicenseAndDeaExpiryDateForUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStateLicenseAndDeaExpiryDateForUserOperationCompleted);
            }
            this.InvokeAsync("GetStateLicenseAndDeaExpiryDateForUser", new object[] {
                        request}, this.GetStateLicenseAndDeaExpiryDateForUserOperationCompleted, userState);
        }
        
        private void OnGetStateLicenseAndDeaExpiryDateForUserOperationCompleted(object arg) {
            if ((this.GetStateLicenseAndDeaExpiryDateForUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStateLicenseAndDeaExpiryDateForUserCompleted(this, new GetStateLicenseAndDeaExpiryDateForUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetEnterpriseInfoByPartnerID", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetEnterpriseInfoResponse GetEnterpriseInfoByPartnerID(GetEnterpriseInfoRequest request) {
            object[] results = this.Invoke("GetEnterpriseInfoByPartnerID", new object[] {
                        request});
            return ((GetEnterpriseInfoResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetEnterpriseInfoByPartnerIDAsync(GetEnterpriseInfoRequest request) {
            this.GetEnterpriseInfoByPartnerIDAsync(request, null);
        }
        
        /// <remarks/>
        public void GetEnterpriseInfoByPartnerIDAsync(GetEnterpriseInfoRequest request, object userState) {
            if ((this.GetEnterpriseInfoByPartnerIDOperationCompleted == null)) {
                this.GetEnterpriseInfoByPartnerIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEnterpriseInfoByPartnerIDOperationCompleted);
            }
            this.InvokeAsync("GetEnterpriseInfoByPartnerID", new object[] {
                        request}, this.GetEnterpriseInfoByPartnerIDOperationCompleted, userState);
        }
        
        private void OnGetEnterpriseInfoByPartnerIDOperationCompleted(object arg) {
            if ((this.GetEnterpriseInfoByPartnerIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEnterpriseInfoByPartnerIDCompleted(this, new GetEnterpriseInfoByPartnerIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetACRCommunities", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ACRCommunityResponse GetACRCommunities(ACRCommunityRequest request) {
            object[] results = this.Invoke("GetACRCommunities", new object[] {
                        request});
            return ((ACRCommunityResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetACRCommunitiesAsync(ACRCommunityRequest request) {
            this.GetACRCommunitiesAsync(request, null);
        }
        
        /// <remarks/>
        public void GetACRCommunitiesAsync(ACRCommunityRequest request, object userState) {
            if ((this.GetACRCommunitiesOperationCompleted == null)) {
                this.GetACRCommunitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetACRCommunitiesOperationCompleted);
            }
            this.InvokeAsync("GetACRCommunities", new object[] {
                        request}, this.GetACRCommunitiesOperationCompleted, userState);
        }
        
        private void OnGetACRCommunitiesOperationCompleted(object arg) {
            if ((this.GetACRCommunitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetACRCommunitiesCompleted(this, new GetACRCommunitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/LaunchClinicalViewer", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ClinicalViewerLaunchResponse LaunchClinicalViewer(ClinicalViewerLaunchRequest request) {
            object[] results = this.Invoke("LaunchClinicalViewer", new object[] {
                        request});
            return ((ClinicalViewerLaunchResponse)(results[0]));
        }
        
        /// <remarks/>
        public void LaunchClinicalViewerAsync(ClinicalViewerLaunchRequest request) {
            this.LaunchClinicalViewerAsync(request, null);
        }
        
        /// <remarks/>
        public void LaunchClinicalViewerAsync(ClinicalViewerLaunchRequest request, object userState) {
            if ((this.LaunchClinicalViewerOperationCompleted == null)) {
                this.LaunchClinicalViewerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLaunchClinicalViewerOperationCompleted);
            }
            this.InvokeAsync("LaunchClinicalViewer", new object[] {
                        request}, this.LaunchClinicalViewerOperationCompleted, userState);
        }
        
        private void OnLaunchClinicalViewerOperationCompleted(object arg) {
            if ((this.LaunchClinicalViewerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LaunchClinicalViewerCompleted(this, new LaunchClinicalViewerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/SubmitAcrPixFeedForPatient", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SubmitAcrPixFeedForPatient(ACRSubmitPixFeedRequest request) {
            object[] results = this.Invoke("SubmitAcrPixFeedForPatient", new object[] {
                        request});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SubmitAcrPixFeedForPatientAsync(ACRSubmitPixFeedRequest request) {
            this.SubmitAcrPixFeedForPatientAsync(request, null);
        }
        
        /// <remarks/>
        public void SubmitAcrPixFeedForPatientAsync(ACRSubmitPixFeedRequest request, object userState) {
            if ((this.SubmitAcrPixFeedForPatientOperationCompleted == null)) {
                this.SubmitAcrPixFeedForPatientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitAcrPixFeedForPatientOperationCompleted);
            }
            this.InvokeAsync("SubmitAcrPixFeedForPatient", new object[] {
                        request}, this.SubmitAcrPixFeedForPatientOperationCompleted, userState);
        }
        
        private void OnSubmitAcrPixFeedForPatientOperationCompleted(object arg) {
            if ((this.SubmitAcrPixFeedForPatientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitAcrPixFeedForPatientCompleted(this, new SubmitAcrPixFeedForPatientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetPatientCCD", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetPatientCCDResponse GetPatientCCD(GetPatientCCDRequest request) {
            object[] results = this.Invoke("GetPatientCCD", new object[] {
                        request});
            return ((GetPatientCCDResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientCCDAsync(GetPatientCCDRequest request) {
            this.GetPatientCCDAsync(request, null);
        }
        
        /// <remarks/>
        public void GetPatientCCDAsync(GetPatientCCDRequest request, object userState) {
            if ((this.GetPatientCCDOperationCompleted == null)) {
                this.GetPatientCCDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientCCDOperationCompleted);
            }
            this.InvokeAsync("GetPatientCCD", new object[] {
                        request}, this.GetPatientCCDOperationCompleted, userState);
        }
        
        private void OnGetPatientCCDOperationCompleted(object arg) {
            if ((this.GetPatientCCDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientCCDCompleted(this, new GetPatientCCDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/ExportCCDToDBMotion", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ExportCCDToDBMotionResponse ExportCCDToDBMotion(ExportCCDToDBMotionRequest request) {
            object[] results = this.Invoke("ExportCCDToDBMotion", new object[] {
                        request});
            return ((ExportCCDToDBMotionResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ExportCCDToDBMotionAsync(ExportCCDToDBMotionRequest request) {
            this.ExportCCDToDBMotionAsync(request, null);
        }
        
        /// <remarks/>
        public void ExportCCDToDBMotionAsync(ExportCCDToDBMotionRequest request, object userState) {
            if ((this.ExportCCDToDBMotionOperationCompleted == null)) {
                this.ExportCCDToDBMotionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExportCCDToDBMotionOperationCompleted);
            }
            this.InvokeAsync("ExportCCDToDBMotion", new object[] {
                        request}, this.ExportCCDToDBMotionOperationCompleted, userState);
        }
        
        private void OnExportCCDToDBMotionOperationCompleted(object arg) {
            if ((this.ExportCCDToDBMotionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExportCCDToDBMotionCompleted(this, new ExportCCDToDBMotionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/IsUserLoggingEnabled", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsUserLoggingEnabled(UserLoggingEnabledRequest request) {
            object[] results = this.Invoke("IsUserLoggingEnabled", new object[] {
                        request});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsUserLoggingEnabledAsync(UserLoggingEnabledRequest request) {
            this.IsUserLoggingEnabledAsync(request, null);
        }
        
        /// <remarks/>
        public void IsUserLoggingEnabledAsync(UserLoggingEnabledRequest request, object userState) {
            if ((this.IsUserLoggingEnabledOperationCompleted == null)) {
                this.IsUserLoggingEnabledOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsUserLoggingEnabledOperationCompleted);
            }
            this.InvokeAsync("IsUserLoggingEnabled", new object[] {
                        request}, this.IsUserLoggingEnabledOperationCompleted, userState);
        }
        
        private void OnIsUserLoggingEnabledOperationCompleted(object arg) {
            if ((this.IsUserLoggingEnabledCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsUserLoggingEnabledCompleted(this, new IsUserLoggingEnabledCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/EnableLoggingForUser", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool EnableLoggingForUser(EnableLoggingForUserRequest request) {
            object[] results = this.Invoke("EnableLoggingForUser", new object[] {
                        request});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void EnableLoggingForUserAsync(EnableLoggingForUserRequest request) {
            this.EnableLoggingForUserAsync(request, null);
        }
        
        /// <remarks/>
        public void EnableLoggingForUserAsync(EnableLoggingForUserRequest request, object userState) {
            if ((this.EnableLoggingForUserOperationCompleted == null)) {
                this.EnableLoggingForUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnableLoggingForUserOperationCompleted);
            }
            this.InvokeAsync("EnableLoggingForUser", new object[] {
                        request}, this.EnableLoggingForUserOperationCompleted, userState);
        }
        
        private void OnEnableLoggingForUserOperationCompleted(object arg) {
            if ((this.EnableLoggingForUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnableLoggingForUserCompleted(this, new EnableLoggingForUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/DisableLoggingForUserByUserID", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DisableLoggingForUserByUserID(DisableLoggingForUserByUserIDRequest request) {
            object[] results = this.Invoke("DisableLoggingForUserByUserID", new object[] {
                        request});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DisableLoggingForUserByUserIDAsync(DisableLoggingForUserByUserIDRequest request) {
            this.DisableLoggingForUserByUserIDAsync(request, null);
        }
        
        /// <remarks/>
        public void DisableLoggingForUserByUserIDAsync(DisableLoggingForUserByUserIDRequest request, object userState) {
            if ((this.DisableLoggingForUserByUserIDOperationCompleted == null)) {
                this.DisableLoggingForUserByUserIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDisableLoggingForUserByUserIDOperationCompleted);
            }
            this.InvokeAsync("DisableLoggingForUserByUserID", new object[] {
                        request}, this.DisableLoggingForUserByUserIDOperationCompleted, userState);
        }
        
        private void OnDisableLoggingForUserByUserIDOperationCompleted(object arg) {
            if ((this.DisableLoggingForUserByUserIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DisableLoggingForUserByUserIDCompleted(this, new DisableLoggingForUserByUserIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/ToggleActiveStatus", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ToggleActiveStatus(ToggleActiveStatusRequest request) {
            this.Invoke("ToggleActiveStatus", new object[] {
                        request});
        }
        
        /// <remarks/>
        public void ToggleActiveStatusAsync(ToggleActiveStatusRequest request) {
            this.ToggleActiveStatusAsync(request, null);
        }
        
        /// <remarks/>
        public void ToggleActiveStatusAsync(ToggleActiveStatusRequest request, object userState) {
            if ((this.ToggleActiveStatusOperationCompleted == null)) {
                this.ToggleActiveStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnToggleActiveStatusOperationCompleted);
            }
            this.InvokeAsync("ToggleActiveStatus", new object[] {
                        request}, this.ToggleActiveStatusOperationCompleted, userState);
        }
        
        private void OnToggleActiveStatusOperationCompleted(object arg) {
            if ((this.ToggleActiveStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ToggleActiveStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetUsersBeingLogged", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetUsersBeingLoggedResult GetUsersBeingLogged() {
            object[] results = this.Invoke("GetUsersBeingLogged", new object[0]);
            return ((GetUsersBeingLoggedResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetUsersBeingLoggedAsync() {
            this.GetUsersBeingLoggedAsync(null);
        }
        
        /// <remarks/>
        public void GetUsersBeingLoggedAsync(object userState) {
            if ((this.GetUsersBeingLoggedOperationCompleted == null)) {
                this.GetUsersBeingLoggedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUsersBeingLoggedOperationCompleted);
            }
            this.InvokeAsync("GetUsersBeingLogged", new object[0], this.GetUsersBeingLoggedOperationCompleted, userState);
        }
        
        private void OnGetUsersBeingLoggedOperationCompleted(object arg) {
            if ((this.GetUsersBeingLoggedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUsersBeingLoggedCompleted(this, new GetUsersBeingLoggedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetMainAppLogRecords", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetMainAppLogRecordsResult GetMainAppLogRecords(GetMainAppLogRecordsRequest request) {
            object[] results = this.Invoke("GetMainAppLogRecords", new object[] {
                        request});
            return ((GetMainAppLogRecordsResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetMainAppLogRecordsAsync(GetMainAppLogRecordsRequest request) {
            this.GetMainAppLogRecordsAsync(request, null);
        }
        
        /// <remarks/>
        public void GetMainAppLogRecordsAsync(GetMainAppLogRecordsRequest request, object userState) {
            if ((this.GetMainAppLogRecordsOperationCompleted == null)) {
                this.GetMainAppLogRecordsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMainAppLogRecordsOperationCompleted);
            }
            this.InvokeAsync("GetMainAppLogRecords", new object[] {
                        request}, this.GetMainAppLogRecordsOperationCompleted, userState);
        }
        
        private void OnGetMainAppLogRecordsOperationCompleted(object arg) {
            if ((this.GetMainAppLogRecordsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMainAppLogRecordsCompleted(this, new GetMainAppLogRecordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/DeleteAllRecordsFromInstrumentationLog", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteAllRecordsFromInstrumentationLog() {
            object[] results = this.Invoke("DeleteAllRecordsFromInstrumentationLog", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAllRecordsFromInstrumentationLogAsync() {
            this.DeleteAllRecordsFromInstrumentationLogAsync(null);
        }
        
        /// <remarks/>
        public void DeleteAllRecordsFromInstrumentationLogAsync(object userState) {
            if ((this.DeleteAllRecordsFromInstrumentationLogOperationCompleted == null)) {
                this.DeleteAllRecordsFromInstrumentationLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAllRecordsFromInstrumentationLogOperationCompleted);
            }
            this.InvokeAsync("DeleteAllRecordsFromInstrumentationLog", new object[0], this.DeleteAllRecordsFromInstrumentationLogOperationCompleted, userState);
        }
        
        private void OnDeleteAllRecordsFromInstrumentationLogOperationCompleted(object arg) {
            if ((this.DeleteAllRecordsFromInstrumentationLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAllRecordsFromInstrumentationLogCompleted(this, new DeleteAllRecordsFromInstrumentationLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetInfoScriptsMessageList", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public InfoScriptsMessageListResponse GetInfoScriptsMessageList(ConnectionStringPointer dbID) {
            object[] results = this.Invoke("GetInfoScriptsMessageList", new object[] {
                        dbID});
            return ((InfoScriptsMessageListResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetInfoScriptsMessageListAsync(ConnectionStringPointer dbID) {
            this.GetInfoScriptsMessageListAsync(dbID, null);
        }
        
        /// <remarks/>
        public void GetInfoScriptsMessageListAsync(ConnectionStringPointer dbID, object userState) {
            if ((this.GetInfoScriptsMessageListOperationCompleted == null)) {
                this.GetInfoScriptsMessageListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInfoScriptsMessageListOperationCompleted);
            }
            this.InvokeAsync("GetInfoScriptsMessageList", new object[] {
                        dbID}, this.GetInfoScriptsMessageListOperationCompleted, userState);
        }
        
        private void OnGetInfoScriptsMessageListOperationCompleted(object arg) {
            if ((this.GetInfoScriptsMessageListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInfoScriptsMessageListCompleted(this, new GetInfoScriptsMessageListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetInfoScriptsMessage", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public InfoScriptsMessageResponse GetInfoScriptsMessage(int messageID, ConnectionStringPointer dbID) {
            object[] results = this.Invoke("GetInfoScriptsMessage", new object[] {
                        messageID,
                        dbID});
            return ((InfoScriptsMessageResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetInfoScriptsMessageAsync(int messageID, ConnectionStringPointer dbID) {
            this.GetInfoScriptsMessageAsync(messageID, dbID, null);
        }
        
        /// <remarks/>
        public void GetInfoScriptsMessageAsync(int messageID, ConnectionStringPointer dbID, object userState) {
            if ((this.GetInfoScriptsMessageOperationCompleted == null)) {
                this.GetInfoScriptsMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInfoScriptsMessageOperationCompleted);
            }
            this.InvokeAsync("GetInfoScriptsMessage", new object[] {
                        messageID,
                        dbID}, this.GetInfoScriptsMessageOperationCompleted, userState);
        }
        
        private void OnGetInfoScriptsMessageOperationCompleted(object arg) {
            if ((this.GetInfoScriptsMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInfoScriptsMessageCompleted(this, new GetInfoScriptsMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/AddInfoScriptsMessage", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddInfoScriptsMessage(InfoScriptsRequest request, ConnectionStringPointer dbID) {
            object[] results = this.Invoke("AddInfoScriptsMessage", new object[] {
                        request,
                        dbID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddInfoScriptsMessageAsync(InfoScriptsRequest request, ConnectionStringPointer dbID) {
            this.AddInfoScriptsMessageAsync(request, dbID, null);
        }
        
        /// <remarks/>
        public void AddInfoScriptsMessageAsync(InfoScriptsRequest request, ConnectionStringPointer dbID, object userState) {
            if ((this.AddInfoScriptsMessageOperationCompleted == null)) {
                this.AddInfoScriptsMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddInfoScriptsMessageOperationCompleted);
            }
            this.InvokeAsync("AddInfoScriptsMessage", new object[] {
                        request,
                        dbID}, this.AddInfoScriptsMessageOperationCompleted, userState);
        }
        
        private void OnAddInfoScriptsMessageOperationCompleted(object arg) {
            if ((this.AddInfoScriptsMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddInfoScriptsMessageCompleted(this, new AddInfoScriptsMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/UpdateInfoScriptsMessage", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateInfoScriptsMessage(InfoScriptsRequest request, ConnectionStringPointer dbID) {
            this.Invoke("UpdateInfoScriptsMessage", new object[] {
                        request,
                        dbID});
        }
        
        /// <remarks/>
        public void UpdateInfoScriptsMessageAsync(InfoScriptsRequest request, ConnectionStringPointer dbID) {
            this.UpdateInfoScriptsMessageAsync(request, dbID, null);
        }
        
        /// <remarks/>
        public void UpdateInfoScriptsMessageAsync(InfoScriptsRequest request, ConnectionStringPointer dbID, object userState) {
            if ((this.UpdateInfoScriptsMessageOperationCompleted == null)) {
                this.UpdateInfoScriptsMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateInfoScriptsMessageOperationCompleted);
            }
            this.InvokeAsync("UpdateInfoScriptsMessage", new object[] {
                        request,
                        dbID}, this.UpdateInfoScriptsMessageOperationCompleted, userState);
        }
        
        private void OnUpdateInfoScriptsMessageOperationCompleted(object arg) {
            if ((this.UpdateInfoScriptsMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateInfoScriptsMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/SaveEPAQuestionSetRequest", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SaveEPAQuestionSetRequest([System.Xml.Serialization.XmlElementAttribute("saveEPAQuestionSetRequest")] EPAMsgRequest saveEPAQuestionSetRequest1) {
            this.Invoke("SaveEPAQuestionSetRequest", new object[] {
                        saveEPAQuestionSetRequest1});
        }
        
        /// <remarks/>
        public void SaveEPAQuestionSetRequestAsync(EPAMsgRequest saveEPAQuestionSetRequest1) {
            this.SaveEPAQuestionSetRequestAsync(saveEPAQuestionSetRequest1, null);
        }
        
        /// <remarks/>
        public void SaveEPAQuestionSetRequestAsync(EPAMsgRequest saveEPAQuestionSetRequest1, object userState) {
            if ((this.SaveEPAQuestionSetRequestOperationCompleted == null)) {
                this.SaveEPAQuestionSetRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveEPAQuestionSetRequestOperationCompleted);
            }
            this.InvokeAsync("SaveEPAQuestionSetRequest", new object[] {
                        saveEPAQuestionSetRequest1}, this.SaveEPAQuestionSetRequestOperationCompleted, userState);
        }
        
        private void OnSaveEPAQuestionSetRequestOperationCompleted(object arg) {
            if ((this.SaveEPAQuestionSetRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveEPAQuestionSetRequestCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/SendPAInitiationRequest", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendPAInitiationRequest(EPAMsgRequest request) {
            this.Invoke("SendPAInitiationRequest", new object[] {
                        request});
        }
        
        /// <remarks/>
        public void SendPAInitiationRequestAsync(EPAMsgRequest request) {
            this.SendPAInitiationRequestAsync(request, null);
        }
        
        /// <remarks/>
        public void SendPAInitiationRequestAsync(EPAMsgRequest request, object userState) {
            if ((this.SendPAInitiationRequestOperationCompleted == null)) {
                this.SendPAInitiationRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendPAInitiationRequestOperationCompleted);
            }
            this.InvokeAsync("SendPAInitiationRequest", new object[] {
                        request}, this.SendPAInitiationRequestOperationCompleted, userState);
        }
        
        private void OnSendPAInitiationRequestOperationCompleted(object arg) {
            if ((this.SendPAInitiationRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendPAInitiationRequestCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/SendPARequest", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendPARequest(EPAMsgRequest request) {
            this.Invoke("SendPARequest", new object[] {
                        request});
        }
        
        /// <remarks/>
        public void SendPARequestAsync(EPAMsgRequest request) {
            this.SendPARequestAsync(request, null);
        }
        
        /// <remarks/>
        public void SendPARequestAsync(EPAMsgRequest request, object userState) {
            if ((this.SendPARequestOperationCompleted == null)) {
                this.SendPARequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendPARequestOperationCompleted);
            }
            this.InvokeAsync("SendPARequest", new object[] {
                        request}, this.SendPARequestOperationCompleted, userState);
        }
        
        private void OnSendPARequestOperationCompleted(object arg) {
            if ((this.SendPARequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendPARequestCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/SendToEPATaskList", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EPAServiceResponse SendToEPATaskList(EPATaskRequest sendToEPATskListRequest) {
            object[] results = this.Invoke("SendToEPATaskList", new object[] {
                        sendToEPATskListRequest});
            return ((EPAServiceResponse)(results[0]));
        }
        
        /// <remarks/>
        public void SendToEPATaskListAsync(EPATaskRequest sendToEPATskListRequest) {
            this.SendToEPATaskListAsync(sendToEPATskListRequest, null);
        }
        
        /// <remarks/>
        public void SendToEPATaskListAsync(EPATaskRequest sendToEPATskListRequest, object userState) {
            if ((this.SendToEPATaskListOperationCompleted == null)) {
                this.SendToEPATaskListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendToEPATaskListOperationCompleted);
            }
            this.InvokeAsync("SendToEPATaskList", new object[] {
                        sendToEPATskListRequest}, this.SendToEPATaskListOperationCompleted, userState);
        }
        
        private void OnSendToEPATaskListOperationCompleted(object arg) {
            if ((this.SendToEPATaskListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendToEPATaskListCompleted(this, new SendToEPATaskListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/InsertEPARequestsAdditionalInfo", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EPAServiceResponse InsertEPARequestsAdditionalInfo(EPARequestsAdditionalInfoRequest insertEPARequestsAdditionalInfoRequest) {
            object[] results = this.Invoke("InsertEPARequestsAdditionalInfo", new object[] {
                        insertEPARequestsAdditionalInfoRequest});
            return ((EPAServiceResponse)(results[0]));
        }
        
        /// <remarks/>
        public void InsertEPARequestsAdditionalInfoAsync(EPARequestsAdditionalInfoRequest insertEPARequestsAdditionalInfoRequest) {
            this.InsertEPARequestsAdditionalInfoAsync(insertEPARequestsAdditionalInfoRequest, null);
        }
        
        /// <remarks/>
        public void InsertEPARequestsAdditionalInfoAsync(EPARequestsAdditionalInfoRequest insertEPARequestsAdditionalInfoRequest, object userState) {
            if ((this.InsertEPARequestsAdditionalInfoOperationCompleted == null)) {
                this.InsertEPARequestsAdditionalInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertEPARequestsAdditionalInfoOperationCompleted);
            }
            this.InvokeAsync("InsertEPARequestsAdditionalInfo", new object[] {
                        insertEPARequestsAdditionalInfoRequest}, this.InsertEPARequestsAdditionalInfoOperationCompleted, userState);
        }
        
        private void OnInsertEPARequestsAdditionalInfoOperationCompleted(object arg) {
            if ((this.InsertEPARequestsAdditionalInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertEPARequestsAdditionalInfoCompleted(this, new InsertEPARequestsAdditionalInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/SendToEPARequest", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EPAServiceResponse SendToEPARequest([System.Xml.Serialization.XmlElementAttribute("sendToEPARequest")] EPARequest sendToEPARequest1) {
            object[] results = this.Invoke("SendToEPARequest", new object[] {
                        sendToEPARequest1});
            return ((EPAServiceResponse)(results[0]));
        }
        
        /// <remarks/>
        public void SendToEPARequestAsync(EPARequest sendToEPARequest1) {
            this.SendToEPARequestAsync(sendToEPARequest1, null);
        }
        
        /// <remarks/>
        public void SendToEPARequestAsync(EPARequest sendToEPARequest1, object userState) {
            if ((this.SendToEPARequestOperationCompleted == null)) {
                this.SendToEPARequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendToEPARequestOperationCompleted);
            }
            this.InvokeAsync("SendToEPARequest", new object[] {
                        sendToEPARequest1}, this.SendToEPARequestOperationCompleted, userState);
        }
        
        private void OnSendToEPARequestOperationCompleted(object arg) {
            if ((this.SendToEPARequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendToEPARequestCompleted(this, new SendToEPARequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/UpdateEPATaskStatus", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateEPATaskStatus(EPATaskRequest updateEPATaskStatusRequest) {
            this.Invoke("UpdateEPATaskStatus", new object[] {
                        updateEPATaskStatusRequest});
        }
        
        /// <remarks/>
        public void UpdateEPATaskStatusAsync(EPATaskRequest updateEPATaskStatusRequest) {
            this.UpdateEPATaskStatusAsync(updateEPATaskStatusRequest, null);
        }
        
        /// <remarks/>
        public void UpdateEPATaskStatusAsync(EPATaskRequest updateEPATaskStatusRequest, object userState) {
            if ((this.UpdateEPATaskStatusOperationCompleted == null)) {
                this.UpdateEPATaskStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateEPATaskStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateEPATaskStatus", new object[] {
                        updateEPATaskStatusRequest}, this.UpdateEPATaskStatusOperationCompleted, userState);
        }
        
        private void OnUpdateEPATaskStatusOperationCompleted(object arg) {
            if ((this.UpdateEPATaskStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateEPATaskStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/SendePACancelRequest", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendePACancelRequest(EPAMsgRequest ePACancelRequest) {
            this.Invoke("SendePACancelRequest", new object[] {
                        ePACancelRequest});
        }
        
        /// <remarks/>
        public void SendePACancelRequestAsync(EPAMsgRequest ePACancelRequest) {
            this.SendePACancelRequestAsync(ePACancelRequest, null);
        }
        
        /// <remarks/>
        public void SendePACancelRequestAsync(EPAMsgRequest ePACancelRequest, object userState) {
            if ((this.SendePACancelRequestOperationCompleted == null)) {
                this.SendePACancelRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendePACancelRequestOperationCompleted);
            }
            this.InvokeAsync("SendePACancelRequest", new object[] {
                        ePACancelRequest}, this.SendePACancelRequestOperationCompleted, userState);
        }
        
        private void OnSendePACancelRequestOperationCompleted(object arg) {
            if ((this.SendePACancelRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendePACancelRequestCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/SaveePAUserPrefernece", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SaveePAUserPrefernece(string userID, int category, string preferenceName, string preferenceValue, ConnectionStringPointer dbID) {
            this.Invoke("SaveePAUserPrefernece", new object[] {
                        userID,
                        category,
                        preferenceName,
                        preferenceValue,
                        dbID});
        }
        
        /// <remarks/>
        public void SaveePAUserPreferneceAsync(string userID, int category, string preferenceName, string preferenceValue, ConnectionStringPointer dbID) {
            this.SaveePAUserPreferneceAsync(userID, category, preferenceName, preferenceValue, dbID, null);
        }
        
        /// <remarks/>
        public void SaveePAUserPreferneceAsync(string userID, int category, string preferenceName, string preferenceValue, ConnectionStringPointer dbID, object userState) {
            if ((this.SaveePAUserPreferneceOperationCompleted == null)) {
                this.SaveePAUserPreferneceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveePAUserPreferneceOperationCompleted);
            }
            this.InvokeAsync("SaveePAUserPrefernece", new object[] {
                        userID,
                        category,
                        preferenceName,
                        preferenceValue,
                        dbID}, this.SaveePAUserPreferneceOperationCompleted, userState);
        }
        
        private void OnSaveePAUserPreferneceOperationCompleted(object arg) {
            if ((this.SaveePAUserPreferneceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveePAUserPreferneceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetAllBackdoorSites", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetBackdoorSitesResponse GetAllBackdoorSites(string licenseID, string userID) {
            object[] results = this.Invoke("GetAllBackdoorSites", new object[] {
                        licenseID,
                        userID});
            return ((GetBackdoorSitesResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllBackdoorSitesAsync(string licenseID, string userID) {
            this.GetAllBackdoorSitesAsync(licenseID, userID, null);
        }
        
        /// <remarks/>
        public void GetAllBackdoorSitesAsync(string licenseID, string userID, object userState) {
            if ((this.GetAllBackdoorSitesOperationCompleted == null)) {
                this.GetAllBackdoorSitesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllBackdoorSitesOperationCompleted);
            }
            this.InvokeAsync("GetAllBackdoorSites", new object[] {
                        licenseID,
                        userID}, this.GetAllBackdoorSitesOperationCompleted, userState);
        }
        
        private void OnGetAllBackdoorSitesOperationCompleted(object arg) {
            if ((this.GetAllBackdoorSitesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllBackdoorSitesCompleted(this, new GetAllBackdoorSitesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/CreateBackdoorUserAuditLogEntry", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateBackdoorUserAuditLogEntry(CreateBackdoorUserAuditLogEntryRequest createBackdoorUserAuditLogEntryRequest) {
            this.Invoke("CreateBackdoorUserAuditLogEntry", new object[] {
                        createBackdoorUserAuditLogEntryRequest});
        }
        
        /// <remarks/>
        public void CreateBackdoorUserAuditLogEntryAsync(CreateBackdoorUserAuditLogEntryRequest createBackdoorUserAuditLogEntryRequest) {
            this.CreateBackdoorUserAuditLogEntryAsync(createBackdoorUserAuditLogEntryRequest, null);
        }
        
        /// <remarks/>
        public void CreateBackdoorUserAuditLogEntryAsync(CreateBackdoorUserAuditLogEntryRequest createBackdoorUserAuditLogEntryRequest, object userState) {
            if ((this.CreateBackdoorUserAuditLogEntryOperationCompleted == null)) {
                this.CreateBackdoorUserAuditLogEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateBackdoorUserAuditLogEntryOperationCompleted);
            }
            this.InvokeAsync("CreateBackdoorUserAuditLogEntry", new object[] {
                        createBackdoorUserAuditLogEntryRequest}, this.CreateBackdoorUserAuditLogEntryOperationCompleted, userState);
        }
        
        private void OnCreateBackdoorUserAuditLogEntryOperationCompleted(object arg) {
            if ((this.CreateBackdoorUserAuditLogEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateBackdoorUserAuditLogEntryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetPatientRxHubMatch", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Patient GetPatientRxHubMatch(string licenseID, string chartID, string lastName, string firstName, string dob, string zip, string gender, ConnectionStringPointer dbID) {
            object[] results = this.Invoke("GetPatientRxHubMatch", new object[] {
                        licenseID,
                        chartID,
                        lastName,
                        firstName,
                        dob,
                        zip,
                        gender,
                        dbID});
            return ((Patient)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientRxHubMatchAsync(string licenseID, string chartID, string lastName, string firstName, string dob, string zip, string gender, ConnectionStringPointer dbID) {
            this.GetPatientRxHubMatchAsync(licenseID, chartID, lastName, firstName, dob, zip, gender, dbID, null);
        }
        
        /// <remarks/>
        public void GetPatientRxHubMatchAsync(string licenseID, string chartID, string lastName, string firstName, string dob, string zip, string gender, ConnectionStringPointer dbID, object userState) {
            if ((this.GetPatientRxHubMatchOperationCompleted == null)) {
                this.GetPatientRxHubMatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientRxHubMatchOperationCompleted);
            }
            this.InvokeAsync("GetPatientRxHubMatch", new object[] {
                        licenseID,
                        chartID,
                        lastName,
                        firstName,
                        dob,
                        zip,
                        gender,
                        dbID}, this.GetPatientRxHubMatchOperationCompleted, userState);
        }
        
        private void OnGetPatientRxHubMatchOperationCompleted(object arg) {
            if ((this.GetPatientRxHubMatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientRxHubMatchCompleted(this, new GetPatientRxHubMatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetFullAppversion", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFullAppversion(ApplicationVersionRequest applicationVersionRequest) {
            object[] results = this.Invoke("GetFullAppversion", new object[] {
                        applicationVersionRequest});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFullAppversionAsync(ApplicationVersionRequest applicationVersionRequest) {
            this.GetFullAppversionAsync(applicationVersionRequest, null);
        }
        
        /// <remarks/>
        public void GetFullAppversionAsync(ApplicationVersionRequest applicationVersionRequest, object userState) {
            if ((this.GetFullAppversionOperationCompleted == null)) {
                this.GetFullAppversionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFullAppversionOperationCompleted);
            }
            this.InvokeAsync("GetFullAppversion", new object[] {
                        applicationVersionRequest}, this.GetFullAppversionOperationCompleted, userState);
        }
        
        private void OnGetFullAppversionOperationCompleted(object arg) {
            if ((this.GetFullAppversionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFullAppversionCompleted(this, new GetFullAppversionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetApplicationShieldStatus", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ApplicationResponse GetApplicationShieldStatus(ApplicationRequest applicationVersionRequest) {
            object[] results = this.Invoke("GetApplicationShieldStatus", new object[] {
                        applicationVersionRequest});
            return ((ApplicationResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetApplicationShieldStatusAsync(ApplicationRequest applicationVersionRequest) {
            this.GetApplicationShieldStatusAsync(applicationVersionRequest, null);
        }
        
        /// <remarks/>
        public void GetApplicationShieldStatusAsync(ApplicationRequest applicationVersionRequest, object userState) {
            if ((this.GetApplicationShieldStatusOperationCompleted == null)) {
                this.GetApplicationShieldStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetApplicationShieldStatusOperationCompleted);
            }
            this.InvokeAsync("GetApplicationShieldStatus", new object[] {
                        applicationVersionRequest}, this.GetApplicationShieldStatusOperationCompleted, userState);
        }
        
        private void OnGetApplicationShieldStatusOperationCompleted(object arg) {
            if ((this.GetApplicationShieldStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetApplicationShieldStatusCompleted(this, new GetApplicationShieldStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetLicenseShieldStatus", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetLicenseShieldStatusResponse GetLicenseShieldStatus(GetLicenseShieldStatusRequest getLicenseShieldStatusRequest) {
            object[] results = this.Invoke("GetLicenseShieldStatus", new object[] {
                        getLicenseShieldStatusRequest});
            return ((GetLicenseShieldStatusResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetLicenseShieldStatusAsync(GetLicenseShieldStatusRequest getLicenseShieldStatusRequest) {
            this.GetLicenseShieldStatusAsync(getLicenseShieldStatusRequest, null);
        }
        
        /// <remarks/>
        public void GetLicenseShieldStatusAsync(GetLicenseShieldStatusRequest getLicenseShieldStatusRequest, object userState) {
            if ((this.GetLicenseShieldStatusOperationCompleted == null)) {
                this.GetLicenseShieldStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLicenseShieldStatusOperationCompleted);
            }
            this.InvokeAsync("GetLicenseShieldStatus", new object[] {
                        getLicenseShieldStatusRequest}, this.GetLicenseShieldStatusOperationCompleted, userState);
        }
        
        private void OnGetLicenseShieldStatusOperationCompleted(object arg) {
            if ((this.GetLicenseShieldStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLicenseShieldStatusCompleted(this, new GetLicenseShieldStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/CacheReset", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CacheReset(CacheResetRequest cacheResetReq) {
            this.Invoke("CacheReset", new object[] {
                        cacheResetReq});
        }
        
        /// <remarks/>
        public void CacheResetAsync(CacheResetRequest cacheResetReq) {
            this.CacheResetAsync(cacheResetReq, null);
        }
        
        /// <remarks/>
        public void CacheResetAsync(CacheResetRequest cacheResetReq, object userState) {
            if ((this.CacheResetOperationCompleted == null)) {
                this.CacheResetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCacheResetOperationCompleted);
            }
            this.InvokeAsync("CacheReset", new object[] {
                        cacheResetReq}, this.CacheResetOperationCompleted, userState);
        }
        
        private void OnCacheResetOperationCompleted(object arg) {
            if ((this.CacheResetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CacheResetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetEligAndMedHxStatus", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetEligAndMedHxStatusResponse GetEligAndMedHxStatus(GetEligAndMedHxStatusRequest getEligAndMedHxStatusRequest) {
            object[] results = this.Invoke("GetEligAndMedHxStatus", new object[] {
                        getEligAndMedHxStatusRequest});
            return ((GetEligAndMedHxStatusResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetEligAndMedHxStatusAsync(GetEligAndMedHxStatusRequest getEligAndMedHxStatusRequest) {
            this.GetEligAndMedHxStatusAsync(getEligAndMedHxStatusRequest, null);
        }
        
        /// <remarks/>
        public void GetEligAndMedHxStatusAsync(GetEligAndMedHxStatusRequest getEligAndMedHxStatusRequest, object userState) {
            if ((this.GetEligAndMedHxStatusOperationCompleted == null)) {
                this.GetEligAndMedHxStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEligAndMedHxStatusOperationCompleted);
            }
            this.InvokeAsync("GetEligAndMedHxStatus", new object[] {
                        getEligAndMedHxStatusRequest}, this.GetEligAndMedHxStatusOperationCompleted, userState);
        }
        
        private void OnGetEligAndMedHxStatusOperationCompleted(object arg) {
            if ((this.GetEligAndMedHxStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEligAndMedHxStatusCompleted(this, new GetEligAndMedHxStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/AuditLogPatientInsert", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AuditLogPatientInsert(AuditPatientInsertRequest req) {
            this.Invoke("AuditLogPatientInsert", new object[] {
                        req});
        }
        
        /// <remarks/>
        public void AuditLogPatientInsertAsync(AuditPatientInsertRequest req) {
            this.AuditLogPatientInsertAsync(req, null);
        }
        
        /// <remarks/>
        public void AuditLogPatientInsertAsync(AuditPatientInsertRequest req, object userState) {
            if ((this.AuditLogPatientInsertOperationCompleted == null)) {
                this.AuditLogPatientInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuditLogPatientInsertOperationCompleted);
            }
            this.InvokeAsync("AuditLogPatientInsert", new object[] {
                        req}, this.AuditLogPatientInsertOperationCompleted, userState);
        }
        
        private void OnAuditLogPatientInsertOperationCompleted(object arg) {
            if ((this.AuditLogPatientInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuditLogPatientInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/AuditLogPatientRxInsert", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AuditLogPatientRxResponse AuditLogPatientRxInsert(AuditPatientRxInsertRequest req) {
            object[] results = this.Invoke("AuditLogPatientRxInsert", new object[] {
                        req});
            return ((AuditLogPatientRxResponse)(results[0]));
        }
        
        /// <remarks/>
        public void AuditLogPatientRxInsertAsync(AuditPatientRxInsertRequest req) {
            this.AuditLogPatientRxInsertAsync(req, null);
        }
        
        /// <remarks/>
        public void AuditLogPatientRxInsertAsync(AuditPatientRxInsertRequest req, object userState) {
            if ((this.AuditLogPatientRxInsertOperationCompleted == null)) {
                this.AuditLogPatientRxInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuditLogPatientRxInsertOperationCompleted);
            }
            this.InvokeAsync("AuditLogPatientRxInsert", new object[] {
                        req}, this.AuditLogPatientRxInsertOperationCompleted, userState);
        }
        
        private void OnAuditLogPatientRxInsertOperationCompleted(object arg) {
            if ((this.AuditLogPatientRxInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuditLogPatientRxInsertCompleted(this, new AuditLogPatientRxInsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/AuditLogPatientRxCSInsert", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AuditLogPatientRxCSResponse AuditLogPatientRxCSInsert(AuditPatientRxCSInsertRequest req) {
            object[] results = this.Invoke("AuditLogPatientRxCSInsert", new object[] {
                        req});
            return ((AuditLogPatientRxCSResponse)(results[0]));
        }
        
        /// <remarks/>
        public void AuditLogPatientRxCSInsertAsync(AuditPatientRxCSInsertRequest req) {
            this.AuditLogPatientRxCSInsertAsync(req, null);
        }
        
        /// <remarks/>
        public void AuditLogPatientRxCSInsertAsync(AuditPatientRxCSInsertRequest req, object userState) {
            if ((this.AuditLogPatientRxCSInsertOperationCompleted == null)) {
                this.AuditLogPatientRxCSInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuditLogPatientRxCSInsertOperationCompleted);
            }
            this.InvokeAsync("AuditLogPatientRxCSInsert", new object[] {
                        req}, this.AuditLogPatientRxCSInsertOperationCompleted, userState);
        }
        
        private void OnAuditLogPatientRxCSInsertOperationCompleted(object arg) {
            if ((this.AuditLogPatientRxCSInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuditLogPatientRxCSInsertCompleted(this, new AuditLogPatientRxCSInsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/AuditLogUserInsert", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AuditLogUserInsert(AuditUserInsertRequest req) {
            this.Invoke("AuditLogUserInsert", new object[] {
                        req});
        }
        
        /// <remarks/>
        public void AuditLogUserInsertAsync(AuditUserInsertRequest req) {
            this.AuditLogUserInsertAsync(req, null);
        }
        
        /// <remarks/>
        public void AuditLogUserInsertAsync(AuditUserInsertRequest req, object userState) {
            if ((this.AuditLogUserInsertOperationCompleted == null)) {
                this.AuditLogUserInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuditLogUserInsertOperationCompleted);
            }
            this.InvokeAsync("AuditLogUserInsert", new object[] {
                        req}, this.AuditLogUserInsertOperationCompleted, userState);
        }
        
        private void OnAuditLogUserInsertOperationCompleted(object arg) {
            if ((this.AuditLogUserInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuditLogUserInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/AuditLogLicenseInsert", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AuditLogLicenseInsert(AuditLicenseInsertRequest req) {
            this.Invoke("AuditLogLicenseInsert", new object[] {
                        req});
        }
        
        /// <remarks/>
        public void AuditLogLicenseInsertAsync(AuditLicenseInsertRequest req) {
            this.AuditLogLicenseInsertAsync(req, null);
        }
        
        /// <remarks/>
        public void AuditLogLicenseInsertAsync(AuditLicenseInsertRequest req, object userState) {
            if ((this.AuditLogLicenseInsertOperationCompleted == null)) {
                this.AuditLogLicenseInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuditLogLicenseInsertOperationCompleted);
            }
            this.InvokeAsync("AuditLogLicenseInsert", new object[] {
                        req}, this.AuditLogLicenseInsertOperationCompleted, userState);
        }
        
        private void OnAuditLogLicenseInsertOperationCompleted(object arg) {
            if ((this.AuditLogLicenseInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuditLogLicenseInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetUsers", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetUsersResponse GetUsers(GetUsersRequest getUsersRequest) {
            object[] results = this.Invoke("GetUsers", new object[] {
                        getUsersRequest});
            return ((GetUsersResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetUsersAsync(GetUsersRequest getUsersRequest) {
            this.GetUsersAsync(getUsersRequest, null);
        }
        
        /// <remarks/>
        public void GetUsersAsync(GetUsersRequest getUsersRequest, object userState) {
            if ((this.GetUsersOperationCompleted == null)) {
                this.GetUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUsersOperationCompleted);
            }
            this.InvokeAsync("GetUsers", new object[] {
                        getUsersRequest}, this.GetUsersOperationCompleted, userState);
        }
        
        private void OnGetUsersOperationCompleted(object arg) {
            if ((this.GetUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUsersCompleted(this, new GetUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/SearchShieldUsers", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetUsersResponse SearchShieldUsers(SearchShieldUsersRequest getUsersRequest) {
            object[] results = this.Invoke("SearchShieldUsers", new object[] {
                        getUsersRequest});
            return ((GetUsersResponse)(results[0]));
        }
        
        /// <remarks/>
        public void SearchShieldUsersAsync(SearchShieldUsersRequest getUsersRequest) {
            this.SearchShieldUsersAsync(getUsersRequest, null);
        }
        
        /// <remarks/>
        public void SearchShieldUsersAsync(SearchShieldUsersRequest getUsersRequest, object userState) {
            if ((this.SearchShieldUsersOperationCompleted == null)) {
                this.SearchShieldUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchShieldUsersOperationCompleted);
            }
            this.InvokeAsync("SearchShieldUsers", new object[] {
                        getUsersRequest}, this.SearchShieldUsersOperationCompleted, userState);
        }
        
        private void OnSearchShieldUsersOperationCompleted(object arg) {
            if ((this.SearchShieldUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchShieldUsersCompleted(this, new SearchShieldUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetUsersFromePrescribe", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetUsersFromePrescribeResponse GetUsersFromePrescribe(GetUsersFromePrescribeRequest getUsersFromePrescribeRequest) {
            object[] results = this.Invoke("GetUsersFromePrescribe", new object[] {
                        getUsersFromePrescribeRequest});
            return ((GetUsersFromePrescribeResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetUsersFromePrescribeAsync(GetUsersFromePrescribeRequest getUsersFromePrescribeRequest) {
            this.GetUsersFromePrescribeAsync(getUsersFromePrescribeRequest, null);
        }
        
        /// <remarks/>
        public void GetUsersFromePrescribeAsync(GetUsersFromePrescribeRequest getUsersFromePrescribeRequest, object userState) {
            if ((this.GetUsersFromePrescribeOperationCompleted == null)) {
                this.GetUsersFromePrescribeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUsersFromePrescribeOperationCompleted);
            }
            this.InvokeAsync("GetUsersFromePrescribe", new object[] {
                        getUsersFromePrescribeRequest}, this.GetUsersFromePrescribeOperationCompleted, userState);
        }
        
        private void OnGetUsersFromePrescribeOperationCompleted(object arg) {
            if ((this.GetUsersFromePrescribeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUsersFromePrescribeCompleted(this, new GetUsersFromePrescribeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetShieldInternalAppID", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetShieldInternalAppID(ApplicationEnum appEnum) {
            object[] results = this.Invoke("GetShieldInternalAppID", new object[] {
                        appEnum});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetShieldInternalAppIDAsync(ApplicationEnum appEnum) {
            this.GetShieldInternalAppIDAsync(appEnum, null);
        }
        
        /// <remarks/>
        public void GetShieldInternalAppIDAsync(ApplicationEnum appEnum, object userState) {
            if ((this.GetShieldInternalAppIDOperationCompleted == null)) {
                this.GetShieldInternalAppIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetShieldInternalAppIDOperationCompleted);
            }
            this.InvokeAsync("GetShieldInternalAppID", new object[] {
                        appEnum}, this.GetShieldInternalAppIDOperationCompleted, userState);
        }
        
        private void OnGetShieldInternalAppIDOperationCompleted(object arg) {
            if ((this.GetShieldInternalAppIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetShieldInternalAppIDCompleted(this, new GetShieldInternalAppIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetShieldInternalEnvironmentID", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetShieldInternalEnvironmentID(GetShieldInternalEnvironmentIDRequest getShieldInternalEnvironmentIDRequest) {
            object[] results = this.Invoke("GetShieldInternalEnvironmentID", new object[] {
                        getShieldInternalEnvironmentIDRequest});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetShieldInternalEnvironmentIDAsync(GetShieldInternalEnvironmentIDRequest getShieldInternalEnvironmentIDRequest) {
            this.GetShieldInternalEnvironmentIDAsync(getShieldInternalEnvironmentIDRequest, null);
        }
        
        /// <remarks/>
        public void GetShieldInternalEnvironmentIDAsync(GetShieldInternalEnvironmentIDRequest getShieldInternalEnvironmentIDRequest, object userState) {
            if ((this.GetShieldInternalEnvironmentIDOperationCompleted == null)) {
                this.GetShieldInternalEnvironmentIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetShieldInternalEnvironmentIDOperationCompleted);
            }
            this.InvokeAsync("GetShieldInternalEnvironmentID", new object[] {
                        getShieldInternalEnvironmentIDRequest}, this.GetShieldInternalEnvironmentIDOperationCompleted, userState);
        }
        
        private void OnGetShieldInternalEnvironmentIDOperationCompleted(object arg) {
            if ((this.GetShieldInternalEnvironmentIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetShieldInternalEnvironmentIDCompleted(this, new GetShieldInternalEnvironmentIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetShieldInternalTenantID", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetShieldInternalTenantID(GetShieldInternalTenantIDRequest getShieldInternalTenantIDRequest) {
            object[] results = this.Invoke("GetShieldInternalTenantID", new object[] {
                        getShieldInternalTenantIDRequest});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetShieldInternalTenantIDAsync(GetShieldInternalTenantIDRequest getShieldInternalTenantIDRequest) {
            this.GetShieldInternalTenantIDAsync(getShieldInternalTenantIDRequest, null);
        }
        
        /// <remarks/>
        public void GetShieldInternalTenantIDAsync(GetShieldInternalTenantIDRequest getShieldInternalTenantIDRequest, object userState) {
            if ((this.GetShieldInternalTenantIDOperationCompleted == null)) {
                this.GetShieldInternalTenantIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetShieldInternalTenantIDOperationCompleted);
            }
            this.InvokeAsync("GetShieldInternalTenantID", new object[] {
                        getShieldInternalTenantIDRequest}, this.GetShieldInternalTenantIDOperationCompleted, userState);
        }
        
        private void OnGetShieldInternalTenantIDOperationCompleted(object arg) {
            if ((this.GetShieldInternalTenantIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetShieldInternalTenantIDCompleted(this, new GetShieldInternalTenantIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetShieldInternalAppInstanceID", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetShieldInternalAppInstanceID(GetShieldInternalAppInstanceIDRequest getShieldInternalAppInstanceIDRequest) {
            object[] results = this.Invoke("GetShieldInternalAppInstanceID", new object[] {
                        getShieldInternalAppInstanceIDRequest});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetShieldInternalAppInstanceIDAsync(GetShieldInternalAppInstanceIDRequest getShieldInternalAppInstanceIDRequest) {
            this.GetShieldInternalAppInstanceIDAsync(getShieldInternalAppInstanceIDRequest, null);
        }
        
        /// <remarks/>
        public void GetShieldInternalAppInstanceIDAsync(GetShieldInternalAppInstanceIDRequest getShieldInternalAppInstanceIDRequest, object userState) {
            if ((this.GetShieldInternalAppInstanceIDOperationCompleted == null)) {
                this.GetShieldInternalAppInstanceIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetShieldInternalAppInstanceIDOperationCompleted);
            }
            this.InvokeAsync("GetShieldInternalAppInstanceID", new object[] {
                        getShieldInternalAppInstanceIDRequest}, this.GetShieldInternalAppInstanceIDOperationCompleted, userState);
        }
        
        private void OnGetShieldInternalAppInstanceIDOperationCompleted(object arg) {
            if ((this.GetShieldInternalAppInstanceIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetShieldInternalAppInstanceIDCompleted(this, new GetShieldInternalAppInstanceIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetShieldExternalAppInstanceID", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetShieldExternalAppInstanceID(GetShieldExternalAppInstanceIDRequest getShieldExternalAppInstanceIDRequest) {
            object[] results = this.Invoke("GetShieldExternalAppInstanceID", new object[] {
                        getShieldExternalAppInstanceIDRequest});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetShieldExternalAppInstanceIDAsync(GetShieldExternalAppInstanceIDRequest getShieldExternalAppInstanceIDRequest) {
            this.GetShieldExternalAppInstanceIDAsync(getShieldExternalAppInstanceIDRequest, null);
        }
        
        /// <remarks/>
        public void GetShieldExternalAppInstanceIDAsync(GetShieldExternalAppInstanceIDRequest getShieldExternalAppInstanceIDRequest, object userState) {
            if ((this.GetShieldExternalAppInstanceIDOperationCompleted == null)) {
                this.GetShieldExternalAppInstanceIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetShieldExternalAppInstanceIDOperationCompleted);
            }
            this.InvokeAsync("GetShieldExternalAppInstanceID", new object[] {
                        getShieldExternalAppInstanceIDRequest}, this.GetShieldExternalAppInstanceIDOperationCompleted, userState);
        }
        
        private void OnGetShieldExternalAppInstanceIDOperationCompleted(object arg) {
            if ((this.GetShieldExternalAppInstanceIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetShieldExternalAppInstanceIDCompleted(this, new GetShieldExternalAppInstanceIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetRolesForApplication", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Role[] GetRolesForApplication(int shieldInternalAppID) {
            object[] results = this.Invoke("GetRolesForApplication", new object[] {
                        shieldInternalAppID});
            return ((Role[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRolesForApplicationAsync(int shieldInternalAppID) {
            this.GetRolesForApplicationAsync(shieldInternalAppID, null);
        }
        
        /// <remarks/>
        public void GetRolesForApplicationAsync(int shieldInternalAppID, object userState) {
            if ((this.GetRolesForApplicationOperationCompleted == null)) {
                this.GetRolesForApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRolesForApplicationOperationCompleted);
            }
            this.InvokeAsync("GetRolesForApplication", new object[] {
                        shieldInternalAppID}, this.GetRolesForApplicationOperationCompleted, userState);
        }
        
        private void OnGetRolesForApplicationOperationCompleted(object arg) {
            if ((this.GetRolesForApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRolesForApplicationCompleted(this, new GetRolesForApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetShieldUser", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetShieldUserResponse GetShieldUser(GetShieldUserRequest getShieldUserRequest) {
            object[] results = this.Invoke("GetShieldUser", new object[] {
                        getShieldUserRequest});
            return ((GetShieldUserResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetShieldUserAsync(GetShieldUserRequest getShieldUserRequest) {
            this.GetShieldUserAsync(getShieldUserRequest, null);
        }
        
        /// <remarks/>
        public void GetShieldUserAsync(GetShieldUserRequest getShieldUserRequest, object userState) {
            if ((this.GetShieldUserOperationCompleted == null)) {
                this.GetShieldUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetShieldUserOperationCompleted);
            }
            this.InvokeAsync("GetShieldUser", new object[] {
                        getShieldUserRequest}, this.GetShieldUserOperationCompleted, userState);
        }
        
        private void OnGetShieldUserOperationCompleted(object arg) {
            if ((this.GetShieldUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetShieldUserCompleted(this, new GetShieldUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/AuthenticateAndAuthorizeUser", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AuthenticateAndAuthorizeUserResponse AuthenticateAndAuthorizeUser(AuthenticateAndAuthorizeUserRequest authenticateAndAuthorizeUserRequest) {
            object[] results = this.Invoke("AuthenticateAndAuthorizeUser", new object[] {
                        authenticateAndAuthorizeUserRequest});
            return ((AuthenticateAndAuthorizeUserResponse)(results[0]));
        }
        
        /// <remarks/>
        public void AuthenticateAndAuthorizeUserAsync(AuthenticateAndAuthorizeUserRequest authenticateAndAuthorizeUserRequest) {
            this.AuthenticateAndAuthorizeUserAsync(authenticateAndAuthorizeUserRequest, null);
        }
        
        /// <remarks/>
        public void AuthenticateAndAuthorizeUserAsync(AuthenticateAndAuthorizeUserRequest authenticateAndAuthorizeUserRequest, object userState) {
            if ((this.AuthenticateAndAuthorizeUserOperationCompleted == null)) {
                this.AuthenticateAndAuthorizeUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthenticateAndAuthorizeUserOperationCompleted);
            }
            this.InvokeAsync("AuthenticateAndAuthorizeUser", new object[] {
                        authenticateAndAuthorizeUserRequest}, this.AuthenticateAndAuthorizeUserOperationCompleted, userState);
        }
        
        private void OnAuthenticateAndAuthorizeUserOperationCompleted(object arg) {
            if ((this.AuthenticateAndAuthorizeUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthenticateAndAuthorizeUserCompleted(this, new AuthenticateAndAuthorizeUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/AuthorizeUser", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AuthenticateAndAuthorizeUserResponse AuthorizeUser(AuthenticateAndAuthorizeUserRequest authenticateAndAuthorizeUserRequest) {
            object[] results = this.Invoke("AuthorizeUser", new object[] {
                        authenticateAndAuthorizeUserRequest});
            return ((AuthenticateAndAuthorizeUserResponse)(results[0]));
        }
        
        /// <remarks/>
        public void AuthorizeUserAsync(AuthenticateAndAuthorizeUserRequest authenticateAndAuthorizeUserRequest) {
            this.AuthorizeUserAsync(authenticateAndAuthorizeUserRequest, null);
        }
        
        /// <remarks/>
        public void AuthorizeUserAsync(AuthenticateAndAuthorizeUserRequest authenticateAndAuthorizeUserRequest, object userState) {
            if ((this.AuthorizeUserOperationCompleted == null)) {
                this.AuthorizeUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthorizeUserOperationCompleted);
            }
            this.InvokeAsync("AuthorizeUser", new object[] {
                        authenticateAndAuthorizeUserRequest}, this.AuthorizeUserOperationCompleted, userState);
        }
        
        private void OnAuthorizeUserOperationCompleted(object arg) {
            if ((this.AuthorizeUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthorizeUserCompleted(this, new AuthorizeUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/AuthenticateSsoUser", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AuthenticateSsoResponse AuthenticateSsoUser(AuthenticateSsoRequest ssoRequest) {
            object[] results = this.Invoke("AuthenticateSsoUser", new object[] {
                        ssoRequest});
            return ((AuthenticateSsoResponse)(results[0]));
        }
        
        /// <remarks/>
        public void AuthenticateSsoUserAsync(AuthenticateSsoRequest ssoRequest) {
            this.AuthenticateSsoUserAsync(ssoRequest, null);
        }
        
        /// <remarks/>
        public void AuthenticateSsoUserAsync(AuthenticateSsoRequest ssoRequest, object userState) {
            if ((this.AuthenticateSsoUserOperationCompleted == null)) {
                this.AuthenticateSsoUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthenticateSsoUserOperationCompleted);
            }
            this.InvokeAsync("AuthenticateSsoUser", new object[] {
                        ssoRequest}, this.AuthenticateSsoUserOperationCompleted, userState);
        }
        
        private void OnAuthenticateSsoUserOperationCompleted(object arg) {
            if ((this.AuthenticateSsoUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthenticateSsoUserCompleted(this, new AuthenticateSsoUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/RefreshSamlToken", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RefreshSamlTokenResponse RefreshSamlToken(RefreshSamlTokenRequest refreshSamlTokenRequest) {
            object[] results = this.Invoke("RefreshSamlToken", new object[] {
                        refreshSamlTokenRequest});
            return ((RefreshSamlTokenResponse)(results[0]));
        }
        
        /// <remarks/>
        public void RefreshSamlTokenAsync(RefreshSamlTokenRequest refreshSamlTokenRequest) {
            this.RefreshSamlTokenAsync(refreshSamlTokenRequest, null);
        }
        
        /// <remarks/>
        public void RefreshSamlTokenAsync(RefreshSamlTokenRequest refreshSamlTokenRequest, object userState) {
            if ((this.RefreshSamlTokenOperationCompleted == null)) {
                this.RefreshSamlTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRefreshSamlTokenOperationCompleted);
            }
            this.InvokeAsync("RefreshSamlToken", new object[] {
                        refreshSamlTokenRequest}, this.RefreshSamlTokenOperationCompleted, userState);
        }
        
        private void OnRefreshSamlTokenOperationCompleted(object arg) {
            if ((this.RefreshSamlTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RefreshSamlTokenCompleted(this, new RefreshSamlTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetServiceAccountShieldToken", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetServiceAccountShieldToken() {
            object[] results = this.Invoke("GetServiceAccountShieldToken", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetServiceAccountShieldTokenAsync() {
            this.GetServiceAccountShieldTokenAsync(null);
        }
        
        /// <remarks/>
        public void GetServiceAccountShieldTokenAsync(object userState) {
            if ((this.GetServiceAccountShieldTokenOperationCompleted == null)) {
                this.GetServiceAccountShieldTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServiceAccountShieldTokenOperationCompleted);
            }
            this.InvokeAsync("GetServiceAccountShieldToken", new object[0], this.GetServiceAccountShieldTokenOperationCompleted, userState);
        }
        
        private void OnGetServiceAccountShieldTokenOperationCompleted(object arg) {
            if ((this.GetServiceAccountShieldTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServiceAccountShieldTokenCompleted(this, new GetServiceAccountShieldTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetServiceAccountShieldSamlToken", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetServiceAccountShieldSamlTokenResult GetServiceAccountShieldSamlToken(string targetIdentifier) {
            object[] results = this.Invoke("GetServiceAccountShieldSamlToken", new object[] {
                        targetIdentifier});
            return ((GetServiceAccountShieldSamlTokenResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetServiceAccountShieldSamlTokenAsync(string targetIdentifier) {
            this.GetServiceAccountShieldSamlTokenAsync(targetIdentifier, null);
        }
        
        /// <remarks/>
        public void GetServiceAccountShieldSamlTokenAsync(string targetIdentifier, object userState) {
            if ((this.GetServiceAccountShieldSamlTokenOperationCompleted == null)) {
                this.GetServiceAccountShieldSamlTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServiceAccountShieldSamlTokenOperationCompleted);
            }
            this.InvokeAsync("GetServiceAccountShieldSamlToken", new object[] {
                        targetIdentifier}, this.GetServiceAccountShieldSamlTokenOperationCompleted, userState);
        }
        
        private void OnGetServiceAccountShieldSamlTokenOperationCompleted(object arg) {
            if ((this.GetServiceAccountShieldSamlTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServiceAccountShieldSamlTokenCompleted(this, new GetServiceAccountShieldSamlTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetNewShieldActivationCode", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetNewActivationCodeResponse GetNewShieldActivationCode(GetUsersRequest getUsersRequest) {
            object[] results = this.Invoke("GetNewShieldActivationCode", new object[] {
                        getUsersRequest});
            return ((GetNewActivationCodeResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetNewShieldActivationCodeAsync(GetUsersRequest getUsersRequest) {
            this.GetNewShieldActivationCodeAsync(getUsersRequest, null);
        }
        
        /// <remarks/>
        public void GetNewShieldActivationCodeAsync(GetUsersRequest getUsersRequest, object userState) {
            if ((this.GetNewShieldActivationCodeOperationCompleted == null)) {
                this.GetNewShieldActivationCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNewShieldActivationCodeOperationCompleted);
            }
            this.InvokeAsync("GetNewShieldActivationCode", new object[] {
                        getUsersRequest}, this.GetNewShieldActivationCodeOperationCompleted, userState);
        }
        
        private void OnGetNewShieldActivationCodeOperationCompleted(object arg) {
            if ((this.GetNewShieldActivationCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNewShieldActivationCodeCompleted(this, new GetNewShieldActivationCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/CreateShieldTenantAndUser", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CreateTenantAndUserResponse CreateShieldTenantAndUser(CreateTenantAndUserRequest createTenantAndUserRequest) {
            object[] results = this.Invoke("CreateShieldTenantAndUser", new object[] {
                        createTenantAndUserRequest});
            return ((CreateTenantAndUserResponse)(results[0]));
        }
        
        /// <remarks/>
        public void CreateShieldTenantAndUserAsync(CreateTenantAndUserRequest createTenantAndUserRequest) {
            this.CreateShieldTenantAndUserAsync(createTenantAndUserRequest, null);
        }
        
        /// <remarks/>
        public void CreateShieldTenantAndUserAsync(CreateTenantAndUserRequest createTenantAndUserRequest, object userState) {
            if ((this.CreateShieldTenantAndUserOperationCompleted == null)) {
                this.CreateShieldTenantAndUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateShieldTenantAndUserOperationCompleted);
            }
            this.InvokeAsync("CreateShieldTenantAndUser", new object[] {
                        createTenantAndUserRequest}, this.CreateShieldTenantAndUserOperationCompleted, userState);
        }
        
        private void OnCreateShieldTenantAndUserOperationCompleted(object arg) {
            if ((this.CreateShieldTenantAndUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateShieldTenantAndUserCompleted(this, new CreateShieldTenantAndUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/AuditLogShieldInsert", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AuditLogShieldInsert(AuditShieldInsertRequest req) {
            this.Invoke("AuditLogShieldInsert", new object[] {
                        req});
        }
        
        /// <remarks/>
        public void AuditLogShieldInsertAsync(AuditShieldInsertRequest req) {
            this.AuditLogShieldInsertAsync(req, null);
        }
        
        /// <remarks/>
        public void AuditLogShieldInsertAsync(AuditShieldInsertRequest req, object userState) {
            if ((this.AuditLogShieldInsertOperationCompleted == null)) {
                this.AuditLogShieldInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuditLogShieldInsertOperationCompleted);
            }
            this.InvokeAsync("AuditLogShieldInsert", new object[] {
                        req}, this.AuditLogShieldInsertOperationCompleted, userState);
        }
        
        private void OnAuditLogShieldInsertOperationCompleted(object arg) {
            if ((this.AuditLogShieldInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuditLogShieldInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/ValidateShieldConnectivity", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ValidateShieldConnectivity() {
            object[] results = this.Invoke("ValidateShieldConnectivity", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateShieldConnectivityAsync() {
            this.ValidateShieldConnectivityAsync(null);
        }
        
        /// <remarks/>
        public void ValidateShieldConnectivityAsync(object userState) {
            if ((this.ValidateShieldConnectivityOperationCompleted == null)) {
                this.ValidateShieldConnectivityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateShieldConnectivityOperationCompleted);
            }
            this.InvokeAsync("ValidateShieldConnectivity", new object[0], this.ValidateShieldConnectivityOperationCompleted, userState);
        }
        
        private void OnValidateShieldConnectivityOperationCompleted(object arg) {
            if ((this.ValidateShieldConnectivityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateShieldConnectivityCompleted(this, new ValidateShieldConnectivityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/AuthenticateAndAuthorizeUserAgainstShieldDebug", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AuthenticateAndAuthorizeUserAgainstShieldDebug(string username, string password) {
            object[] results = this.Invoke("AuthenticateAndAuthorizeUserAgainstShieldDebug", new object[] {
                        username,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AuthenticateAndAuthorizeUserAgainstShieldDebugAsync(string username, string password) {
            this.AuthenticateAndAuthorizeUserAgainstShieldDebugAsync(username, password, null);
        }
        
        /// <remarks/>
        public void AuthenticateAndAuthorizeUserAgainstShieldDebugAsync(string username, string password, object userState) {
            if ((this.AuthenticateAndAuthorizeUserAgainstShieldDebugOperationCompleted == null)) {
                this.AuthenticateAndAuthorizeUserAgainstShieldDebugOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthenticateAndAuthorizeUserAgainstShieldDebugOperationCompleted);
            }
            this.InvokeAsync("AuthenticateAndAuthorizeUserAgainstShieldDebug", new object[] {
                        username,
                        password}, this.AuthenticateAndAuthorizeUserAgainstShieldDebugOperationCompleted, userState);
        }
        
        private void OnAuthenticateAndAuthorizeUserAgainstShieldDebugOperationCompleted(object arg) {
            if ((this.AuthenticateAndAuthorizeUserAgainstShieldDebugCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthenticateAndAuthorizeUserAgainstShieldDebugCompleted(this, new AuthenticateAndAuthorizeUserAgainstShieldDebugCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/ResetAndGeneratePasswordForUser", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetNewPasswordResponse ResetAndGeneratePasswordForUser(GetNewPasswordRequest request) {
            object[] results = this.Invoke("ResetAndGeneratePasswordForUser", new object[] {
                        request});
            return ((GetNewPasswordResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ResetAndGeneratePasswordForUserAsync(GetNewPasswordRequest request) {
            this.ResetAndGeneratePasswordForUserAsync(request, null);
        }
        
        /// <remarks/>
        public void ResetAndGeneratePasswordForUserAsync(GetNewPasswordRequest request, object userState) {
            if ((this.ResetAndGeneratePasswordForUserOperationCompleted == null)) {
                this.ResetAndGeneratePasswordForUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResetAndGeneratePasswordForUserOperationCompleted);
            }
            this.InvokeAsync("ResetAndGeneratePasswordForUser", new object[] {
                        request}, this.ResetAndGeneratePasswordForUserOperationCompleted, userState);
        }
        
        private void OnResetAndGeneratePasswordForUserOperationCompleted(object arg) {
            if ((this.ResetAndGeneratePasswordForUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResetAndGeneratePasswordForUserCompleted(this, new ResetAndGeneratePasswordForUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/SaveUserAppProperty", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SaveUserAppProperty(SaveUserAppPropertyRequest request) {
            this.Invoke("SaveUserAppProperty", new object[] {
                        request});
        }
        
        /// <remarks/>
        public void SaveUserAppPropertyAsync(SaveUserAppPropertyRequest request) {
            this.SaveUserAppPropertyAsync(request, null);
        }
        
        /// <remarks/>
        public void SaveUserAppPropertyAsync(SaveUserAppPropertyRequest request, object userState) {
            if ((this.SaveUserAppPropertyOperationCompleted == null)) {
                this.SaveUserAppPropertyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveUserAppPropertyOperationCompleted);
            }
            this.InvokeAsync("SaveUserAppProperty", new object[] {
                        request}, this.SaveUserAppPropertyOperationCompleted, userState);
        }
        
        private void OnSaveUserAppPropertyOperationCompleted(object arg) {
            if ((this.SaveUserAppPropertyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveUserAppPropertyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetUserCountForLicense", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetUserCountForLicense(GetUsersRequest getUsersRequest) {
            object[] results = this.Invoke("GetUserCountForLicense", new object[] {
                        getUsersRequest});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserCountForLicenseAsync(GetUsersRequest getUsersRequest) {
            this.GetUserCountForLicenseAsync(getUsersRequest, null);
        }
        
        /// <remarks/>
        public void GetUserCountForLicenseAsync(GetUsersRequest getUsersRequest, object userState) {
            if ((this.GetUserCountForLicenseOperationCompleted == null)) {
                this.GetUserCountForLicenseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserCountForLicenseOperationCompleted);
            }
            this.InvokeAsync("GetUserCountForLicense", new object[] {
                        getUsersRequest}, this.GetUserCountForLicenseOperationCompleted, userState);
        }
        
        private void OnGetUserCountForLicenseOperationCompleted(object arg) {
            if ((this.GetUserCountForLicenseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserCountForLicenseCompleted(this, new GetUserCountForLicenseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/CreateShieldTenant", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CreateShieldTenantResponse CreateShieldTenant(CreateShieldTenantRequest createShieldTenantRequest) {
            object[] results = this.Invoke("CreateShieldTenant", new object[] {
                        createShieldTenantRequest});
            return ((CreateShieldTenantResponse)(results[0]));
        }
        
        /// <remarks/>
        public void CreateShieldTenantAsync(CreateShieldTenantRequest createShieldTenantRequest) {
            this.CreateShieldTenantAsync(createShieldTenantRequest, null);
        }
        
        /// <remarks/>
        public void CreateShieldTenantAsync(CreateShieldTenantRequest createShieldTenantRequest, object userState) {
            if ((this.CreateShieldTenantOperationCompleted == null)) {
                this.CreateShieldTenantOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateShieldTenantOperationCompleted);
            }
            this.InvokeAsync("CreateShieldTenant", new object[] {
                        createShieldTenantRequest}, this.CreateShieldTenantOperationCompleted, userState);
        }
        
        private void OnCreateShieldTenantOperationCompleted(object arg) {
            if ((this.CreateShieldTenantCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateShieldTenantCompleted(this, new CreateShieldTenantCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/UpdateShieldTenant", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateShieldTenant(UpdateShieldTenantRequest licenseRequest) {
            this.Invoke("UpdateShieldTenant", new object[] {
                        licenseRequest});
        }
        
        /// <remarks/>
        public void UpdateShieldTenantAsync(UpdateShieldTenantRequest licenseRequest) {
            this.UpdateShieldTenantAsync(licenseRequest, null);
        }
        
        /// <remarks/>
        public void UpdateShieldTenantAsync(UpdateShieldTenantRequest licenseRequest, object userState) {
            if ((this.UpdateShieldTenantOperationCompleted == null)) {
                this.UpdateShieldTenantOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateShieldTenantOperationCompleted);
            }
            this.InvokeAsync("UpdateShieldTenant", new object[] {
                        licenseRequest}, this.UpdateShieldTenantOperationCompleted, userState);
        }
        
        private void OnUpdateShieldTenantOperationCompleted(object arg) {
            if ((this.UpdateShieldTenantCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateShieldTenantCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/ChangeUserPassword", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ePrescribeSvcResponse ChangeUserPassword(ChangePasswordRequest changePasswordRequest) {
            object[] results = this.Invoke("ChangeUserPassword", new object[] {
                        changePasswordRequest});
            return ((ePrescribeSvcResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ChangeUserPasswordAsync(ChangePasswordRequest changePasswordRequest) {
            this.ChangeUserPasswordAsync(changePasswordRequest, null);
        }
        
        /// <remarks/>
        public void ChangeUserPasswordAsync(ChangePasswordRequest changePasswordRequest, object userState) {
            if ((this.ChangeUserPasswordOperationCompleted == null)) {
                this.ChangeUserPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeUserPasswordOperationCompleted);
            }
            this.InvokeAsync("ChangeUserPassword", new object[] {
                        changePasswordRequest}, this.ChangeUserPasswordOperationCompleted, userState);
        }
        
        private void OnChangeUserPasswordOperationCompleted(object arg) {
            if ((this.ChangeUserPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeUserPasswordCompleted(this, new ChangeUserPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/LinkAndAuthorizeFederatedUser", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AuthenticateAndAuthorizeUserResponse LinkAndAuthorizeFederatedUser(LinkAndAuthorizedFederatedUserRequest linkAndAuthorizedFederatedUserRequest) {
            object[] results = this.Invoke("LinkAndAuthorizeFederatedUser", new object[] {
                        linkAndAuthorizedFederatedUserRequest});
            return ((AuthenticateAndAuthorizeUserResponse)(results[0]));
        }
        
        /// <remarks/>
        public void LinkAndAuthorizeFederatedUserAsync(LinkAndAuthorizedFederatedUserRequest linkAndAuthorizedFederatedUserRequest) {
            this.LinkAndAuthorizeFederatedUserAsync(linkAndAuthorizedFederatedUserRequest, null);
        }
        
        /// <remarks/>
        public void LinkAndAuthorizeFederatedUserAsync(LinkAndAuthorizedFederatedUserRequest linkAndAuthorizedFederatedUserRequest, object userState) {
            if ((this.LinkAndAuthorizeFederatedUserOperationCompleted == null)) {
                this.LinkAndAuthorizeFederatedUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLinkAndAuthorizeFederatedUserOperationCompleted);
            }
            this.InvokeAsync("LinkAndAuthorizeFederatedUser", new object[] {
                        linkAndAuthorizedFederatedUserRequest}, this.LinkAndAuthorizeFederatedUserOperationCompleted, userState);
        }
        
        private void OnLinkAndAuthorizeFederatedUserOperationCompleted(object arg) {
            if ((this.LinkAndAuthorizeFederatedUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LinkAndAuthorizeFederatedUserCompleted(this, new LinkAndAuthorizeFederatedUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/LinkFederatedIdentityToShieldAccount", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LinkAndAuthorizeFederatedUserResponse LinkFederatedIdentityToShieldAccount(LinkAndAuthorizedFederatedUserRequest linkAndAuthorizedFederatedUserRequest) {
            object[] results = this.Invoke("LinkFederatedIdentityToShieldAccount", new object[] {
                        linkAndAuthorizedFederatedUserRequest});
            return ((LinkAndAuthorizeFederatedUserResponse)(results[0]));
        }
        
        /// <remarks/>
        public void LinkFederatedIdentityToShieldAccountAsync(LinkAndAuthorizedFederatedUserRequest linkAndAuthorizedFederatedUserRequest) {
            this.LinkFederatedIdentityToShieldAccountAsync(linkAndAuthorizedFederatedUserRequest, null);
        }
        
        /// <remarks/>
        public void LinkFederatedIdentityToShieldAccountAsync(LinkAndAuthorizedFederatedUserRequest linkAndAuthorizedFederatedUserRequest, object userState) {
            if ((this.LinkFederatedIdentityToShieldAccountOperationCompleted == null)) {
                this.LinkFederatedIdentityToShieldAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLinkFederatedIdentityToShieldAccountOperationCompleted);
            }
            this.InvokeAsync("LinkFederatedIdentityToShieldAccount", new object[] {
                        linkAndAuthorizedFederatedUserRequest}, this.LinkFederatedIdentityToShieldAccountOperationCompleted, userState);
        }
        
        private void OnLinkFederatedIdentityToShieldAccountOperationCompleted(object arg) {
            if ((this.LinkFederatedIdentityToShieldAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LinkFederatedIdentityToShieldAccountCompleted(this, new LinkFederatedIdentityToShieldAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/CreateTrustedTenant", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateTrustedTenant(LicenseRequest licRequest) {
            this.Invoke("CreateTrustedTenant", new object[] {
                        licRequest});
        }
        
        /// <remarks/>
        public void CreateTrustedTenantAsync(LicenseRequest licRequest) {
            this.CreateTrustedTenantAsync(licRequest, null);
        }
        
        /// <remarks/>
        public void CreateTrustedTenantAsync(LicenseRequest licRequest, object userState) {
            if ((this.CreateTrustedTenantOperationCompleted == null)) {
                this.CreateTrustedTenantOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateTrustedTenantOperationCompleted);
            }
            this.InvokeAsync("CreateTrustedTenant", new object[] {
                        licRequest}, this.CreateTrustedTenantOperationCompleted, userState);
        }
        
        private void OnCreateTrustedTenantOperationCompleted(object arg) {
            if ((this.CreateTrustedTenantCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateTrustedTenantCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetAllShieldSecretQuestions", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetAllSecretQuestionsResponse GetAllShieldSecretQuestions() {
            object[] results = this.Invoke("GetAllShieldSecretQuestions", new object[0]);
            return ((GetAllSecretQuestionsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllShieldSecretQuestionsAsync() {
            this.GetAllShieldSecretQuestionsAsync(null);
        }
        
        /// <remarks/>
        public void GetAllShieldSecretQuestionsAsync(object userState) {
            if ((this.GetAllShieldSecretQuestionsOperationCompleted == null)) {
                this.GetAllShieldSecretQuestionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllShieldSecretQuestionsOperationCompleted);
            }
            this.InvokeAsync("GetAllShieldSecretQuestions", new object[0], this.GetAllShieldSecretQuestionsOperationCompleted, userState);
        }
        
        private void OnGetAllShieldSecretQuestionsOperationCompleted(object arg) {
            if ((this.GetAllShieldSecretQuestionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllShieldSecretQuestionsCompleted(this, new GetAllShieldSecretQuestionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/SaveSecretQuestionAnswers", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SaveSecretQuestionAnswersResponse SaveSecretQuestionAnswers(SaveSecretQuestionAnswersRequest saveSecretQuestionAnswersRequest) {
            object[] results = this.Invoke("SaveSecretQuestionAnswers", new object[] {
                        saveSecretQuestionAnswersRequest});
            return ((SaveSecretQuestionAnswersResponse)(results[0]));
        }
        
        /// <remarks/>
        public void SaveSecretQuestionAnswersAsync(SaveSecretQuestionAnswersRequest saveSecretQuestionAnswersRequest) {
            this.SaveSecretQuestionAnswersAsync(saveSecretQuestionAnswersRequest, null);
        }
        
        /// <remarks/>
        public void SaveSecretQuestionAnswersAsync(SaveSecretQuestionAnswersRequest saveSecretQuestionAnswersRequest, object userState) {
            if ((this.SaveSecretQuestionAnswersOperationCompleted == null)) {
                this.SaveSecretQuestionAnswersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveSecretQuestionAnswersOperationCompleted);
            }
            this.InvokeAsync("SaveSecretQuestionAnswers", new object[] {
                        saveSecretQuestionAnswersRequest}, this.SaveSecretQuestionAnswersOperationCompleted, userState);
        }
        
        private void OnSaveSecretQuestionAnswersOperationCompleted(object arg) {
            if ((this.SaveSecretQuestionAnswersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveSecretQuestionAnswersCompleted(this, new SaveSecretQuestionAnswersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/EnrollProvider", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EnrollProviderResponse EnrollProvider(EnrollProviderRequest request) {
            object[] results = this.Invoke("EnrollProvider", new object[] {
                        request});
            return ((EnrollProviderResponse)(results[0]));
        }
        
        /// <remarks/>
        public void EnrollProviderAsync(EnrollProviderRequest request) {
            this.EnrollProviderAsync(request, null);
        }
        
        /// <remarks/>
        public void EnrollProviderAsync(EnrollProviderRequest request, object userState) {
            if ((this.EnrollProviderOperationCompleted == null)) {
                this.EnrollProviderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnrollProviderOperationCompleted);
            }
            this.InvokeAsync("EnrollProvider", new object[] {
                        request}, this.EnrollProviderOperationCompleted, userState);
        }
        
        private void OnEnrollProviderOperationCompleted(object arg) {
            if ((this.EnrollProviderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnrollProviderCompleted(this, new EnrollProviderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetUserShieldSecretQuestions", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetUserSecretQuestionsResponse GetUserShieldSecretQuestions(GetUserSecretQuestionsRequest getUserSecretQuestionsRequest) {
            object[] results = this.Invoke("GetUserShieldSecretQuestions", new object[] {
                        getUserSecretQuestionsRequest});
            return ((GetUserSecretQuestionsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserShieldSecretQuestionsAsync(GetUserSecretQuestionsRequest getUserSecretQuestionsRequest) {
            this.GetUserShieldSecretQuestionsAsync(getUserSecretQuestionsRequest, null);
        }
        
        /// <remarks/>
        public void GetUserShieldSecretQuestionsAsync(GetUserSecretQuestionsRequest getUserSecretQuestionsRequest, object userState) {
            if ((this.GetUserShieldSecretQuestionsOperationCompleted == null)) {
                this.GetUserShieldSecretQuestionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserShieldSecretQuestionsOperationCompleted);
            }
            this.InvokeAsync("GetUserShieldSecretQuestions", new object[] {
                        getUserSecretQuestionsRequest}, this.GetUserShieldSecretQuestionsOperationCompleted, userState);
        }
        
        private void OnGetUserShieldSecretQuestionsOperationCompleted(object arg) {
            if ((this.GetUserShieldSecretQuestionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserShieldSecretQuestionsCompleted(this, new GetUserShieldSecretQuestionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/ResetForgottenPassword", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResetForgottenPasswordResponse ResetForgottenPassword(ResetForgottenPasswordRequest request) {
            object[] results = this.Invoke("ResetForgottenPassword", new object[] {
                        request});
            return ((ResetForgottenPasswordResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ResetForgottenPasswordAsync(ResetForgottenPasswordRequest request) {
            this.ResetForgottenPasswordAsync(request, null);
        }
        
        /// <remarks/>
        public void ResetForgottenPasswordAsync(ResetForgottenPasswordRequest request, object userState) {
            if ((this.ResetForgottenPasswordOperationCompleted == null)) {
                this.ResetForgottenPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResetForgottenPasswordOperationCompleted);
            }
            this.InvokeAsync("ResetForgottenPassword", new object[] {
                        request}, this.ResetForgottenPasswordOperationCompleted, userState);
        }
        
        private void OnResetForgottenPasswordOperationCompleted(object arg) {
            if ((this.ResetForgottenPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResetForgottenPasswordCompleted(this, new ResetForgottenPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/AuthenticateAndAuthorizeUtilUser", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AuthenticateAndAuthorizeUtilUserResponse AuthenticateAndAuthorizeUtilUser(AuthenticateAndAuthorizeUserRequest authenticateAndAuthorizeUserRequest) {
            object[] results = this.Invoke("AuthenticateAndAuthorizeUtilUser", new object[] {
                        authenticateAndAuthorizeUserRequest});
            return ((AuthenticateAndAuthorizeUtilUserResponse)(results[0]));
        }
        
        /// <remarks/>
        public void AuthenticateAndAuthorizeUtilUserAsync(AuthenticateAndAuthorizeUserRequest authenticateAndAuthorizeUserRequest) {
            this.AuthenticateAndAuthorizeUtilUserAsync(authenticateAndAuthorizeUserRequest, null);
        }
        
        /// <remarks/>
        public void AuthenticateAndAuthorizeUtilUserAsync(AuthenticateAndAuthorizeUserRequest authenticateAndAuthorizeUserRequest, object userState) {
            if ((this.AuthenticateAndAuthorizeUtilUserOperationCompleted == null)) {
                this.AuthenticateAndAuthorizeUtilUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthenticateAndAuthorizeUtilUserOperationCompleted);
            }
            this.InvokeAsync("AuthenticateAndAuthorizeUtilUser", new object[] {
                        authenticateAndAuthorizeUserRequest}, this.AuthenticateAndAuthorizeUtilUserOperationCompleted, userState);
        }
        
        private void OnAuthenticateAndAuthorizeUtilUserOperationCompleted(object arg) {
            if ((this.AuthenticateAndAuthorizeUtilUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthenticateAndAuthorizeUtilUserCompleted(this, new AuthenticateAndAuthorizeUtilUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetEnterpriseePAStatusByPartnerID", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetEnterpriseePAStatusByPartnerID(GetEnterpriseePAStatusRequest enterpriseePAStatusRequest) {
            object[] results = this.Invoke("GetEnterpriseePAStatusByPartnerID", new object[] {
                        enterpriseePAStatusRequest});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetEnterpriseePAStatusByPartnerIDAsync(GetEnterpriseePAStatusRequest enterpriseePAStatusRequest) {
            this.GetEnterpriseePAStatusByPartnerIDAsync(enterpriseePAStatusRequest, null);
        }
        
        /// <remarks/>
        public void GetEnterpriseePAStatusByPartnerIDAsync(GetEnterpriseePAStatusRequest enterpriseePAStatusRequest, object userState) {
            if ((this.GetEnterpriseePAStatusByPartnerIDOperationCompleted == null)) {
                this.GetEnterpriseePAStatusByPartnerIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEnterpriseePAStatusByPartnerIDOperationCompleted);
            }
            this.InvokeAsync("GetEnterpriseePAStatusByPartnerID", new object[] {
                        enterpriseePAStatusRequest}, this.GetEnterpriseePAStatusByPartnerIDOperationCompleted, userState);
        }
        
        private void OnGetEnterpriseePAStatusByPartnerIDOperationCompleted(object arg) {
            if ((this.GetEnterpriseePAStatusByPartnerIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEnterpriseePAStatusByPartnerIDCompleted(this, new GetEnterpriseePAStatusByPartnerIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetEnterpriseePAStatusByClientID", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetEnterpriseePAStatusByClientID(GetePAStatusRequest enterpriseePAStatusRequest) {
            object[] results = this.Invoke("GetEnterpriseePAStatusByClientID", new object[] {
                        enterpriseePAStatusRequest});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetEnterpriseePAStatusByClientIDAsync(GetePAStatusRequest enterpriseePAStatusRequest) {
            this.GetEnterpriseePAStatusByClientIDAsync(enterpriseePAStatusRequest, null);
        }
        
        /// <remarks/>
        public void GetEnterpriseePAStatusByClientIDAsync(GetePAStatusRequest enterpriseePAStatusRequest, object userState) {
            if ((this.GetEnterpriseePAStatusByClientIDOperationCompleted == null)) {
                this.GetEnterpriseePAStatusByClientIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEnterpriseePAStatusByClientIDOperationCompleted);
            }
            this.InvokeAsync("GetEnterpriseePAStatusByClientID", new object[] {
                        enterpriseePAStatusRequest}, this.GetEnterpriseePAStatusByClientIDOperationCompleted, userState);
        }
        
        private void OnGetEnterpriseePAStatusByClientIDOperationCompleted(object arg) {
            if ((this.GetEnterpriseePAStatusByClientIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEnterpriseePAStatusByClientIDCompleted(this, new GetEnterpriseePAStatusByClientIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/UpdateSecUsersInfoAnd3rdParties", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateSecUsersInfoAnd3rdParties(UpdateSecUsersInfoFromShieldRequest updateSecUsersInfoFromShieldRequest) {
            this.Invoke("UpdateSecUsersInfoAnd3rdParties", new object[] {
                        updateSecUsersInfoFromShieldRequest});
        }
        
        /// <remarks/>
        public void UpdateSecUsersInfoAnd3rdPartiesAsync(UpdateSecUsersInfoFromShieldRequest updateSecUsersInfoFromShieldRequest) {
            this.UpdateSecUsersInfoAnd3rdPartiesAsync(updateSecUsersInfoFromShieldRequest, null);
        }
        
        /// <remarks/>
        public void UpdateSecUsersInfoAnd3rdPartiesAsync(UpdateSecUsersInfoFromShieldRequest updateSecUsersInfoFromShieldRequest, object userState) {
            if ((this.UpdateSecUsersInfoAnd3rdPartiesOperationCompleted == null)) {
                this.UpdateSecUsersInfoAnd3rdPartiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSecUsersInfoAnd3rdPartiesOperationCompleted);
            }
            this.InvokeAsync("UpdateSecUsersInfoAnd3rdParties", new object[] {
                        updateSecUsersInfoFromShieldRequest}, this.UpdateSecUsersInfoAnd3rdPartiesOperationCompleted, userState);
        }
        
        private void OnUpdateSecUsersInfoAnd3rdPartiesOperationCompleted(object arg) {
            if ((this.UpdateSecUsersInfoAnd3rdPartiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSecUsersInfoAnd3rdPartiesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/AddUser", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CreateUserResponse AddUser(CreateUserRequest createUserRequest) {
            object[] results = this.Invoke("AddUser", new object[] {
                        createUserRequest});
            return ((CreateUserResponse)(results[0]));
        }
        
        /// <remarks/>
        public void AddUserAsync(CreateUserRequest createUserRequest) {
            this.AddUserAsync(createUserRequest, null);
        }
        
        /// <remarks/>
        public void AddUserAsync(CreateUserRequest createUserRequest, object userState) {
            if ((this.AddUserOperationCompleted == null)) {
                this.AddUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUserOperationCompleted);
            }
            this.InvokeAsync("AddUser", new object[] {
                        createUserRequest}, this.AddUserOperationCompleted, userState);
        }
        
        private void OnAddUserOperationCompleted(object arg) {
            if ((this.AddUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUserCompleted(this, new AddUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/UpdateUser", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UpdateUserResponse UpdateUser(UpdateUserRequest updUserRequest) {
            object[] results = this.Invoke("UpdateUser", new object[] {
                        updUserRequest});
            return ((UpdateUserResponse)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateUserAsync(UpdateUserRequest updUserRequest) {
            this.UpdateUserAsync(updUserRequest, null);
        }
        
        /// <remarks/>
        public void UpdateUserAsync(UpdateUserRequest updUserRequest, object userState) {
            if ((this.UpdateUserOperationCompleted == null)) {
                this.UpdateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserOperationCompleted);
            }
            this.InvokeAsync("UpdateUser", new object[] {
                        updUserRequest}, this.UpdateUserOperationCompleted, userState);
        }
        
        private void OnUpdateUserOperationCompleted(object arg) {
            if ((this.UpdateUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserCompleted(this, new UpdateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/CreateShieldUser", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CreateShieldUserResponse CreateShieldUser(CreateShieldUserRequest createShieldUserRequest) {
            object[] results = this.Invoke("CreateShieldUser", new object[] {
                        createShieldUserRequest});
            return ((CreateShieldUserResponse)(results[0]));
        }
        
        /// <remarks/>
        public void CreateShieldUserAsync(CreateShieldUserRequest createShieldUserRequest) {
            this.CreateShieldUserAsync(createShieldUserRequest, null);
        }
        
        /// <remarks/>
        public void CreateShieldUserAsync(CreateShieldUserRequest createShieldUserRequest, object userState) {
            if ((this.CreateShieldUserOperationCompleted == null)) {
                this.CreateShieldUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateShieldUserOperationCompleted);
            }
            this.InvokeAsync("CreateShieldUser", new object[] {
                        createShieldUserRequest}, this.CreateShieldUserOperationCompleted, userState);
        }
        
        private void OnCreateShieldUserOperationCompleted(object arg) {
            if ((this.CreateShieldUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateShieldUserCompleted(this, new CreateShieldUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/UpdateShieldUser", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UpdateShieldUserResponse UpdateShieldUser(UpdateShieldUserRequest updateShieldUserRequest) {
            object[] results = this.Invoke("UpdateShieldUser", new object[] {
                        updateShieldUserRequest});
            return ((UpdateShieldUserResponse)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateShieldUserAsync(UpdateShieldUserRequest updateShieldUserRequest) {
            this.UpdateShieldUserAsync(updateShieldUserRequest, null);
        }
        
        /// <remarks/>
        public void UpdateShieldUserAsync(UpdateShieldUserRequest updateShieldUserRequest, object userState) {
            if ((this.UpdateShieldUserOperationCompleted == null)) {
                this.UpdateShieldUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateShieldUserOperationCompleted);
            }
            this.InvokeAsync("UpdateShieldUser", new object[] {
                        updateShieldUserRequest}, this.UpdateShieldUserOperationCompleted, userState);
        }
        
        private void OnUpdateShieldUserOperationCompleted(object arg) {
            if ((this.UpdateShieldUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateShieldUserCompleted(this, new UpdateShieldUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/SetDEARegistrantStatus", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SetDEARegistrantStatusResponse SetDEARegistrantStatus(SetDEARegistrantStatusRequest setDEARegistrantStatusRequest) {
            object[] results = this.Invoke("SetDEARegistrantStatus", new object[] {
                        setDEARegistrantStatusRequest});
            return ((SetDEARegistrantStatusResponse)(results[0]));
        }
        
        /// <remarks/>
        public void SetDEARegistrantStatusAsync(SetDEARegistrantStatusRequest setDEARegistrantStatusRequest) {
            this.SetDEARegistrantStatusAsync(setDEARegistrantStatusRequest, null);
        }
        
        /// <remarks/>
        public void SetDEARegistrantStatusAsync(SetDEARegistrantStatusRequest setDEARegistrantStatusRequest, object userState) {
            if ((this.SetDEARegistrantStatusOperationCompleted == null)) {
                this.SetDEARegistrantStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetDEARegistrantStatusOperationCompleted);
            }
            this.InvokeAsync("SetDEARegistrantStatus", new object[] {
                        setDEARegistrantStatusRequest}, this.SetDEARegistrantStatusOperationCompleted, userState);
        }
        
        private void OnSetDEARegistrantStatusOperationCompleted(object arg) {
            if ((this.SetDEARegistrantStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetDEARegistrantStatusCompleted(this, new SetDEARegistrantStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetReconciledControlledSubstanceCode", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetReconciledControlledSubstanceCode(RxRequest rxRequest) {
            object[] results = this.Invoke("GetReconciledControlledSubstanceCode", new object[] {
                        rxRequest});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetReconciledControlledSubstanceCodeAsync(RxRequest rxRequest) {
            this.GetReconciledControlledSubstanceCodeAsync(rxRequest, null);
        }
        
        /// <remarks/>
        public void GetReconciledControlledSubstanceCodeAsync(RxRequest rxRequest, object userState) {
            if ((this.GetReconciledControlledSubstanceCodeOperationCompleted == null)) {
                this.GetReconciledControlledSubstanceCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReconciledControlledSubstanceCodeOperationCompleted);
            }
            this.InvokeAsync("GetReconciledControlledSubstanceCode", new object[] {
                        rxRequest}, this.GetReconciledControlledSubstanceCodeOperationCompleted, userState);
        }
        
        private void OnGetReconciledControlledSubstanceCodeOperationCompleted(object arg) {
            if ((this.GetReconciledControlledSubstanceCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReconciledControlledSubstanceCodeCompleted(this, new GetReconciledControlledSubstanceCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/RxOptionsUsedInsert", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RxOptionsUsedInsert(RxOptionsUsedRequest rxOptionsUsedRequest) {
            this.Invoke("RxOptionsUsedInsert", new object[] {
                        rxOptionsUsedRequest});
        }
        
        /// <remarks/>
        public void RxOptionsUsedInsertAsync(RxOptionsUsedRequest rxOptionsUsedRequest) {
            this.RxOptionsUsedInsertAsync(rxOptionsUsedRequest, null);
        }
        
        /// <remarks/>
        public void RxOptionsUsedInsertAsync(RxOptionsUsedRequest rxOptionsUsedRequest, object userState) {
            if ((this.RxOptionsUsedInsertOperationCompleted == null)) {
                this.RxOptionsUsedInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRxOptionsUsedInsertOperationCompleted);
            }
            this.InvokeAsync("RxOptionsUsedInsert", new object[] {
                        rxOptionsUsedRequest}, this.RxOptionsUsedInsertOperationCompleted, userState);
        }
        
        private void OnRxOptionsUsedInsertOperationCompleted(object arg) {
            if ((this.RxOptionsUsedInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RxOptionsUsedInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetProviderDEALicenses", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ReponseDEALicenses GetProviderDEALicenses(string providerID, ConnectionStringPointer dbID) {
            object[] results = this.Invoke("GetProviderDEALicenses", new object[] {
                        providerID,
                        dbID});
            return ((ReponseDEALicenses)(results[0]));
        }
        
        /// <remarks/>
        public void GetProviderDEALicensesAsync(string providerID, ConnectionStringPointer dbID) {
            this.GetProviderDEALicensesAsync(providerID, dbID, null);
        }
        
        /// <remarks/>
        public void GetProviderDEALicensesAsync(string providerID, ConnectionStringPointer dbID, object userState) {
            if ((this.GetProviderDEALicensesOperationCompleted == null)) {
                this.GetProviderDEALicensesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProviderDEALicensesOperationCompleted);
            }
            this.InvokeAsync("GetProviderDEALicenses", new object[] {
                        providerID,
                        dbID}, this.GetProviderDEALicensesOperationCompleted, userState);
        }
        
        private void OnGetProviderDEALicensesOperationCompleted(object arg) {
            if ((this.GetProviderDEALicensesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProviderDEALicensesCompleted(this, new GetProviderDEALicensesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/UpdateDEALicenses", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateDEALicenses(SaveDEALicenseRequest deaLicenseRequest, ConnectionStringPointer dbID) {
            this.Invoke("UpdateDEALicenses", new object[] {
                        deaLicenseRequest,
                        dbID});
        }
        
        /// <remarks/>
        public void UpdateDEALicensesAsync(SaveDEALicenseRequest deaLicenseRequest, ConnectionStringPointer dbID) {
            this.UpdateDEALicensesAsync(deaLicenseRequest, dbID, null);
        }
        
        /// <remarks/>
        public void UpdateDEALicensesAsync(SaveDEALicenseRequest deaLicenseRequest, ConnectionStringPointer dbID, object userState) {
            if ((this.UpdateDEALicensesOperationCompleted == null)) {
                this.UpdateDEALicensesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDEALicensesOperationCompleted);
            }
            this.InvokeAsync("UpdateDEALicenses", new object[] {
                        deaLicenseRequest,
                        dbID}, this.UpdateDEALicensesOperationCompleted, userState);
        }
        
        private void OnUpdateDEALicensesOperationCompleted(object arg) {
            if ((this.UpdateDEALicensesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDEALicensesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/DeleteDEALicense", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteDEALicense(SaveDEALicenseRequest deaLicenseRequest, ConnectionStringPointer dbID) {
            this.Invoke("DeleteDEALicense", new object[] {
                        deaLicenseRequest,
                        dbID});
        }
        
        /// <remarks/>
        public void DeleteDEALicenseAsync(SaveDEALicenseRequest deaLicenseRequest, ConnectionStringPointer dbID) {
            this.DeleteDEALicenseAsync(deaLicenseRequest, dbID, null);
        }
        
        /// <remarks/>
        public void DeleteDEALicenseAsync(SaveDEALicenseRequest deaLicenseRequest, ConnectionStringPointer dbID, object userState) {
            if ((this.DeleteDEALicenseOperationCompleted == null)) {
                this.DeleteDEALicenseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDEALicenseOperationCompleted);
            }
            this.InvokeAsync("DeleteDEALicense", new object[] {
                        deaLicenseRequest,
                        dbID}, this.DeleteDEALicenseOperationCompleted, userState);
        }
        
        private void OnDeleteDEALicenseOperationCompleted(object arg) {
            if ((this.DeleteDEALicenseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDEALicenseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetAdminCountForLicense", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object GetAdminCountForLicense(string licenseID, ConnectionStringPointer dbID) {
            object[] results = this.Invoke("GetAdminCountForLicense", new object[] {
                        licenseID,
                        dbID});
            return ((object)(results[0]));
        }
        
        /// <remarks/>
        public void GetAdminCountForLicenseAsync(string licenseID, ConnectionStringPointer dbID) {
            this.GetAdminCountForLicenseAsync(licenseID, dbID, null);
        }
        
        /// <remarks/>
        public void GetAdminCountForLicenseAsync(string licenseID, ConnectionStringPointer dbID, object userState) {
            if ((this.GetAdminCountForLicenseOperationCompleted == null)) {
                this.GetAdminCountForLicenseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAdminCountForLicenseOperationCompleted);
            }
            this.InvokeAsync("GetAdminCountForLicense", new object[] {
                        licenseID,
                        dbID}, this.GetAdminCountForLicenseOperationCompleted, userState);
        }
        
        private void OnGetAdminCountForLicenseOperationCompleted(object arg) {
            if ((this.GetAdminCountForLicenseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAdminCountForLicenseCompleted(this, new GetAdminCountForLicenseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/SignPrescriptionAndInsertSignedScriptMessage", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SignPrescriptionsResponse SignPrescriptionAndInsertSignedScriptMessage(SignPrescriptionsRequest request) {
            object[] results = this.Invoke("SignPrescriptionAndInsertSignedScriptMessage", new object[] {
                        request});
            return ((SignPrescriptionsResponse)(results[0]));
        }
        
        /// <remarks/>
        public void SignPrescriptionAndInsertSignedScriptMessageAsync(SignPrescriptionsRequest request) {
            this.SignPrescriptionAndInsertSignedScriptMessageAsync(request, null);
        }
        
        /// <remarks/>
        public void SignPrescriptionAndInsertSignedScriptMessageAsync(SignPrescriptionsRequest request, object userState) {
            if ((this.SignPrescriptionAndInsertSignedScriptMessageOperationCompleted == null)) {
                this.SignPrescriptionAndInsertSignedScriptMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSignPrescriptionAndInsertSignedScriptMessageOperationCompleted);
            }
            this.InvokeAsync("SignPrescriptionAndInsertSignedScriptMessage", new object[] {
                        request}, this.SignPrescriptionAndInsertSignedScriptMessageOperationCompleted, userState);
        }
        
        private void OnSignPrescriptionAndInsertSignedScriptMessageOperationCompleted(object arg) {
            if ((this.SignPrescriptionAndInsertSignedScriptMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SignPrescriptionAndInsertSignedScriptMessageCompleted(this, new SignPrescriptionAndInsertSignedScriptMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetPatientsByLicense", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Patient[] GetPatientsByLicense(string licenseID, ConnectionStringPointer dbID) {
            object[] results = this.Invoke("GetPatientsByLicense", new object[] {
                        licenseID,
                        dbID});
            return ((Patient[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientsByLicenseAsync(string licenseID, ConnectionStringPointer dbID) {
            this.GetPatientsByLicenseAsync(licenseID, dbID, null);
        }
        
        /// <remarks/>
        public void GetPatientsByLicenseAsync(string licenseID, ConnectionStringPointer dbID, object userState) {
            if ((this.GetPatientsByLicenseOperationCompleted == null)) {
                this.GetPatientsByLicenseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientsByLicenseOperationCompleted);
            }
            this.InvokeAsync("GetPatientsByLicense", new object[] {
                        licenseID,
                        dbID}, this.GetPatientsByLicenseOperationCompleted, userState);
        }
        
        private void OnGetPatientsByLicenseOperationCompleted(object arg) {
            if ((this.GetPatientsByLicenseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientsByLicenseCompleted(this, new GetPatientsByLicenseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetPatients", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Patient[] GetPatients(string licenseID, string rxStartDate, string rxEndDate, ConnectionStringPointer dbID) {
            object[] results = this.Invoke("GetPatients", new object[] {
                        licenseID,
                        rxStartDate,
                        rxEndDate,
                        dbID});
            return ((Patient[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientsAsync(string licenseID, string rxStartDate, string rxEndDate, ConnectionStringPointer dbID) {
            this.GetPatientsAsync(licenseID, rxStartDate, rxEndDate, dbID, null);
        }
        
        /// <remarks/>
        public void GetPatientsAsync(string licenseID, string rxStartDate, string rxEndDate, ConnectionStringPointer dbID, object userState) {
            if ((this.GetPatientsOperationCompleted == null)) {
                this.GetPatientsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientsOperationCompleted);
            }
            this.InvokeAsync("GetPatients", new object[] {
                        licenseID,
                        rxStartDate,
                        rxEndDate,
                        dbID}, this.GetPatientsOperationCompleted, userState);
        }
        
        private void OnGetPatientsOperationCompleted(object arg) {
            if ((this.GetPatientsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientsCompleted(this, new GetPatientsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetPatientsLoadByID", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Patient GetPatientsLoadByID(string patientID, string licenseID, string verifyFormulary, string loadOnlyPlanData, string userID, ConnectionStringPointer dbID) {
            object[] results = this.Invoke("GetPatientsLoadByID", new object[] {
                        patientID,
                        licenseID,
                        verifyFormulary,
                        loadOnlyPlanData,
                        userID,
                        dbID});
            return ((Patient)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientsLoadByIDAsync(string patientID, string licenseID, string verifyFormulary, string loadOnlyPlanData, string userID, ConnectionStringPointer dbID) {
            this.GetPatientsLoadByIDAsync(patientID, licenseID, verifyFormulary, loadOnlyPlanData, userID, dbID, null);
        }
        
        /// <remarks/>
        public void GetPatientsLoadByIDAsync(string patientID, string licenseID, string verifyFormulary, string loadOnlyPlanData, string userID, ConnectionStringPointer dbID, object userState) {
            if ((this.GetPatientsLoadByIDOperationCompleted == null)) {
                this.GetPatientsLoadByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientsLoadByIDOperationCompleted);
            }
            this.InvokeAsync("GetPatientsLoadByID", new object[] {
                        patientID,
                        licenseID,
                        verifyFormulary,
                        loadOnlyPlanData,
                        userID,
                        dbID}, this.GetPatientsLoadByIDOperationCompleted, userState);
        }
        
        private void OnGetPatientsLoadByIDOperationCompleted(object arg) {
            if ((this.GetPatientsLoadByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientsLoadByIDCompleted(this, new GetPatientsLoadByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetPatientsLoadByDate", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Patient GetPatientsLoadByDate(string patientID, string licenseID, string userID, string fromDateTime, ConnectionStringPointer dbID) {
            object[] results = this.Invoke("GetPatientsLoadByDate", new object[] {
                        patientID,
                        licenseID,
                        userID,
                        fromDateTime,
                        dbID});
            return ((Patient)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientsLoadByDateAsync(string patientID, string licenseID, string userID, string fromDateTime, ConnectionStringPointer dbID) {
            this.GetPatientsLoadByDateAsync(patientID, licenseID, userID, fromDateTime, dbID, null);
        }
        
        /// <remarks/>
        public void GetPatientsLoadByDateAsync(string patientID, string licenseID, string userID, string fromDateTime, ConnectionStringPointer dbID, object userState) {
            if ((this.GetPatientsLoadByDateOperationCompleted == null)) {
                this.GetPatientsLoadByDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientsLoadByDateOperationCompleted);
            }
            this.InvokeAsync("GetPatientsLoadByDate", new object[] {
                        patientID,
                        licenseID,
                        userID,
                        fromDateTime,
                        dbID}, this.GetPatientsLoadByDateOperationCompleted, userState);
        }
        
        private void OnGetPatientsLoadByDateOperationCompleted(object arg) {
            if ((this.GetPatientsLoadByDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientsLoadByDateCompleted(this, new GetPatientsLoadByDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetAllergyByPatient", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Allergy[] GetAllergyByPatient(string patientID, ConnectionStringPointer dbID) {
            object[] results = this.Invoke("GetAllergyByPatient", new object[] {
                        patientID,
                        dbID});
            return ((Allergy[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllergyByPatientAsync(string patientID, ConnectionStringPointer dbID) {
            this.GetAllergyByPatientAsync(patientID, dbID, null);
        }
        
        /// <remarks/>
        public void GetAllergyByPatientAsync(string patientID, ConnectionStringPointer dbID, object userState) {
            if ((this.GetAllergyByPatientOperationCompleted == null)) {
                this.GetAllergyByPatientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllergyByPatientOperationCompleted);
            }
            this.InvokeAsync("GetAllergyByPatient", new object[] {
                        patientID,
                        dbID}, this.GetAllergyByPatientOperationCompleted, userState);
        }
        
        private void OnGetAllergyByPatientOperationCompleted(object arg) {
            if ((this.GetAllergyByPatientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllergyByPatientCompleted(this, new GetAllergyByPatientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetRxByPatient", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Rx[] GetRxByPatient(string patientID, string licenseID, string verifyFormulary, string loadOnlyPlanData, string userID, ConnectionStringPointer dbID) {
            object[] results = this.Invoke("GetRxByPatient", new object[] {
                        patientID,
                        licenseID,
                        verifyFormulary,
                        loadOnlyPlanData,
                        userID,
                        dbID});
            return ((Rx[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRxByPatientAsync(string patientID, string licenseID, string verifyFormulary, string loadOnlyPlanData, string userID, ConnectionStringPointer dbID) {
            this.GetRxByPatientAsync(patientID, licenseID, verifyFormulary, loadOnlyPlanData, userID, dbID, null);
        }
        
        /// <remarks/>
        public void GetRxByPatientAsync(string patientID, string licenseID, string verifyFormulary, string loadOnlyPlanData, string userID, ConnectionStringPointer dbID, object userState) {
            if ((this.GetRxByPatientOperationCompleted == null)) {
                this.GetRxByPatientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRxByPatientOperationCompleted);
            }
            this.InvokeAsync("GetRxByPatient", new object[] {
                        patientID,
                        licenseID,
                        verifyFormulary,
                        loadOnlyPlanData,
                        userID,
                        dbID}, this.GetRxByPatientOperationCompleted, userState);
        }
        
        private void OnGetRxByPatientOperationCompleted(object arg) {
            if ((this.GetRxByPatientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRxByPatientCompleted(this, new GetRxByPatientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetDiagnosisByPatient", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Problem[] GetDiagnosisByPatient(string patientID, string licenseID, string userID, ConnectionStringPointer dbID) {
            object[] results = this.Invoke("GetDiagnosisByPatient", new object[] {
                        patientID,
                        licenseID,
                        userID,
                        dbID});
            return ((Problem[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDiagnosisByPatientAsync(string patientID, string licenseID, string userID, ConnectionStringPointer dbID) {
            this.GetDiagnosisByPatientAsync(patientID, licenseID, userID, dbID, null);
        }
        
        /// <remarks/>
        public void GetDiagnosisByPatientAsync(string patientID, string licenseID, string userID, ConnectionStringPointer dbID, object userState) {
            if ((this.GetDiagnosisByPatientOperationCompleted == null)) {
                this.GetDiagnosisByPatientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDiagnosisByPatientOperationCompleted);
            }
            this.InvokeAsync("GetDiagnosisByPatient", new object[] {
                        patientID,
                        licenseID,
                        userID,
                        dbID}, this.GetDiagnosisByPatientOperationCompleted, userState);
        }
        
        private void OnGetDiagnosisByPatientOperationCompleted(object arg) {
            if ((this.GetDiagnosisByPatientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDiagnosisByPatientCompleted(this, new GetDiagnosisByPatientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetPatientLastPharmacy", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Patient GetPatientLastPharmacy(string patientID, string licenseID, string verifyFormulary, string loadOnlyPlanData, string userID, ConnectionStringPointer dbID) {
            object[] results = this.Invoke("GetPatientLastPharmacy", new object[] {
                        patientID,
                        licenseID,
                        verifyFormulary,
                        loadOnlyPlanData,
                        userID,
                        dbID});
            return ((Patient)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientLastPharmacyAsync(string patientID, string licenseID, string verifyFormulary, string loadOnlyPlanData, string userID, ConnectionStringPointer dbID) {
            this.GetPatientLastPharmacyAsync(patientID, licenseID, verifyFormulary, loadOnlyPlanData, userID, dbID, null);
        }
        
        /// <remarks/>
        public void GetPatientLastPharmacyAsync(string patientID, string licenseID, string verifyFormulary, string loadOnlyPlanData, string userID, ConnectionStringPointer dbID, object userState) {
            if ((this.GetPatientLastPharmacyOperationCompleted == null)) {
                this.GetPatientLastPharmacyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientLastPharmacyOperationCompleted);
            }
            this.InvokeAsync("GetPatientLastPharmacy", new object[] {
                        patientID,
                        licenseID,
                        verifyFormulary,
                        loadOnlyPlanData,
                        userID,
                        dbID}, this.GetPatientLastPharmacyOperationCompleted, userState);
        }
        
        private void OnGetPatientLastPharmacyOperationCompleted(object arg) {
            if ((this.GetPatientLastPharmacyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientLastPharmacyCompleted(this, new GetPatientLastPharmacyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetProviderFavorites", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProviderFavoritesResponse GetProviderFavorites(string providerID, ConnectionStringPointer dbID) {
            object[] results = this.Invoke("GetProviderFavorites", new object[] {
                        providerID,
                        dbID});
            return ((ProviderFavoritesResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetProviderFavoritesAsync(string providerID, ConnectionStringPointer dbID) {
            this.GetProviderFavoritesAsync(providerID, dbID, null);
        }
        
        /// <remarks/>
        public void GetProviderFavoritesAsync(string providerID, ConnectionStringPointer dbID, object userState) {
            if ((this.GetProviderFavoritesOperationCompleted == null)) {
                this.GetProviderFavoritesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProviderFavoritesOperationCompleted);
            }
            this.InvokeAsync("GetProviderFavorites", new object[] {
                        providerID,
                        dbID}, this.GetProviderFavoritesOperationCompleted, userState);
        }
        
        private void OnGetProviderFavoritesOperationCompleted(object arg) {
            if ((this.GetProviderFavoritesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProviderFavoritesCompleted(this, new GetProviderFavoritesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetProviderByLicense", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RxUser[] GetProviderByLicense(string licenseID, ConnectionStringPointer dbID) {
            object[] results = this.Invoke("GetProviderByLicense", new object[] {
                        licenseID,
                        dbID});
            return ((RxUser[])(results[0]));
        }
        
        /// <remarks/>
        public void GetProviderByLicenseAsync(string licenseID, ConnectionStringPointer dbID) {
            this.GetProviderByLicenseAsync(licenseID, dbID, null);
        }
        
        /// <remarks/>
        public void GetProviderByLicenseAsync(string licenseID, ConnectionStringPointer dbID, object userState) {
            if ((this.GetProviderByLicenseOperationCompleted == null)) {
                this.GetProviderByLicenseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProviderByLicenseOperationCompleted);
            }
            this.InvokeAsync("GetProviderByLicense", new object[] {
                        licenseID,
                        dbID}, this.GetProviderByLicenseOperationCompleted, userState);
        }
        
        private void OnGetProviderByLicenseOperationCompleted(object arg) {
            if ((this.GetProviderByLicenseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProviderByLicenseCompleted(this, new GetProviderByLicenseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetPatientDemographics", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Patient GetPatientDemographics(PatientGuidRequest patGuidRequest) {
            object[] results = this.Invoke("GetPatientDemographics", new object[] {
                        patGuidRequest});
            return ((Patient)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatientDemographicsAsync(PatientGuidRequest patGuidRequest) {
            this.GetPatientDemographicsAsync(patGuidRequest, null);
        }
        
        /// <remarks/>
        public void GetPatientDemographicsAsync(PatientGuidRequest patGuidRequest, object userState) {
            if ((this.GetPatientDemographicsOperationCompleted == null)) {
                this.GetPatientDemographicsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatientDemographicsOperationCompleted);
            }
            this.InvokeAsync("GetPatientDemographics", new object[] {
                        patGuidRequest}, this.GetPatientDemographicsOperationCompleted, userState);
        }
        
        private void OnGetPatientDemographicsOperationCompleted(object arg) {
            if ((this.GetPatientDemographicsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatientDemographicsCompleted(this, new GetPatientDemographicsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetLicenseByID", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public License GetLicenseByID(LicenseRequest licenseRequest) {
            object[] results = this.Invoke("GetLicenseByID", new object[] {
                        licenseRequest});
            return ((License)(results[0]));
        }
        
        /// <remarks/>
        public void GetLicenseByIDAsync(LicenseRequest licenseRequest) {
            this.GetLicenseByIDAsync(licenseRequest, null);
        }
        
        /// <remarks/>
        public void GetLicenseByIDAsync(LicenseRequest licenseRequest, object userState) {
            if ((this.GetLicenseByIDOperationCompleted == null)) {
                this.GetLicenseByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLicenseByIDOperationCompleted);
            }
            this.InvokeAsync("GetLicenseByID", new object[] {
                        licenseRequest}, this.GetLicenseByIDOperationCompleted, userState);
        }
        
        private void OnGetLicenseByIDOperationCompleted(object arg) {
            if ((this.GetLicenseByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLicenseByIDCompleted(this, new GetLicenseByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetLicenseCreationDate", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LicenseCreationDateResponse GetLicenseCreationDate(LicenseCreationDateRequest request) {
            object[] results = this.Invoke("GetLicenseCreationDate", new object[] {
                        request});
            return ((LicenseCreationDateResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetLicenseCreationDateAsync(LicenseCreationDateRequest request) {
            this.GetLicenseCreationDateAsync(request, null);
        }
        
        /// <remarks/>
        public void GetLicenseCreationDateAsync(LicenseCreationDateRequest request, object userState) {
            if ((this.GetLicenseCreationDateOperationCompleted == null)) {
                this.GetLicenseCreationDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLicenseCreationDateOperationCompleted);
            }
            this.InvokeAsync("GetLicenseCreationDate", new object[] {
                        request}, this.GetLicenseCreationDateOperationCompleted, userState);
        }
        
        private void OnGetLicenseCreationDateOperationCompleted(object arg) {
            if ((this.GetLicenseCreationDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLicenseCreationDateCompleted(this, new GetLicenseCreationDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetLicenseSiteByID", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LicenseSite GetLicenseSiteByID(LicenseSiteRequest licenseSiteRequest) {
            object[] results = this.Invoke("GetLicenseSiteByID", new object[] {
                        licenseSiteRequest});
            return ((LicenseSite)(results[0]));
        }
        
        /// <remarks/>
        public void GetLicenseSiteByIDAsync(LicenseSiteRequest licenseSiteRequest) {
            this.GetLicenseSiteByIDAsync(licenseSiteRequest, null);
        }
        
        /// <remarks/>
        public void GetLicenseSiteByIDAsync(LicenseSiteRequest licenseSiteRequest, object userState) {
            if ((this.GetLicenseSiteByIDOperationCompleted == null)) {
                this.GetLicenseSiteByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLicenseSiteByIDOperationCompleted);
            }
            this.InvokeAsync("GetLicenseSiteByID", new object[] {
                        licenseSiteRequest}, this.GetLicenseSiteByIDOperationCompleted, userState);
        }
        
        private void OnGetLicenseSiteByIDOperationCompleted(object arg) {
            if ((this.GetLicenseSiteByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLicenseSiteByIDCompleted(this, new GetLicenseSiteByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetAllSitesByLicenseID", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LicenseSite[] GetAllSitesByLicenseID(LicenseSiteRequest licenseSiteRequest) {
            object[] results = this.Invoke("GetAllSitesByLicenseID", new object[] {
                        licenseSiteRequest});
            return ((LicenseSite[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllSitesByLicenseIDAsync(LicenseSiteRequest licenseSiteRequest) {
            this.GetAllSitesByLicenseIDAsync(licenseSiteRequest, null);
        }
        
        /// <remarks/>
        public void GetAllSitesByLicenseIDAsync(LicenseSiteRequest licenseSiteRequest, object userState) {
            if ((this.GetAllSitesByLicenseIDOperationCompleted == null)) {
                this.GetAllSitesByLicenseIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllSitesByLicenseIDOperationCompleted);
            }
            this.InvokeAsync("GetAllSitesByLicenseID", new object[] {
                        licenseSiteRequest}, this.GetAllSitesByLicenseIDOperationCompleted, userState);
        }
        
        private void OnGetAllSitesByLicenseIDOperationCompleted(object arg) {
            if ((this.GetAllSitesByLicenseIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllSitesByLicenseIDCompleted(this, new GetAllSitesByLicenseIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetLicenseByPatientID", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public License GetLicenseByPatientID(PatientGuidRequest patGuidRequest) {
            object[] results = this.Invoke("GetLicenseByPatientID", new object[] {
                        patGuidRequest});
            return ((License)(results[0]));
        }
        
        /// <remarks/>
        public void GetLicenseByPatientIDAsync(PatientGuidRequest patGuidRequest) {
            this.GetLicenseByPatientIDAsync(patGuidRequest, null);
        }
        
        /// <remarks/>
        public void GetLicenseByPatientIDAsync(PatientGuidRequest patGuidRequest, object userState) {
            if ((this.GetLicenseByPatientIDOperationCompleted == null)) {
                this.GetLicenseByPatientIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLicenseByPatientIDOperationCompleted);
            }
            this.InvokeAsync("GetLicenseByPatientID", new object[] {
                        patGuidRequest}, this.GetLicenseByPatientIDOperationCompleted, userState);
        }
        
        private void OnGetLicenseByPatientIDOperationCompleted(object arg) {
            if ((this.GetLicenseByPatientIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLicenseByPatientIDCompleted(this, new GetLicenseByPatientIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetLicensePreferences", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Preference[] GetLicensePreferences(LicenseRequest licenseRequest) {
            object[] results = this.Invoke("GetLicensePreferences", new object[] {
                        licenseRequest});
            return ((Preference[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLicensePreferencesAsync(LicenseRequest licenseRequest) {
            this.GetLicensePreferencesAsync(licenseRequest, null);
        }
        
        /// <remarks/>
        public void GetLicensePreferencesAsync(LicenseRequest licenseRequest, object userState) {
            if ((this.GetLicensePreferencesOperationCompleted == null)) {
                this.GetLicensePreferencesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLicensePreferencesOperationCompleted);
            }
            this.InvokeAsync("GetLicensePreferences", new object[] {
                        licenseRequest}, this.GetLicensePreferencesOperationCompleted, userState);
        }
        
        private void OnGetLicensePreferencesOperationCompleted(object arg) {
            if ((this.GetLicensePreferencesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLicensePreferencesCompleted(this, new GetLicensePreferencesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/SaveLicensePreference", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LicensePreferenceSaveResponse SaveLicensePreference(LicensePreferenceSaveRequest licensePreferenceSaveRequest) {
            object[] results = this.Invoke("SaveLicensePreference", new object[] {
                        licensePreferenceSaveRequest});
            return ((LicensePreferenceSaveResponse)(results[0]));
        }
        
        /// <remarks/>
        public void SaveLicensePreferenceAsync(LicensePreferenceSaveRequest licensePreferenceSaveRequest) {
            this.SaveLicensePreferenceAsync(licensePreferenceSaveRequest, null);
        }
        
        /// <remarks/>
        public void SaveLicensePreferenceAsync(LicensePreferenceSaveRequest licensePreferenceSaveRequest, object userState) {
            if ((this.SaveLicensePreferenceOperationCompleted == null)) {
                this.SaveLicensePreferenceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveLicensePreferenceOperationCompleted);
            }
            this.InvokeAsync("SaveLicensePreference", new object[] {
                        licensePreferenceSaveRequest}, this.SaveLicensePreferenceOperationCompleted, userState);
        }
        
        private void OnSaveLicensePreferenceOperationCompleted(object arg) {
            if ((this.SaveLicensePreferenceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveLicensePreferenceCompleted(this, new SaveLicensePreferenceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/DURCheckSingleRxByDDI", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DURInformation DURCheckSingleRxByDDI(DURCheckSingleRxRequest request) {
            object[] results = this.Invoke("DURCheckSingleRxByDDI", new object[] {
                        request});
            return ((DURInformation)(results[0]));
        }
        
        /// <remarks/>
        public void DURCheckSingleRxByDDIAsync(DURCheckSingleRxRequest request) {
            this.DURCheckSingleRxByDDIAsync(request, null);
        }
        
        /// <remarks/>
        public void DURCheckSingleRxByDDIAsync(DURCheckSingleRxRequest request, object userState) {
            if ((this.DURCheckSingleRxByDDIOperationCompleted == null)) {
                this.DURCheckSingleRxByDDIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDURCheckSingleRxByDDIOperationCompleted);
            }
            this.InvokeAsync("DURCheckSingleRxByDDI", new object[] {
                        request}, this.DURCheckSingleRxByDDIOperationCompleted, userState);
        }
        
        private void OnDURCheckSingleRxByDDIOperationCompleted(object arg) {
            if ((this.DURCheckSingleRxByDDICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DURCheckSingleRxByDDICompleted(this, new DURCheckSingleRxByDDICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/DURCheckSingleRxByRxID", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DURInformation DURCheckSingleRxByRxID(DURCheckSingleRxRequest request) {
            object[] results = this.Invoke("DURCheckSingleRxByRxID", new object[] {
                        request});
            return ((DURInformation)(results[0]));
        }
        
        /// <remarks/>
        public void DURCheckSingleRxByRxIDAsync(DURCheckSingleRxRequest request) {
            this.DURCheckSingleRxByRxIDAsync(request, null);
        }
        
        /// <remarks/>
        public void DURCheckSingleRxByRxIDAsync(DURCheckSingleRxRequest request, object userState) {
            if ((this.DURCheckSingleRxByRxIDOperationCompleted == null)) {
                this.DURCheckSingleRxByRxIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDURCheckSingleRxByRxIDOperationCompleted);
            }
            this.InvokeAsync("DURCheckSingleRxByRxID", new object[] {
                        request}, this.DURCheckSingleRxByRxIDOperationCompleted, userState);
        }
        
        private void OnDURCheckSingleRxByRxIDOperationCompleted(object arg) {
            if ((this.DURCheckSingleRxByRxIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DURCheckSingleRxByRxIDCompleted(this, new DURCheckSingleRxByRxIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/SaveRxDUR", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SaveRxDUR(SaveRxDURRequest request) {
            this.Invoke("SaveRxDUR", new object[] {
                        request});
        }
        
        /// <remarks/>
        public void SaveRxDURAsync(SaveRxDURRequest request) {
            this.SaveRxDURAsync(request, null);
        }
        
        /// <remarks/>
        public void SaveRxDURAsync(SaveRxDURRequest request, object userState) {
            if ((this.SaveRxDUROperationCompleted == null)) {
                this.SaveRxDUROperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveRxDUROperationCompleted);
            }
            this.InvokeAsync("SaveRxDUR", new object[] {
                        request}, this.SaveRxDUROperationCompleted, userState);
        }
        
        private void OnSaveRxDUROperationCompleted(object arg) {
            if ((this.SaveRxDURCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveRxDURCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/SendRxToAssistant", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SendRxToAssistantResponse SendRxToAssistant(SendRxToAssistantRequest sendRxToAssistantRequest) {
            object[] results = this.Invoke("SendRxToAssistant", new object[] {
                        sendRxToAssistantRequest});
            return ((SendRxToAssistantResponse)(results[0]));
        }
        
        /// <remarks/>
        public void SendRxToAssistantAsync(SendRxToAssistantRequest sendRxToAssistantRequest) {
            this.SendRxToAssistantAsync(sendRxToAssistantRequest, null);
        }
        
        /// <remarks/>
        public void SendRxToAssistantAsync(SendRxToAssistantRequest sendRxToAssistantRequest, object userState) {
            if ((this.SendRxToAssistantOperationCompleted == null)) {
                this.SendRxToAssistantOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendRxToAssistantOperationCompleted);
            }
            this.InvokeAsync("SendRxToAssistant", new object[] {
                        sendRxToAssistantRequest}, this.SendRxToAssistantOperationCompleted, userState);
        }
        
        private void OnSendRxToAssistantOperationCompleted(object arg) {
            if ((this.SendRxToAssistantCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendRxToAssistantCompleted(this, new SendRxToAssistantCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/UpdateRxTask", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateRxTask(RxTaskRequest rxTaskRequest) {
            object[] results = this.Invoke("UpdateRxTask", new object[] {
                        rxTaskRequest});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateRxTaskAsync(RxTaskRequest rxTaskRequest) {
            this.UpdateRxTaskAsync(rxTaskRequest, null);
        }
        
        /// <remarks/>
        public void UpdateRxTaskAsync(RxTaskRequest rxTaskRequest, object userState) {
            if ((this.UpdateRxTaskOperationCompleted == null)) {
                this.UpdateRxTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateRxTaskOperationCompleted);
            }
            this.InvokeAsync("UpdateRxTask", new object[] {
                        rxTaskRequest}, this.UpdateRxTaskOperationCompleted, userState);
        }
        
        private void OnUpdateRxTaskOperationCompleted(object arg) {
            if ((this.UpdateRxTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateRxTaskCompleted(this, new UpdateRxTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/UpdatePrescriptionStatus", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdatePrescriptionStatus(RxRequest rxRequest) {
            this.Invoke("UpdatePrescriptionStatus", new object[] {
                        rxRequest});
        }
        
        /// <remarks/>
        public void UpdatePrescriptionStatusAsync(RxRequest rxRequest) {
            this.UpdatePrescriptionStatusAsync(rxRequest, null);
        }
        
        /// <remarks/>
        public void UpdatePrescriptionStatusAsync(RxRequest rxRequest, object userState) {
            if ((this.UpdatePrescriptionStatusOperationCompleted == null)) {
                this.UpdatePrescriptionStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePrescriptionStatusOperationCompleted);
            }
            this.InvokeAsync("UpdatePrescriptionStatus", new object[] {
                        rxRequest}, this.UpdatePrescriptionStatusOperationCompleted, userState);
        }
        
        private void OnUpdatePrescriptionStatusOperationCompleted(object arg) {
            if ((this.UpdatePrescriptionStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePrescriptionStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/UpdateProviderOfRecord", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateProviderOfRecord(UpdateProviderOfRecordRequest request) {
            this.Invoke("UpdateProviderOfRecord", new object[] {
                        request});
        }
        
        /// <remarks/>
        public void UpdateProviderOfRecordAsync(UpdateProviderOfRecordRequest request) {
            this.UpdateProviderOfRecordAsync(request, null);
        }
        
        /// <remarks/>
        public void UpdateProviderOfRecordAsync(UpdateProviderOfRecordRequest request, object userState) {
            if ((this.UpdateProviderOfRecordOperationCompleted == null)) {
                this.UpdateProviderOfRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateProviderOfRecordOperationCompleted);
            }
            this.InvokeAsync("UpdateProviderOfRecord", new object[] {
                        request}, this.UpdateProviderOfRecordOperationCompleted, userState);
        }
        
        private void OnUpdateProviderOfRecordOperationCompleted(object arg) {
            if ((this.UpdateProviderOfRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateProviderOfRecordCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/UpdatePrescriptionRxDetailStatus", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdatePrescriptionRxDetailStatus(RxRequest rxRequest) {
            this.Invoke("UpdatePrescriptionRxDetailStatus", new object[] {
                        rxRequest});
        }
        
        /// <remarks/>
        public void UpdatePrescriptionRxDetailStatusAsync(RxRequest rxRequest) {
            this.UpdatePrescriptionRxDetailStatusAsync(rxRequest, null);
        }
        
        /// <remarks/>
        public void UpdatePrescriptionRxDetailStatusAsync(RxRequest rxRequest, object userState) {
            if ((this.UpdatePrescriptionRxDetailStatusOperationCompleted == null)) {
                this.UpdatePrescriptionRxDetailStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePrescriptionRxDetailStatusOperationCompleted);
            }
            this.InvokeAsync("UpdatePrescriptionRxDetailStatus", new object[] {
                        rxRequest}, this.UpdatePrescriptionRxDetailStatusOperationCompleted, userState);
        }
        
        private void OnUpdatePrescriptionRxDetailStatusOperationCompleted(object arg) {
            if ((this.UpdatePrescriptionRxDetailStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePrescriptionRxDetailStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/UpdatePrescriptionPharmacyID", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdatePrescriptionPharmacyID(RxRequest rxRequest) {
            this.Invoke("UpdatePrescriptionPharmacyID", new object[] {
                        rxRequest});
        }
        
        /// <remarks/>
        public void UpdatePrescriptionPharmacyIDAsync(RxRequest rxRequest) {
            this.UpdatePrescriptionPharmacyIDAsync(rxRequest, null);
        }
        
        /// <remarks/>
        public void UpdatePrescriptionPharmacyIDAsync(RxRequest rxRequest, object userState) {
            if ((this.UpdatePrescriptionPharmacyIDOperationCompleted == null)) {
                this.UpdatePrescriptionPharmacyIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePrescriptionPharmacyIDOperationCompleted);
            }
            this.InvokeAsync("UpdatePrescriptionPharmacyID", new object[] {
                        rxRequest}, this.UpdatePrescriptionPharmacyIDOperationCompleted, userState);
        }
        
        private void OnUpdatePrescriptionPharmacyIDOperationCompleted(object arg) {
            if ((this.UpdatePrescriptionPharmacyIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePrescriptionPharmacyIDCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/CreateScriptMessage", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateScriptMessage(CreateScriptMessageRequest csmRequest) {
            object[] results = this.Invoke("CreateScriptMessage", new object[] {
                        csmRequest});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateScriptMessageAsync(CreateScriptMessageRequest csmRequest) {
            this.CreateScriptMessageAsync(csmRequest, null);
        }
        
        /// <remarks/>
        public void CreateScriptMessageAsync(CreateScriptMessageRequest csmRequest, object userState) {
            if ((this.CreateScriptMessageOperationCompleted == null)) {
                this.CreateScriptMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateScriptMessageOperationCompleted);
            }
            this.InvokeAsync("CreateScriptMessage", new object[] {
                        csmRequest}, this.CreateScriptMessageOperationCompleted, userState);
        }
        
        private void OnCreateScriptMessageOperationCompleted(object arg) {
            if ((this.CreateScriptMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateScriptMessageCompleted(this, new CreateScriptMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/DeleteScriptMessages", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteScriptMessages(DeleteScriptMessagesRequest deleteScriptMessagesReq) {
            this.Invoke("DeleteScriptMessages", new object[] {
                        deleteScriptMessagesReq});
        }
        
        /// <remarks/>
        public void DeleteScriptMessagesAsync(DeleteScriptMessagesRequest deleteScriptMessagesReq) {
            this.DeleteScriptMessagesAsync(deleteScriptMessagesReq, null);
        }
        
        /// <remarks/>
        public void DeleteScriptMessagesAsync(DeleteScriptMessagesRequest deleteScriptMessagesReq, object userState) {
            if ((this.DeleteScriptMessagesOperationCompleted == null)) {
                this.DeleteScriptMessagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteScriptMessagesOperationCompleted);
            }
            this.InvokeAsync("DeleteScriptMessages", new object[] {
                        deleteScriptMessagesReq}, this.DeleteScriptMessagesOperationCompleted, userState);
        }
        
        private void OnDeleteScriptMessagesOperationCompleted(object arg) {
            if ((this.DeleteScriptMessagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteScriptMessagesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/CreateVerifyMessage", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CreateVerifyMessageResponse CreateVerifyMessage(CreateVerifyMessageRequest req) {
            object[] results = this.Invoke("CreateVerifyMessage", new object[] {
                        req});
            return ((CreateVerifyMessageResponse)(results[0]));
        }
        
        /// <remarks/>
        public void CreateVerifyMessageAsync(CreateVerifyMessageRequest req) {
            this.CreateVerifyMessageAsync(req, null);
        }
        
        /// <remarks/>
        public void CreateVerifyMessageAsync(CreateVerifyMessageRequest req, object userState) {
            if ((this.CreateVerifyMessageOperationCompleted == null)) {
                this.CreateVerifyMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateVerifyMessageOperationCompleted);
            }
            this.InvokeAsync("CreateVerifyMessage", new object[] {
                        req}, this.CreateVerifyMessageOperationCompleted, userState);
        }
        
        private void OnCreateVerifyMessageOperationCompleted(object arg) {
            if ((this.CreateVerifyMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateVerifyMessageCompleted(this, new CreateVerifyMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/CreateErrorMessage", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CreateErrorMessageResponse CreateErrorMessage(CreateErrorMessageRequest req) {
            object[] results = this.Invoke("CreateErrorMessage", new object[] {
                        req});
            return ((CreateErrorMessageResponse)(results[0]));
        }
        
        /// <remarks/>
        public void CreateErrorMessageAsync(CreateErrorMessageRequest req) {
            this.CreateErrorMessageAsync(req, null);
        }
        
        /// <remarks/>
        public void CreateErrorMessageAsync(CreateErrorMessageRequest req, object userState) {
            if ((this.CreateErrorMessageOperationCompleted == null)) {
                this.CreateErrorMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateErrorMessageOperationCompleted);
            }
            this.InvokeAsync("CreateErrorMessage", new object[] {
                        req}, this.CreateErrorMessageOperationCompleted, userState);
        }
        
        private void OnCreateErrorMessageOperationCompleted(object arg) {
            if ((this.CreateErrorMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateErrorMessageCompleted(this, new CreateErrorMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/CreateDUREVTScriptMessage", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateDUREVTScriptMessage(CreateScriptMessageRequest csmRequest) {
            object[] results = this.Invoke("CreateDUREVTScriptMessage", new object[] {
                        csmRequest});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateDUREVTScriptMessageAsync(CreateScriptMessageRequest csmRequest) {
            this.CreateDUREVTScriptMessageAsync(csmRequest, null);
        }
        
        /// <remarks/>
        public void CreateDUREVTScriptMessageAsync(CreateScriptMessageRequest csmRequest, object userState) {
            if ((this.CreateDUREVTScriptMessageOperationCompleted == null)) {
                this.CreateDUREVTScriptMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateDUREVTScriptMessageOperationCompleted);
            }
            this.InvokeAsync("CreateDUREVTScriptMessage", new object[] {
                        csmRequest}, this.CreateDUREVTScriptMessageOperationCompleted, userState);
        }
        
        private void OnCreateDUREVTScriptMessageOperationCompleted(object arg) {
            if ((this.CreateDUREVTScriptMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateDUREVTScriptMessageCompleted(this, new CreateDUREVTScriptMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/SendScriptMessage", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendScriptMessage(ScriptMessageRequest smRequest) {
            this.Invoke("SendScriptMessage", new object[] {
                        smRequest});
        }
        
        /// <remarks/>
        public void SendScriptMessageAsync(ScriptMessageRequest smRequest) {
            this.SendScriptMessageAsync(smRequest, null);
        }
        
        /// <remarks/>
        public void SendScriptMessageAsync(ScriptMessageRequest smRequest, object userState) {
            if ((this.SendScriptMessageOperationCompleted == null)) {
                this.SendScriptMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendScriptMessageOperationCompleted);
            }
            this.InvokeAsync("SendScriptMessage", new object[] {
                        smRequest}, this.SendScriptMessageOperationCompleted, userState);
        }
        
        private void OnSendScriptMessageOperationCompleted(object arg) {
            if ((this.SendScriptMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendScriptMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/SendOutboundInfoScriptMessage", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendOutboundInfoScriptMessage(OutboundInfoScriptMessageRequest smRequest) {
            this.Invoke("SendOutboundInfoScriptMessage", new object[] {
                        smRequest});
        }
        
        /// <remarks/>
        public void SendOutboundInfoScriptMessageAsync(OutboundInfoScriptMessageRequest smRequest) {
            this.SendOutboundInfoScriptMessageAsync(smRequest, null);
        }
        
        /// <remarks/>
        public void SendOutboundInfoScriptMessageAsync(OutboundInfoScriptMessageRequest smRequest, object userState) {
            if ((this.SendOutboundInfoScriptMessageOperationCompleted == null)) {
                this.SendOutboundInfoScriptMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendOutboundInfoScriptMessageOperationCompleted);
            }
            this.InvokeAsync("SendOutboundInfoScriptMessage", new object[] {
                        smRequest}, this.SendOutboundInfoScriptMessageOperationCompleted, userState);
        }
        
        private void OnSendOutboundInfoScriptMessageOperationCompleted(object arg) {
            if ((this.SendOutboundInfoScriptMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendOutboundInfoScriptMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/ApproveScriptMessage", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ApproveScriptMessage(ApproveScriptMessageRequest approveScriptMessageRequest) {
            object[] results = this.Invoke("ApproveScriptMessage", new object[] {
                        approveScriptMessageRequest});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ApproveScriptMessageAsync(ApproveScriptMessageRequest approveScriptMessageRequest) {
            this.ApproveScriptMessageAsync(approveScriptMessageRequest, null);
        }
        
        /// <remarks/>
        public void ApproveScriptMessageAsync(ApproveScriptMessageRequest approveScriptMessageRequest, object userState) {
            if ((this.ApproveScriptMessageOperationCompleted == null)) {
                this.ApproveScriptMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApproveScriptMessageOperationCompleted);
            }
            this.InvokeAsync("ApproveScriptMessage", new object[] {
                        approveScriptMessageRequest}, this.ApproveScriptMessageOperationCompleted, userState);
        }
        
        private void OnApproveScriptMessageOperationCompleted(object arg) {
            if ((this.ApproveScriptMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApproveScriptMessageCompleted(this, new ApproveScriptMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/RejectScriptMessage", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RejectScriptMessageResponse RejectScriptMessage(RejectScriptMessageRequest rejectScriptMessageRequest) {
            object[] results = this.Invoke("RejectScriptMessage", new object[] {
                        rejectScriptMessageRequest});
            return ((RejectScriptMessageResponse)(results[0]));
        }
        
        /// <remarks/>
        public void RejectScriptMessageAsync(RejectScriptMessageRequest rejectScriptMessageRequest) {
            this.RejectScriptMessageAsync(rejectScriptMessageRequest, null);
        }
        
        /// <remarks/>
        public void RejectScriptMessageAsync(RejectScriptMessageRequest rejectScriptMessageRequest, object userState) {
            if ((this.RejectScriptMessageOperationCompleted == null)) {
                this.RejectScriptMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRejectScriptMessageOperationCompleted);
            }
            this.InvokeAsync("RejectScriptMessage", new object[] {
                        rejectScriptMessageRequest}, this.RejectScriptMessageOperationCompleted, userState);
        }
        
        private void OnRejectScriptMessageOperationCompleted(object arg) {
            if ((this.RejectScriptMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RejectScriptMessageCompleted(this, new RejectScriptMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetAuditInfoByUserName", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AuditInfo GetAuditInfoByUserName(ePrescribeSvcRequest epsRequest) {
            object[] results = this.Invoke("GetAuditInfoByUserName", new object[] {
                        epsRequest});
            return ((AuditInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetAuditInfoByUserNameAsync(ePrescribeSvcRequest epsRequest) {
            this.GetAuditInfoByUserNameAsync(epsRequest, null);
        }
        
        /// <remarks/>
        public void GetAuditInfoByUserNameAsync(ePrescribeSvcRequest epsRequest, object userState) {
            if ((this.GetAuditInfoByUserNameOperationCompleted == null)) {
                this.GetAuditInfoByUserNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAuditInfoByUserNameOperationCompleted);
            }
            this.InvokeAsync("GetAuditInfoByUserName", new object[] {
                        epsRequest}, this.GetAuditInfoByUserNameOperationCompleted, userState);
        }
        
        private void OnGetAuditInfoByUserNameOperationCompleted(object arg) {
            if ((this.GetAuditInfoByUserNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAuditInfoByUserNameCompleted(this, new GetAuditInfoByUserNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/PrescriptionUpdateCreationType", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PrescriptionUpdateCreationTypeResponse PrescriptionUpdateCreationType(PrescriptionUpdateCreationTypeRequest prescriptionUpdateCreationTypeRequest) {
            object[] results = this.Invoke("PrescriptionUpdateCreationType", new object[] {
                        prescriptionUpdateCreationTypeRequest});
            return ((PrescriptionUpdateCreationTypeResponse)(results[0]));
        }
        
        /// <remarks/>
        public void PrescriptionUpdateCreationTypeAsync(PrescriptionUpdateCreationTypeRequest prescriptionUpdateCreationTypeRequest) {
            this.PrescriptionUpdateCreationTypeAsync(prescriptionUpdateCreationTypeRequest, null);
        }
        
        /// <remarks/>
        public void PrescriptionUpdateCreationTypeAsync(PrescriptionUpdateCreationTypeRequest prescriptionUpdateCreationTypeRequest, object userState) {
            if ((this.PrescriptionUpdateCreationTypeOperationCompleted == null)) {
                this.PrescriptionUpdateCreationTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrescriptionUpdateCreationTypeOperationCompleted);
            }
            this.InvokeAsync("PrescriptionUpdateCreationType", new object[] {
                        prescriptionUpdateCreationTypeRequest}, this.PrescriptionUpdateCreationTypeOperationCompleted, userState);
        }
        
        private void OnPrescriptionUpdateCreationTypeOperationCompleted(object arg) {
            if ((this.PrescriptionUpdateCreationTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrescriptionUpdateCreationTypeCompleted(this, new PrescriptionUpdateCreationTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetNewUniqueUserName", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetNewUniqueUserName(GetNewUniqueUserNameRequest getNewUniqueUserNameRequest) {
            object[] results = this.Invoke("GetNewUniqueUserName", new object[] {
                        getNewUniqueUserNameRequest});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetNewUniqueUserNameAsync(GetNewUniqueUserNameRequest getNewUniqueUserNameRequest) {
            this.GetNewUniqueUserNameAsync(getNewUniqueUserNameRequest, null);
        }
        
        /// <remarks/>
        public void GetNewUniqueUserNameAsync(GetNewUniqueUserNameRequest getNewUniqueUserNameRequest, object userState) {
            if ((this.GetNewUniqueUserNameOperationCompleted == null)) {
                this.GetNewUniqueUserNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNewUniqueUserNameOperationCompleted);
            }
            this.InvokeAsync("GetNewUniqueUserName", new object[] {
                        getNewUniqueUserNameRequest}, this.GetNewUniqueUserNameOperationCompleted, userState);
        }
        
        private void OnGetNewUniqueUserNameOperationCompleted(object arg) {
            if ((this.GetNewUniqueUserNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNewUniqueUserNameCompleted(this, new GetNewUniqueUserNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetUserInfoByUAISessionToken", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UAISecurityTokenResponse GetUserInfoByUAISessionToken(UAISecurityTokenRequest tokenRequest) {
            object[] results = this.Invoke("GetUserInfoByUAISessionToken", new object[] {
                        tokenRequest});
            return ((UAISecurityTokenResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserInfoByUAISessionTokenAsync(UAISecurityTokenRequest tokenRequest) {
            this.GetUserInfoByUAISessionTokenAsync(tokenRequest, null);
        }
        
        /// <remarks/>
        public void GetUserInfoByUAISessionTokenAsync(UAISecurityTokenRequest tokenRequest, object userState) {
            if ((this.GetUserInfoByUAISessionTokenOperationCompleted == null)) {
                this.GetUserInfoByUAISessionTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserInfoByUAISessionTokenOperationCompleted);
            }
            this.InvokeAsync("GetUserInfoByUAISessionToken", new object[] {
                        tokenRequest}, this.GetUserInfoByUAISessionTokenOperationCompleted, userState);
        }
        
        private void OnGetUserInfoByUAISessionTokenOperationCompleted(object arg) {
            if ((this.GetUserInfoByUAISessionTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserInfoByUAISessionTokenCompleted(this, new GetUserInfoByUAISessionTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetUserInfoByMobileServiceSessionToken", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MobileServiceSecurityTokenResponse GetUserInfoByMobileServiceSessionToken(MobileServiceSecurityTokenRequest tokenRequest) {
            object[] results = this.Invoke("GetUserInfoByMobileServiceSessionToken", new object[] {
                        tokenRequest});
            return ((MobileServiceSecurityTokenResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserInfoByMobileServiceSessionTokenAsync(MobileServiceSecurityTokenRequest tokenRequest) {
            this.GetUserInfoByMobileServiceSessionTokenAsync(tokenRequest, null);
        }
        
        /// <remarks/>
        public void GetUserInfoByMobileServiceSessionTokenAsync(MobileServiceSecurityTokenRequest tokenRequest, object userState) {
            if ((this.GetUserInfoByMobileServiceSessionTokenOperationCompleted == null)) {
                this.GetUserInfoByMobileServiceSessionTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserInfoByMobileServiceSessionTokenOperationCompleted);
            }
            this.InvokeAsync("GetUserInfoByMobileServiceSessionToken", new object[] {
                        tokenRequest}, this.GetUserInfoByMobileServiceSessionTokenOperationCompleted, userState);
        }
        
        private void OnGetUserInfoByMobileServiceSessionTokenOperationCompleted(object arg) {
            if ((this.GetUserInfoByMobileServiceSessionTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserInfoByMobileServiceSessionTokenCompleted(this, new GetUserInfoByMobileServiceSessionTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/UserNameExists", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UserNameExists(string userName) {
            object[] results = this.Invoke("UserNameExists", new object[] {
                        userName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UserNameExistsAsync(string userName) {
            this.UserNameExistsAsync(userName, null);
        }
        
        /// <remarks/>
        public void UserNameExistsAsync(string userName, object userState) {
            if ((this.UserNameExistsOperationCompleted == null)) {
                this.UserNameExistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserNameExistsOperationCompleted);
            }
            this.InvokeAsync("UserNameExists", new object[] {
                        userName}, this.UserNameExistsOperationCompleted, userState);
        }
        
        private void OnUserNameExistsOperationCompleted(object arg) {
            if ((this.UserNameExistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserNameExistsCompleted(this, new UserNameExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/SearchUsersInAllDatabases", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SearchUsersResponse SearchUsersInAllDatabases(SearchUsersRequest searchUsersRequest) {
            object[] results = this.Invoke("SearchUsersInAllDatabases", new object[] {
                        searchUsersRequest});
            return ((SearchUsersResponse)(results[0]));
        }
        
        /// <remarks/>
        public void SearchUsersInAllDatabasesAsync(SearchUsersRequest searchUsersRequest) {
            this.SearchUsersInAllDatabasesAsync(searchUsersRequest, null);
        }
        
        /// <remarks/>
        public void SearchUsersInAllDatabasesAsync(SearchUsersRequest searchUsersRequest, object userState) {
            if ((this.SearchUsersInAllDatabasesOperationCompleted == null)) {
                this.SearchUsersInAllDatabasesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchUsersInAllDatabasesOperationCompleted);
            }
            this.InvokeAsync("SearchUsersInAllDatabases", new object[] {
                        searchUsersRequest}, this.SearchUsersInAllDatabasesOperationCompleted, userState);
        }
        
        private void OnSearchUsersInAllDatabasesOperationCompleted(object arg) {
            if ((this.SearchUsersInAllDatabasesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchUsersInAllDatabasesCompleted(this, new SearchUsersInAllDatabasesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/SearchUsersInShield", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SearchUsersResponse SearchUsersInShield(SearchUsersRequest searchUsersRequest) {
            object[] results = this.Invoke("SearchUsersInShield", new object[] {
                        searchUsersRequest});
            return ((SearchUsersResponse)(results[0]));
        }
        
        /// <remarks/>
        public void SearchUsersInShieldAsync(SearchUsersRequest searchUsersRequest) {
            this.SearchUsersInShieldAsync(searchUsersRequest, null);
        }
        
        /// <remarks/>
        public void SearchUsersInShieldAsync(SearchUsersRequest searchUsersRequest, object userState) {
            if ((this.SearchUsersInShieldOperationCompleted == null)) {
                this.SearchUsersInShieldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchUsersInShieldOperationCompleted);
            }
            this.InvokeAsync("SearchUsersInShield", new object[] {
                        searchUsersRequest}, this.SearchUsersInShieldOperationCompleted, userState);
        }
        
        private void OnSearchUsersInShieldOperationCompleted(object arg) {
            if ((this.SearchUsersInShieldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchUsersInShieldCompleted(this, new SearchUsersInShieldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetUser", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetUserResponse GetUser(GetUserRequest getUserRequest) {
            object[] results = this.Invoke("GetUser", new object[] {
                        getUserRequest});
            return ((GetUserResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserAsync(GetUserRequest getUserRequest) {
            this.GetUserAsync(getUserRequest, null);
        }
        
        /// <remarks/>
        public void GetUserAsync(GetUserRequest getUserRequest, object userState) {
            if ((this.GetUserOperationCompleted == null)) {
                this.GetUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserOperationCompleted);
            }
            this.InvokeAsync("GetUser", new object[] {
                        getUserRequest}, this.GetUserOperationCompleted, userState);
        }
        
        private void OnGetUserOperationCompleted(object arg) {
            if ((this.GetUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserCompleted(this, new GetUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetUserBasic", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetUserResponse GetUserBasic(GetUserRequest getUserRequest) {
            object[] results = this.Invoke("GetUserBasic", new object[] {
                        getUserRequest});
            return ((GetUserResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserBasicAsync(GetUserRequest getUserRequest) {
            this.GetUserBasicAsync(getUserRequest, null);
        }
        
        /// <remarks/>
        public void GetUserBasicAsync(GetUserRequest getUserRequest, object userState) {
            if ((this.GetUserBasicOperationCompleted == null)) {
                this.GetUserBasicOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserBasicOperationCompleted);
            }
            this.InvokeAsync("GetUserBasic", new object[] {
                        getUserRequest}, this.GetUserBasicOperationCompleted, userState);
        }
        
        private void OnGetUserBasicOperationCompleted(object arg) {
            if ((this.GetUserBasicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserBasicCompleted(this, new GetUserBasicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/DenyTaskRx", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DenyTaskRx(RxRequest rxRequest) {
            this.Invoke("DenyTaskRx", new object[] {
                        rxRequest});
        }
        
        /// <remarks/>
        public void DenyTaskRxAsync(RxRequest rxRequest) {
            this.DenyTaskRxAsync(rxRequest, null);
        }
        
        /// <remarks/>
        public void DenyTaskRxAsync(RxRequest rxRequest, object userState) {
            if ((this.DenyTaskRxOperationCompleted == null)) {
                this.DenyTaskRxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDenyTaskRxOperationCompleted);
            }
            this.InvokeAsync("DenyTaskRx", new object[] {
                        rxRequest}, this.DenyTaskRxOperationCompleted, userState);
        }
        
        private void OnDenyTaskRxOperationCompleted(object arg) {
            if ((this.DenyTaskRxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DenyTaskRxCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetEULA", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetEULA() {
            object[] results = this.Invoke("GetEULA", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetEULAAsync() {
            this.GetEULAAsync(null);
        }
        
        /// <remarks/>
        public void GetEULAAsync(object userState) {
            if ((this.GetEULAOperationCompleted == null)) {
                this.GetEULAOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEULAOperationCompleted);
            }
            this.InvokeAsync("GetEULA", new object[0], this.GetEULAOperationCompleted, userState);
        }
        
        private void OnGetEULAOperationCompleted(object arg) {
            if ((this.GetEULACompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEULACompleted(this, new GetEULACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetAdPrivacyPolicy", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAdPrivacyPolicy() {
            object[] results = this.Invoke("GetAdPrivacyPolicy", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAdPrivacyPolicyAsync() {
            this.GetAdPrivacyPolicyAsync(null);
        }
        
        /// <remarks/>
        public void GetAdPrivacyPolicyAsync(object userState) {
            if ((this.GetAdPrivacyPolicyOperationCompleted == null)) {
                this.GetAdPrivacyPolicyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAdPrivacyPolicyOperationCompleted);
            }
            this.InvokeAsync("GetAdPrivacyPolicy", new object[0], this.GetAdPrivacyPolicyOperationCompleted, userState);
        }
        
        private void OnGetAdPrivacyPolicyOperationCompleted(object arg) {
            if ((this.GetAdPrivacyPolicyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAdPrivacyPolicyCompleted(this, new GetAdPrivacyPolicyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/EULARecentlyUpdated", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool EULARecentlyUpdated() {
            object[] results = this.Invoke("EULARecentlyUpdated", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void EULARecentlyUpdatedAsync() {
            this.EULARecentlyUpdatedAsync(null);
        }
        
        /// <remarks/>
        public void EULARecentlyUpdatedAsync(object userState) {
            if ((this.EULARecentlyUpdatedOperationCompleted == null)) {
                this.EULARecentlyUpdatedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEULARecentlyUpdatedOperationCompleted);
            }
            this.InvokeAsync("EULARecentlyUpdated", new object[0], this.EULARecentlyUpdatedOperationCompleted, userState);
        }
        
        private void OnEULARecentlyUpdatedOperationCompleted(object arg) {
            if ((this.EULARecentlyUpdatedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EULARecentlyUpdatedCompleted(this, new EULARecentlyUpdatedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/AddMedToScriptPad", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Rx[] AddMedToScriptPad(PrescriptionRequest scriptRequest) {
            object[] results = this.Invoke("AddMedToScriptPad", new object[] {
                        scriptRequest});
            return ((Rx[])(results[0]));
        }
        
        /// <remarks/>
        public void AddMedToScriptPadAsync(PrescriptionRequest scriptRequest) {
            this.AddMedToScriptPadAsync(scriptRequest, null);
        }
        
        /// <remarks/>
        public void AddMedToScriptPadAsync(PrescriptionRequest scriptRequest, object userState) {
            if ((this.AddMedToScriptPadOperationCompleted == null)) {
                this.AddMedToScriptPadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddMedToScriptPadOperationCompleted);
            }
            this.InvokeAsync("AddMedToScriptPad", new object[] {
                        scriptRequest}, this.AddMedToScriptPadOperationCompleted, userState);
        }
        
        private void OnAddMedToScriptPadOperationCompleted(object arg) {
            if ((this.AddMedToScriptPadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddMedToScriptPadCompleted(this, new AddMedToScriptPadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/SaveCSDetails", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SaveCSDetails(SaveCSDetailRequest csRequest) {
            this.Invoke("SaveCSDetails", new object[] {
                        csRequest});
        }
        
        /// <remarks/>
        public void SaveCSDetailsAsync(SaveCSDetailRequest csRequest) {
            this.SaveCSDetailsAsync(csRequest, null);
        }
        
        /// <remarks/>
        public void SaveCSDetailsAsync(SaveCSDetailRequest csRequest, object userState) {
            if ((this.SaveCSDetailsOperationCompleted == null)) {
                this.SaveCSDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveCSDetailsOperationCompleted);
            }
            this.InvokeAsync("SaveCSDetails", new object[] {
                        csRequest}, this.SaveCSDetailsOperationCompleted, userState);
        }
        
        private void OnSaveCSDetailsOperationCompleted(object arg) {
            if ((this.SaveCSDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveCSDetailsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/EditScriptPad", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Rx[] EditScriptPad(PrescriptionRequest scriptRequest) {
            object[] results = this.Invoke("EditScriptPad", new object[] {
                        scriptRequest});
            return ((Rx[])(results[0]));
        }
        
        /// <remarks/>
        public void EditScriptPadAsync(PrescriptionRequest scriptRequest) {
            this.EditScriptPadAsync(scriptRequest, null);
        }
        
        /// <remarks/>
        public void EditScriptPadAsync(PrescriptionRequest scriptRequest, object userState) {
            if ((this.EditScriptPadOperationCompleted == null)) {
                this.EditScriptPadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEditScriptPadOperationCompleted);
            }
            this.InvokeAsync("EditScriptPad", new object[] {
                        scriptRequest}, this.EditScriptPadOperationCompleted, userState);
        }
        
        private void OnEditScriptPadOperationCompleted(object arg) {
            if ((this.EditScriptPadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EditScriptPadCompleted(this, new EditScriptPadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/DeleteFromScriptPad", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Rx[] DeleteFromScriptPad(PrescriptionRequest scriptRequest) {
            object[] results = this.Invoke("DeleteFromScriptPad", new object[] {
                        scriptRequest});
            return ((Rx[])(results[0]));
        }
        
        /// <remarks/>
        public void DeleteFromScriptPadAsync(PrescriptionRequest scriptRequest) {
            this.DeleteFromScriptPadAsync(scriptRequest, null);
        }
        
        /// <remarks/>
        public void DeleteFromScriptPadAsync(PrescriptionRequest scriptRequest, object userState) {
            if ((this.DeleteFromScriptPadOperationCompleted == null)) {
                this.DeleteFromScriptPadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFromScriptPadOperationCompleted);
            }
            this.InvokeAsync("DeleteFromScriptPad", new object[] {
                        scriptRequest}, this.DeleteFromScriptPadOperationCompleted, userState);
        }
        
        private void OnDeleteFromScriptPadOperationCompleted(object arg) {
            if ((this.DeleteFromScriptPadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFromScriptPadCompleted(this, new DeleteFromScriptPadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/InsertRxHeaderCanceled", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertRxHeaderCanceled(InsertRxHeaderCanceledRequest request) {
            this.Invoke("InsertRxHeaderCanceled", new object[] {
                        request});
        }
        
        /// <remarks/>
        public void InsertRxHeaderCanceledAsync(InsertRxHeaderCanceledRequest request) {
            this.InsertRxHeaderCanceledAsync(request, null);
        }
        
        /// <remarks/>
        public void InsertRxHeaderCanceledAsync(InsertRxHeaderCanceledRequest request, object userState) {
            if ((this.InsertRxHeaderCanceledOperationCompleted == null)) {
                this.InsertRxHeaderCanceledOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertRxHeaderCanceledOperationCompleted);
            }
            this.InvokeAsync("InsertRxHeaderCanceled", new object[] {
                        request}, this.InsertRxHeaderCanceledOperationCompleted, userState);
        }
        
        private void OnInsertRxHeaderCanceledOperationCompleted(object arg) {
            if ((this.InsertRxHeaderCanceledCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertRxHeaderCanceledCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/MarkAsFulfilled", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void MarkAsFulfilled(RxRequest rxRequest) {
            this.Invoke("MarkAsFulfilled", new object[] {
                        rxRequest});
        }
        
        /// <remarks/>
        public void MarkAsFulfilledAsync(RxRequest rxRequest) {
            this.MarkAsFulfilledAsync(rxRequest, null);
        }
        
        /// <remarks/>
        public void MarkAsFulfilledAsync(RxRequest rxRequest, object userState) {
            if ((this.MarkAsFulfilledOperationCompleted == null)) {
                this.MarkAsFulfilledOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMarkAsFulfilledOperationCompleted);
            }
            this.InvokeAsync("MarkAsFulfilled", new object[] {
                        rxRequest}, this.MarkAsFulfilledOperationCompleted, userState);
        }
        
        private void OnMarkAsFulfilledOperationCompleted(object arg) {
            if ((this.MarkAsFulfilledCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MarkAsFulfilledCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/LoadRxLiteByID", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Rx LoadRxLiteByID(string rxID, ConnectionStringPointer dbID) {
            object[] results = this.Invoke("LoadRxLiteByID", new object[] {
                        rxID,
                        dbID});
            return ((Rx)(results[0]));
        }
        
        /// <remarks/>
        public void LoadRxLiteByIDAsync(string rxID, ConnectionStringPointer dbID) {
            this.LoadRxLiteByIDAsync(rxID, dbID, null);
        }
        
        /// <remarks/>
        public void LoadRxLiteByIDAsync(string rxID, ConnectionStringPointer dbID, object userState) {
            if ((this.LoadRxLiteByIDOperationCompleted == null)) {
                this.LoadRxLiteByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadRxLiteByIDOperationCompleted);
            }
            this.InvokeAsync("LoadRxLiteByID", new object[] {
                        rxID,
                        dbID}, this.LoadRxLiteByIDOperationCompleted, userState);
        }
        
        private void OnLoadRxLiteByIDOperationCompleted(object arg) {
            if ((this.LoadRxLiteByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadRxLiteByIDCompleted(this, new LoadRxLiteByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/SetAsSelfReported", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetAsSelfReported(RxRequest rxRequest) {
            this.Invoke("SetAsSelfReported", new object[] {
                        rxRequest});
        }
        
        /// <remarks/>
        public void SetAsSelfReportedAsync(RxRequest rxRequest) {
            this.SetAsSelfReportedAsync(rxRequest, null);
        }
        
        /// <remarks/>
        public void SetAsSelfReportedAsync(RxRequest rxRequest, object userState) {
            if ((this.SetAsSelfReportedOperationCompleted == null)) {
                this.SetAsSelfReportedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetAsSelfReportedOperationCompleted);
            }
            this.InvokeAsync("SetAsSelfReported", new object[] {
                        rxRequest}, this.SetAsSelfReportedOperationCompleted, userState);
        }
        
        private void OnSetAsSelfReportedOperationCompleted(object arg) {
            if ((this.SetAsSelfReportedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetAsSelfReportedCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/GetScriptPad", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Rx[] GetScriptPad(PrescriptionRequest scriptRequest) {
            object[] results = this.Invoke("GetScriptPad", new object[] {
                        scriptRequest});
            return ((Rx[])(results[0]));
        }
        
        /// <remarks/>
        public void GetScriptPadAsync(PrescriptionRequest scriptRequest) {
            this.GetScriptPadAsync(scriptRequest, null);
        }
        
        /// <remarks/>
        public void GetScriptPadAsync(PrescriptionRequest scriptRequest, object userState) {
            if ((this.GetScriptPadOperationCompleted == null)) {
                this.GetScriptPadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetScriptPadOperationCompleted);
            }
            this.InvokeAsync("GetScriptPad", new object[] {
                        scriptRequest}, this.GetScriptPadOperationCompleted, userState);
        }
        
        private void OnGetScriptPadOperationCompleted(object arg) {
            if ((this.GetScriptPadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetScriptPadCompleted(this, new GetScriptPadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/DurScriptPadRx", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DURScriptPad DurScriptPadRx(DurScriptPadRequest request) {
            object[] results = this.Invoke("DurScriptPadRx", new object[] {
                        request});
            return ((DURScriptPad)(results[0]));
        }
        
        /// <remarks/>
        public void DurScriptPadRxAsync(DurScriptPadRequest request) {
            this.DurScriptPadRxAsync(request, null);
        }
        
        /// <remarks/>
        public void DurScriptPadRxAsync(DurScriptPadRequest request, object userState) {
            if ((this.DurScriptPadRxOperationCompleted == null)) {
                this.DurScriptPadRxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDurScriptPadRxOperationCompleted);
            }
            this.InvokeAsync("DurScriptPadRx", new object[] {
                        request}, this.DurScriptPadRxOperationCompleted, userState);
        }
        
        private void OnDurScriptPadRxOperationCompleted(object arg) {
            if ((this.DurScriptPadRxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DurScriptPadRxCompleted(this, new DurScriptPadRxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/SavePatient", RequestNamespace="https://eprescribe.allscripts.com/", ResponseNamespace="https://eprescribe.allscripts.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SavePatient(SavePatientRequest spr) {
            object[] results = this.Invoke("SavePatient", new object[] {
                        spr});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SavePatientAsync(SavePatientRequest spr) {
            this.SavePatientAsync(spr, null);
        }
        
        /// <remarks/>
        public void SavePatientAsync(SavePatientRequest spr, object userState) {
            if ((this.SavePatientOperationCompleted == null)) {
                this.SavePatientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSavePatientOperationCompleted);
            }
            this.InvokeAsync("SavePatient", new object[] {
                        spr}, this.SavePatientOperationCompleted, userState);
        }
        
        private void OnSavePatientOperationCompleted(object arg) {
            if ((this.SavePatientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SavePatientCompleted(this, new SavePatientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetPDMPSamlTokenRequest : ePrescribeSvcRequest {
        
        private string identityTokenField;
        
        private string shieldTenantIdField;
        
        /// <remarks/>
        public string IdentityToken {
            get {
                return this.identityTokenField;
            }
            set {
                this.identityTokenField = value;
            }
        }
        
        /// <remarks/>
        public string ShieldTenantId {
            get {
                return this.shieldTenantIdField;
            }
            set {
                this.shieldTenantIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SavePatientRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DurScriptPadRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(InsertRxHeaderCanceledRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SaveCSDetailRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PrescriptionRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetUserRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SearchUsersRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MobileServiceSecurityTokenRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UAISecurityTokenRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetNewUniqueUserNameRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PrescriptionUpdateCreationTypeRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RejectScriptMessageRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ApproveScriptMessageRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(OutboundInfoScriptMessageRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ScriptMessageRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DeleteScriptMessagesRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CreateScriptMessageRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RxTaskRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SendRxToAssistantRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SaveRxDURRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DURCheckSingleRxRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LicenseSiteRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PatientGuidRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SignPrescriptionsRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SaveDEALicenseRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RxOptionsUsedRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RxRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SetDEARegistrantStatusRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateShieldUserRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CreateShieldUserRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateSecUsersInfoFromShieldRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetePAStatusRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetEnterpriseePAStatusRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ResetForgottenPasswordRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EnrollProviderRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LicenseRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LinkAndAuthorizedFederatedUserRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateShieldTenantRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CreateShieldTenantRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SaveUserAppPropertyRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AuditShieldInsertRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CreateTenantAndUserRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RefreshSamlTokenRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AuthenticateSsoRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AuthenticateAndAuthorizeUserRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetShieldUserRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetShieldInternalAppInstanceIDRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetShieldInternalTenantIDRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetShieldInternalEnvironmentIDRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetUsersFromePrescribeRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SearchShieldUsersRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetUsersRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AuditInsertRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AuditLicenseInsertRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AuditUserInsertRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AuditPatientInsertRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AuditPatientRxCSInsertRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AuditPatientRxInsertRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetEligAndMedHxStatusRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CacheResetRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ApplicationVersionRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CreateBackdoorUserAuditLogEntryRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EPARequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EPARequestsAdditionalInfoRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EPATaskRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(InfoScriptsRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ToggleActiveStatusRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UserLoggingEnabledRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ExportCCDToDBMotionRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetPatientCCDRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ACRSubmitPixFeedRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ClinicalViewerLaunchRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetEnterpriseInfoRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetStateLicenseAndDeaExpiryDateForUserRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IsValidPasswordRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetFailedScriptsRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetPendingScriptsRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LoadMessageQueueTxRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateMessageQueueRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(InsertMessageQueueRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SaveRxErrorRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ECouponRefillRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SMSAlertsRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetECouponTransactionDetailRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ECouponRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LoadMedicationRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetIdProofingUrlRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetShieldUserTraitsRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SetProviderTraitsRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SetShieldUserTraitRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AccountManagementServiceRequestBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CreateUserRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetUserSecretQuestionsRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SaveSecretQuestionAnswersRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ChangePasswordRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetNewPasswordRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateUserRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetDenialReasonsRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetiAssistSamlTokenRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ILearnRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(InsertAllUsersInLicenseForHubEnrollmentRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TeaserAdRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LinkExistingShieldUserToeRxUserRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ActivateAndUpdateUserRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetShieldAuthenicateOTPRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetShieldSendOTPRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetShieldOTPFormsRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetAllProvidersAndTraitsForLicenseRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DiagnosisSearchRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SavePatientCCDRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SavePatientProblemRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdatePatientProblemRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetOfficeLocationRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateOfficeLocationRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddOfficeLocationRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetRxInfoHtmlContentRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetRxInfoDetailsLiteByRxIDRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DXCSyncWhitelistRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DXCConfirmOfferRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DXCConfirmOfferCombinedRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DXCGetStatusUpdateByActivityIDRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DXCPatientQueryResultRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DXCRecommendationContextRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DXCProcessInitiationRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetSpecialtyMedRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RxInfoRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetProviderProgramEnrollmentsRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateUserInUMPRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddUserToUMPRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateLicenseInUMPRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddLicenseToUMPRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EPAMsgRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProcessHubMailboxHeaderListRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(InsertTestPatientsRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PassUserIdProofingAndNpiCheckRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LogRegistrationStepRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetRegistrantIdProofingLoaRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CompleteRegistrationRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CreateRegistrantUserRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ShieldAuditEventRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RtpsCRxDispositionRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetUserShieldCspStatusInfoRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CreateAndSignMobileAccessTokenRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConvertFromHtmlToPdfRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SetDocumentAsPrintedRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RetrieveItemFromDocumentStoreRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PrintRxRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetMessageTrackingAckRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddMessageTrackingAckRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SearchAccountsByNameRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetMatchingPharmacyRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetPdmpEnrollmentFormInfoRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetPPTPlusSamlTokenRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetPDMPSamlTokenRequest))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class ePrescribeSvcRequest {
        
        private AuditInfo reqAuditInfoField;
        
        private System.Nullable<ConnectionStringPointer> dbIDField;
        
        private ePrescribeApplication ePrescribeApplicationField;
        
        private string performanceLogTransactionIDField;
        
        private LoggingInfo loggingInfoField;
        
        /// <remarks/>
        public AuditInfo reqAuditInfo {
            get {
                return this.reqAuditInfoField;
            }
            set {
                this.reqAuditInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<ConnectionStringPointer> DbID {
            get {
                return this.dbIDField;
            }
            set {
                this.dbIDField = value;
            }
        }
        
        /// <remarks/>
        public ePrescribeApplication EPrescribeApplication {
            get {
                return this.ePrescribeApplicationField;
            }
            set {
                this.ePrescribeApplicationField = value;
            }
        }
        
        /// <remarks/>
        public string PerformanceLogTransactionID {
            get {
                return this.performanceLogTransactionIDField;
            }
            set {
                this.performanceLogTransactionIDField = value;
            }
        }
        
        /// <remarks/>
        public LoggingInfo LoggingInfo {
            get {
                return this.loggingInfoField;
            }
            set {
                this.loggingInfoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class AuditInfo {
        
        private string userIDField;
        
        private string userNameField;
        
        private string licenseIDField;
        
        private int defaultMobileSiteIDField;
        
        /// <remarks/>
        public string UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string LicenseID {
            get {
                return this.licenseIDField;
            }
            set {
                this.licenseIDField = value;
            }
        }
        
        /// <remarks/>
        public int DefaultMobileSiteID {
            get {
                return this.defaultMobileSiteIDField;
            }
            set {
                this.defaultMobileSiteIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class DURScriptPadDuplicates {
        
        private string rxIDField;
        
        private int lineNumberField;
        
        private string dupRxIDField;
        
        private string dupDDIField;
        
        private string medicationNameField;
        
        private string strengthField;
        
        private string strengthUOMField;
        
        private string dosageFormField;
        
        private string rxNumberField;
        
        private string dateWrittenField;
        
        private string dupField;
        
        private string warningTextField;
        
        /// <remarks/>
        public string RxID {
            get {
                return this.rxIDField;
            }
            set {
                this.rxIDField = value;
            }
        }
        
        /// <remarks/>
        public int LineNumber {
            get {
                return this.lineNumberField;
            }
            set {
                this.lineNumberField = value;
            }
        }
        
        /// <remarks/>
        public string DupRxID {
            get {
                return this.dupRxIDField;
            }
            set {
                this.dupRxIDField = value;
            }
        }
        
        /// <remarks/>
        public string DupDDI {
            get {
                return this.dupDDIField;
            }
            set {
                this.dupDDIField = value;
            }
        }
        
        /// <remarks/>
        public string MedicationName {
            get {
                return this.medicationNameField;
            }
            set {
                this.medicationNameField = value;
            }
        }
        
        /// <remarks/>
        public string Strength {
            get {
                return this.strengthField;
            }
            set {
                this.strengthField = value;
            }
        }
        
        /// <remarks/>
        public string StrengthUOM {
            get {
                return this.strengthUOMField;
            }
            set {
                this.strengthUOMField = value;
            }
        }
        
        /// <remarks/>
        public string DosageForm {
            get {
                return this.dosageFormField;
            }
            set {
                this.dosageFormField = value;
            }
        }
        
        /// <remarks/>
        public string RxNumber {
            get {
                return this.rxNumberField;
            }
            set {
                this.rxNumberField = value;
            }
        }
        
        /// <remarks/>
        public string DateWritten {
            get {
                return this.dateWrittenField;
            }
            set {
                this.dateWrittenField = value;
            }
        }
        
        /// <remarks/>
        public string Dup {
            get {
                return this.dupField;
            }
            set {
                this.dupField = value;
            }
        }
        
        /// <remarks/>
        public string WarningText {
            get {
                return this.warningTextField;
            }
            set {
                this.warningTextField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class DURScriptPad {
        
        private DURPriorAdverseReaction[] priorAdverseReactionsField;
        
        private DURDrugInteraction[] interactionsField;
        
        private DURFoodInteraction[] foodField;
        
        private DURAlcoholInteraction[] alchoholField;
        
        private DURScriptPadDuplicates[] duplicateTherapiesField;
        
        private DURDosage[] dosagesField;
        
        private DURCustomMed[] customMedsField;
        
        private DURCopyright copyrightField;
        
        /// <remarks/>
        public DURPriorAdverseReaction[] PriorAdverseReactions {
            get {
                return this.priorAdverseReactionsField;
            }
            set {
                this.priorAdverseReactionsField = value;
            }
        }
        
        /// <remarks/>
        public DURDrugInteraction[] Interactions {
            get {
                return this.interactionsField;
            }
            set {
                this.interactionsField = value;
            }
        }
        
        /// <remarks/>
        public DURFoodInteraction[] Food {
            get {
                return this.foodField;
            }
            set {
                this.foodField = value;
            }
        }
        
        /// <remarks/>
        public DURAlcoholInteraction[] Alchohol {
            get {
                return this.alchoholField;
            }
            set {
                this.alchoholField = value;
            }
        }
        
        /// <remarks/>
        public DURScriptPadDuplicates[] DuplicateTherapies {
            get {
                return this.duplicateTherapiesField;
            }
            set {
                this.duplicateTherapiesField = value;
            }
        }
        
        /// <remarks/>
        public DURDosage[] Dosages {
            get {
                return this.dosagesField;
            }
            set {
                this.dosagesField = value;
            }
        }
        
        /// <remarks/>
        public DURCustomMed[] CustomMeds {
            get {
                return this.customMedsField;
            }
            set {
                this.customMedsField = value;
            }
        }
        
        /// <remarks/>
        public DURCopyright Copyright {
            get {
                return this.copyrightField;
            }
            set {
                this.copyrightField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class DURPriorAdverseReaction {
        
        private int dURIDField;
        
        private string prescribedDrugNameField;
        
        private string prescribedDrugClassField;
        
        private string reportedAllergyDrugNameField;
        
        private string reportedAllergyDrugClassField;
        
        private string symptomsField;
        
        private string discussionField;
        
        private string referenceField;
        
        private string categoryField;
        
        private string warningTextField;
        
        private string warningDataXMLField;
        
        /// <remarks/>
        public int DURID {
            get {
                return this.dURIDField;
            }
            set {
                this.dURIDField = value;
            }
        }
        
        /// <remarks/>
        public string PrescribedDrugName {
            get {
                return this.prescribedDrugNameField;
            }
            set {
                this.prescribedDrugNameField = value;
            }
        }
        
        /// <remarks/>
        public string PrescribedDrugClass {
            get {
                return this.prescribedDrugClassField;
            }
            set {
                this.prescribedDrugClassField = value;
            }
        }
        
        /// <remarks/>
        public string ReportedAllergyDrugName {
            get {
                return this.reportedAllergyDrugNameField;
            }
            set {
                this.reportedAllergyDrugNameField = value;
            }
        }
        
        /// <remarks/>
        public string ReportedAllergyDrugClass {
            get {
                return this.reportedAllergyDrugClassField;
            }
            set {
                this.reportedAllergyDrugClassField = value;
            }
        }
        
        /// <remarks/>
        public string Symptoms {
            get {
                return this.symptomsField;
            }
            set {
                this.symptomsField = value;
            }
        }
        
        /// <remarks/>
        public string Discussion {
            get {
                return this.discussionField;
            }
            set {
                this.discussionField = value;
            }
        }
        
        /// <remarks/>
        public string Reference {
            get {
                return this.referenceField;
            }
            set {
                this.referenceField = value;
            }
        }
        
        /// <remarks/>
        public string Category {
            get {
                return this.categoryField;
            }
            set {
                this.categoryField = value;
            }
        }
        
        /// <remarks/>
        public string WarningText {
            get {
                return this.warningTextField;
            }
            set {
                this.warningTextField = value;
            }
        }
        
        /// <remarks/>
        public string WarningDataXML {
            get {
                return this.warningDataXMLField;
            }
            set {
                this.warningDataXMLField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class DURDrugInteraction {
        
        private int dURIDField;
        
        private string medName1Field;
        
        private string med2DDIField;
        
        private string medName2Field;
        
        private string ingredient1Field;
        
        private string ingredient2Field;
        
        private string onsetField;
        
        private string severityField;
        
        private string documentationField;
        
        private string warningTextField;
        
        private string fullWarningTextField;
        
        private string warningDataXMLField;
        
        private string rxIDField;
        
        /// <remarks/>
        public int DURID {
            get {
                return this.dURIDField;
            }
            set {
                this.dURIDField = value;
            }
        }
        
        /// <remarks/>
        public string MedName1 {
            get {
                return this.medName1Field;
            }
            set {
                this.medName1Field = value;
            }
        }
        
        /// <remarks/>
        public string Med2DDI {
            get {
                return this.med2DDIField;
            }
            set {
                this.med2DDIField = value;
            }
        }
        
        /// <remarks/>
        public string MedName2 {
            get {
                return this.medName2Field;
            }
            set {
                this.medName2Field = value;
            }
        }
        
        /// <remarks/>
        public string Ingredient1 {
            get {
                return this.ingredient1Field;
            }
            set {
                this.ingredient1Field = value;
            }
        }
        
        /// <remarks/>
        public string Ingredient2 {
            get {
                return this.ingredient2Field;
            }
            set {
                this.ingredient2Field = value;
            }
        }
        
        /// <remarks/>
        public string Onset {
            get {
                return this.onsetField;
            }
            set {
                this.onsetField = value;
            }
        }
        
        /// <remarks/>
        public string Severity {
            get {
                return this.severityField;
            }
            set {
                this.severityField = value;
            }
        }
        
        /// <remarks/>
        public string Documentation {
            get {
                return this.documentationField;
            }
            set {
                this.documentationField = value;
            }
        }
        
        /// <remarks/>
        public string WarningText {
            get {
                return this.warningTextField;
            }
            set {
                this.warningTextField = value;
            }
        }
        
        /// <remarks/>
        public string FullWarningText {
            get {
                return this.fullWarningTextField;
            }
            set {
                this.fullWarningTextField = value;
            }
        }
        
        /// <remarks/>
        public string WarningDataXML {
            get {
                return this.warningDataXMLField;
            }
            set {
                this.warningDataXMLField = value;
            }
        }
        
        /// <remarks/>
        public string RxID {
            get {
                return this.rxIDField;
            }
            set {
                this.rxIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class DURFoodInteraction {
        
        private int dURIDField;
        
        private string medNameField;
        
        private string ingredientField;
        
        private string onsetField;
        
        private string severityField;
        
        private string documentationField;
        
        private string warningTextField;
        
        private string rxIDField;
        
        private string fullWarningTextField;
        
        private string warningDataXMLField;
        
        /// <remarks/>
        public int DURID {
            get {
                return this.dURIDField;
            }
            set {
                this.dURIDField = value;
            }
        }
        
        /// <remarks/>
        public string MedName {
            get {
                return this.medNameField;
            }
            set {
                this.medNameField = value;
            }
        }
        
        /// <remarks/>
        public string Ingredient {
            get {
                return this.ingredientField;
            }
            set {
                this.ingredientField = value;
            }
        }
        
        /// <remarks/>
        public string Onset {
            get {
                return this.onsetField;
            }
            set {
                this.onsetField = value;
            }
        }
        
        /// <remarks/>
        public string Severity {
            get {
                return this.severityField;
            }
            set {
                this.severityField = value;
            }
        }
        
        /// <remarks/>
        public string Documentation {
            get {
                return this.documentationField;
            }
            set {
                this.documentationField = value;
            }
        }
        
        /// <remarks/>
        public string WarningText {
            get {
                return this.warningTextField;
            }
            set {
                this.warningTextField = value;
            }
        }
        
        /// <remarks/>
        public string RxID {
            get {
                return this.rxIDField;
            }
            set {
                this.rxIDField = value;
            }
        }
        
        /// <remarks/>
        public string FullWarningText {
            get {
                return this.fullWarningTextField;
            }
            set {
                this.fullWarningTextField = value;
            }
        }
        
        /// <remarks/>
        public string WarningDataXML {
            get {
                return this.warningDataXMLField;
            }
            set {
                this.warningDataXMLField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class DURAlcoholInteraction {
        
        private int dURIDField;
        
        private string medNameField;
        
        private string ingredientField;
        
        private string onsetField;
        
        private string severityField;
        
        private string documentationField;
        
        private string warningTextField;
        
        private string fullWarningTextField;
        
        private string warningDataXMLField;
        
        private string rxIDField;
        
        /// <remarks/>
        public int DURID {
            get {
                return this.dURIDField;
            }
            set {
                this.dURIDField = value;
            }
        }
        
        /// <remarks/>
        public string MedName {
            get {
                return this.medNameField;
            }
            set {
                this.medNameField = value;
            }
        }
        
        /// <remarks/>
        public string Ingredient {
            get {
                return this.ingredientField;
            }
            set {
                this.ingredientField = value;
            }
        }
        
        /// <remarks/>
        public string Onset {
            get {
                return this.onsetField;
            }
            set {
                this.onsetField = value;
            }
        }
        
        /// <remarks/>
        public string Severity {
            get {
                return this.severityField;
            }
            set {
                this.severityField = value;
            }
        }
        
        /// <remarks/>
        public string Documentation {
            get {
                return this.documentationField;
            }
            set {
                this.documentationField = value;
            }
        }
        
        /// <remarks/>
        public string WarningText {
            get {
                return this.warningTextField;
            }
            set {
                this.warningTextField = value;
            }
        }
        
        /// <remarks/>
        public string FullWarningText {
            get {
                return this.fullWarningTextField;
            }
            set {
                this.fullWarningTextField = value;
            }
        }
        
        /// <remarks/>
        public string WarningDataXML {
            get {
                return this.warningDataXMLField;
            }
            set {
                this.warningDataXMLField = value;
            }
        }
        
        /// <remarks/>
        public string RxID {
            get {
                return this.rxIDField;
            }
            set {
                this.rxIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class DURDosage {
        
        private int dURIDField;
        
        private string medNameField;
        
        private string strengthField;
        
        private string strengthUOMField;
        
        private decimal quantityField;
        
        private decimal unitsPerDayField;
        
        private decimal individualDoseField;
        
        private int daysSupplyField;
        
        private int refillsField;
        
        private DURDosageWarning[] warningsField;
        
        private string warningTextField;
        
        private string warningDataXMLField;
        
        /// <remarks/>
        public int DURID {
            get {
                return this.dURIDField;
            }
            set {
                this.dURIDField = value;
            }
        }
        
        /// <remarks/>
        public string MedName {
            get {
                return this.medNameField;
            }
            set {
                this.medNameField = value;
            }
        }
        
        /// <remarks/>
        public string Strength {
            get {
                return this.strengthField;
            }
            set {
                this.strengthField = value;
            }
        }
        
        /// <remarks/>
        public string StrengthUOM {
            get {
                return this.strengthUOMField;
            }
            set {
                this.strengthUOMField = value;
            }
        }
        
        /// <remarks/>
        public decimal Quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
            }
        }
        
        /// <remarks/>
        public decimal UnitsPerDay {
            get {
                return this.unitsPerDayField;
            }
            set {
                this.unitsPerDayField = value;
            }
        }
        
        /// <remarks/>
        public decimal IndividualDose {
            get {
                return this.individualDoseField;
            }
            set {
                this.individualDoseField = value;
            }
        }
        
        /// <remarks/>
        public int DaysSupply {
            get {
                return this.daysSupplyField;
            }
            set {
                this.daysSupplyField = value;
            }
        }
        
        /// <remarks/>
        public int Refills {
            get {
                return this.refillsField;
            }
            set {
                this.refillsField = value;
            }
        }
        
        /// <remarks/>
        public DURDosageWarning[] Warnings {
            get {
                return this.warningsField;
            }
            set {
                this.warningsField = value;
            }
        }
        
        /// <remarks/>
        public string WarningText {
            get {
                return this.warningTextField;
            }
            set {
                this.warningTextField = value;
            }
        }
        
        /// <remarks/>
        public string WarningDataXML {
            get {
                return this.warningDataXMLField;
            }
            set {
                this.warningDataXMLField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class DURDosageWarning {
        
        private string titleField;
        
        private string warningTextField;
        
        private string[] effectsField;
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string WarningText {
            get {
                return this.warningTextField;
            }
            set {
                this.warningTextField = value;
            }
        }
        
        /// <remarks/>
        public string[] Effects {
            get {
                return this.effectsField;
            }
            set {
                this.effectsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class DURCustomMed {
        
        private int dURIDField;
        
        private string medNameField;
        
        private string rxIDField;
        
        private string warningTextField;
        
        private string warningDataXMLField;
        
        /// <remarks/>
        public int DURID {
            get {
                return this.dURIDField;
            }
            set {
                this.dURIDField = value;
            }
        }
        
        /// <remarks/>
        public string MedName {
            get {
                return this.medNameField;
            }
            set {
                this.medNameField = value;
            }
        }
        
        /// <remarks/>
        public string RxID {
            get {
                return this.rxIDField;
            }
            set {
                this.rxIDField = value;
            }
        }
        
        /// <remarks/>
        public string WarningText {
            get {
                return this.warningTextField;
            }
            set {
                this.warningTextField = value;
            }
        }
        
        /// <remarks/>
        public string WarningDataXML {
            get {
                return this.warningDataXMLField;
            }
            set {
                this.warningDataXMLField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class DURCopyright {
        
        private string statementField;
        
        private System.DateTime createdField;
        
        private string productNameField;
        
        private System.DateTime issueDateField;
        
        private System.DateTime expirationDateField;
        
        private string versionField;
        
        private string fileModeField;
        
        private string authorField;
        
        /// <remarks/>
        public string Statement {
            get {
                return this.statementField;
            }
            set {
                this.statementField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
            }
        }
        
        /// <remarks/>
        public string ProductName {
            get {
                return this.productNameField;
            }
            set {
                this.productNameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime IssueDate {
            get {
                return this.issueDateField;
            }
            set {
                this.issueDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ExpirationDate {
            get {
                return this.expirationDateField;
            }
            set {
                this.expirationDateField = value;
            }
        }
        
        /// <remarks/>
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        public string FileMode {
            get {
                return this.fileModeField;
            }
            set {
                this.fileModeField = value;
            }
        }
        
        /// <remarks/>
        public string Author {
            get {
                return this.authorField;
            }
            set {
                this.authorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetUserResponse {
        
        private RxUser rxUserField;
        
        /// <remarks/>
        public RxUser RxUser {
            get {
                return this.rxUserField;
            }
            set {
                this.rxUserField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class RxUser {
        
        private string userIDField;
        
        private string userNameField;
        
        private string licenseIDField;
        
        private string accountIDField;
        
        private string titleField;
        
        private string firstNameField;
        
        private string middleInitialField;
        
        private string lastNameField;
        
        private string fullNameField;
        
        private string paternalNameField;
        
        private string maternalNameField;
        
        private string suffixField;
        
        private int timeoutField;
        
        private System.DateTime lastPasswordChangeField;
        
        private bool activeField;
        
        private bool isAccountLockedField;
        
        private string emailField;
        
        private DEALicense[] dEALicensesField;
        
        private string sPIField;
        
        private string nPIField;
        
        private string deluxeFeatureStatusDisplayField;
        
        private int userTypeField;
        
        private string userTypeDescriptionField;
        
        private StateLicense[] stateLicensesField;
        
        private string genericLicenseField;
        
        private string specialtyCode1Field;
        
        private string specialtyCode2Field;
        
        private int defaultMobileSiteIDField;
        
        private bool acceptedEULAField;
        
        private bool pOBViewAllProvidersField;
        
        private bool patientReceiptField;
        
        private string defaultMobileSiteStateField;
        
        private int defaultFaxSiteIDField;
        
        private string[] appRolesField;
        
        private Permission[] appPermissionsField;
        
        private Property[] appPropertiesField;
        
        private string securityTokenField;
        
        private string shieldProfileNameField;
        
        private int shieldProfileUserIDField;
        
        private bool shieldProfileIsEnabledField;
        
        private string shieldUserNameField;
        
        private int shieldStatusField;
        
        private bool isLicenseShieldEnabledField;
        
        private int dBIDField;
        
        private string enterpriseNameField;
        
        private string statusDescriptionField;
        
        private string loginIDField;
        
        private System.DateTime lastSuccessfulLoginField;
        
        private string licenseDescriptionField;
        
        private int licenseStatusField;
        
        private string middleNameField;
        
        private PobAuthorizedProviders pobAuthorizedProvidersField;
        
        /// <remarks/>
        public string UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string LicenseID {
            get {
                return this.licenseIDField;
            }
            set {
                this.licenseIDField = value;
            }
        }
        
        /// <remarks/>
        public string AccountID {
            get {
                return this.accountIDField;
            }
            set {
                this.accountIDField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string MiddleInitial {
            get {
                return this.middleInitialField;
            }
            set {
                this.middleInitialField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string FullName {
            get {
                return this.fullNameField;
            }
            set {
                this.fullNameField = value;
            }
        }
        
        /// <remarks/>
        public string PaternalName {
            get {
                return this.paternalNameField;
            }
            set {
                this.paternalNameField = value;
            }
        }
        
        /// <remarks/>
        public string MaternalName {
            get {
                return this.maternalNameField;
            }
            set {
                this.maternalNameField = value;
            }
        }
        
        /// <remarks/>
        public string Suffix {
            get {
                return this.suffixField;
            }
            set {
                this.suffixField = value;
            }
        }
        
        /// <remarks/>
        public int Timeout {
            get {
                return this.timeoutField;
            }
            set {
                this.timeoutField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastPasswordChange {
            get {
                return this.lastPasswordChangeField;
            }
            set {
                this.lastPasswordChangeField = value;
            }
        }
        
        /// <remarks/>
        public bool Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
        
        /// <remarks/>
        public bool IsAccountLocked {
            get {
                return this.isAccountLockedField;
            }
            set {
                this.isAccountLockedField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public DEALicense[] DEALicenses {
            get {
                return this.dEALicensesField;
            }
            set {
                this.dEALicensesField = value;
            }
        }
        
        /// <remarks/>
        public string SPI {
            get {
                return this.sPIField;
            }
            set {
                this.sPIField = value;
            }
        }
        
        /// <remarks/>
        public string NPI {
            get {
                return this.nPIField;
            }
            set {
                this.nPIField = value;
            }
        }
        
        /// <remarks/>
        public string DeluxeFeatureStatusDisplay {
            get {
                return this.deluxeFeatureStatusDisplayField;
            }
            set {
                this.deluxeFeatureStatusDisplayField = value;
            }
        }
        
        /// <remarks/>
        public int UserType {
            get {
                return this.userTypeField;
            }
            set {
                this.userTypeField = value;
            }
        }
        
        /// <remarks/>
        public string UserTypeDescription {
            get {
                return this.userTypeDescriptionField;
            }
            set {
                this.userTypeDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public StateLicense[] StateLicenses {
            get {
                return this.stateLicensesField;
            }
            set {
                this.stateLicensesField = value;
            }
        }
        
        /// <remarks/>
        public string GenericLicense {
            get {
                return this.genericLicenseField;
            }
            set {
                this.genericLicenseField = value;
            }
        }
        
        /// <remarks/>
        public string SpecialtyCode1 {
            get {
                return this.specialtyCode1Field;
            }
            set {
                this.specialtyCode1Field = value;
            }
        }
        
        /// <remarks/>
        public string SpecialtyCode2 {
            get {
                return this.specialtyCode2Field;
            }
            set {
                this.specialtyCode2Field = value;
            }
        }
        
        /// <remarks/>
        public int DefaultMobileSiteID {
            get {
                return this.defaultMobileSiteIDField;
            }
            set {
                this.defaultMobileSiteIDField = value;
            }
        }
        
        /// <remarks/>
        public bool AcceptedEULA {
            get {
                return this.acceptedEULAField;
            }
            set {
                this.acceptedEULAField = value;
            }
        }
        
        /// <remarks/>
        public bool POBViewAllProviders {
            get {
                return this.pOBViewAllProvidersField;
            }
            set {
                this.pOBViewAllProvidersField = value;
            }
        }
        
        /// <remarks/>
        public bool PatientReceipt {
            get {
                return this.patientReceiptField;
            }
            set {
                this.patientReceiptField = value;
            }
        }
        
        /// <remarks/>
        public string DefaultMobileSiteState {
            get {
                return this.defaultMobileSiteStateField;
            }
            set {
                this.defaultMobileSiteStateField = value;
            }
        }
        
        /// <remarks/>
        public int DefaultFaxSiteID {
            get {
                return this.defaultFaxSiteIDField;
            }
            set {
                this.defaultFaxSiteIDField = value;
            }
        }
        
        /// <remarks/>
        public string[] AppRoles {
            get {
                return this.appRolesField;
            }
            set {
                this.appRolesField = value;
            }
        }
        
        /// <remarks/>
        public Permission[] AppPermissions {
            get {
                return this.appPermissionsField;
            }
            set {
                this.appPermissionsField = value;
            }
        }
        
        /// <remarks/>
        public Property[] AppProperties {
            get {
                return this.appPropertiesField;
            }
            set {
                this.appPropertiesField = value;
            }
        }
        
        /// <remarks/>
        public string SecurityToken {
            get {
                return this.securityTokenField;
            }
            set {
                this.securityTokenField = value;
            }
        }
        
        /// <remarks/>
        public string ShieldProfileName {
            get {
                return this.shieldProfileNameField;
            }
            set {
                this.shieldProfileNameField = value;
            }
        }
        
        /// <remarks/>
        public int ShieldProfileUserID {
            get {
                return this.shieldProfileUserIDField;
            }
            set {
                this.shieldProfileUserIDField = value;
            }
        }
        
        /// <remarks/>
        public bool ShieldProfileIsEnabled {
            get {
                return this.shieldProfileIsEnabledField;
            }
            set {
                this.shieldProfileIsEnabledField = value;
            }
        }
        
        /// <remarks/>
        public string ShieldUserName {
            get {
                return this.shieldUserNameField;
            }
            set {
                this.shieldUserNameField = value;
            }
        }
        
        /// <remarks/>
        public int ShieldStatus {
            get {
                return this.shieldStatusField;
            }
            set {
                this.shieldStatusField = value;
            }
        }
        
        /// <remarks/>
        public bool IsLicenseShieldEnabled {
            get {
                return this.isLicenseShieldEnabledField;
            }
            set {
                this.isLicenseShieldEnabledField = value;
            }
        }
        
        /// <remarks/>
        public int DBID {
            get {
                return this.dBIDField;
            }
            set {
                this.dBIDField = value;
            }
        }
        
        /// <remarks/>
        public string EnterpriseName {
            get {
                return this.enterpriseNameField;
            }
            set {
                this.enterpriseNameField = value;
            }
        }
        
        /// <remarks/>
        public string StatusDescription {
            get {
                return this.statusDescriptionField;
            }
            set {
                this.statusDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string LoginID {
            get {
                return this.loginIDField;
            }
            set {
                this.loginIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime lastSuccessfulLogin {
            get {
                return this.lastSuccessfulLoginField;
            }
            set {
                this.lastSuccessfulLoginField = value;
            }
        }
        
        /// <remarks/>
        public string LicenseDescription {
            get {
                return this.licenseDescriptionField;
            }
            set {
                this.licenseDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public int LicenseStatus {
            get {
                return this.licenseStatusField;
            }
            set {
                this.licenseStatusField = value;
            }
        }
        
        /// <remarks/>
        public string MiddleName {
            get {
                return this.middleNameField;
            }
            set {
                this.middleNameField = value;
            }
        }
        
        /// <remarks/>
        public PobAuthorizedProviders PobAuthorizedProviders {
            get {
                return this.pobAuthorizedProvidersField;
            }
            set {
                this.pobAuthorizedProvidersField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class DEALicense {
        
        private string providerIDField;
        
        private string dEALicenseIDField;
        
        private string dEANumberField;
        
        private System.DateTime dEAExpirationDateField;
        
        private bool dEAIAllowedField;
        
        private bool dEAIIAllowedField;
        
        private bool dEAIIIAllowedField;
        
        private bool dEAIVAllowedField;
        
        private bool dEAVAllowedField;
        
        private DeaLicenseType deaLicenseTypeIdField;
        
        /// <remarks/>
        public string ProviderID {
            get {
                return this.providerIDField;
            }
            set {
                this.providerIDField = value;
            }
        }
        
        /// <remarks/>
        public string DEALicenseID {
            get {
                return this.dEALicenseIDField;
            }
            set {
                this.dEALicenseIDField = value;
            }
        }
        
        /// <remarks/>
        public string DEANumber {
            get {
                return this.dEANumberField;
            }
            set {
                this.dEANumberField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DEAExpirationDate {
            get {
                return this.dEAExpirationDateField;
            }
            set {
                this.dEAExpirationDateField = value;
            }
        }
        
        /// <remarks/>
        public bool DEAIAllowed {
            get {
                return this.dEAIAllowedField;
            }
            set {
                this.dEAIAllowedField = value;
            }
        }
        
        /// <remarks/>
        public bool DEAIIAllowed {
            get {
                return this.dEAIIAllowedField;
            }
            set {
                this.dEAIIAllowedField = value;
            }
        }
        
        /// <remarks/>
        public bool DEAIIIAllowed {
            get {
                return this.dEAIIIAllowedField;
            }
            set {
                this.dEAIIIAllowedField = value;
            }
        }
        
        /// <remarks/>
        public bool DEAIVAllowed {
            get {
                return this.dEAIVAllowedField;
            }
            set {
                this.dEAIVAllowedField = value;
            }
        }
        
        /// <remarks/>
        public bool DEAVAllowed {
            get {
                return this.dEAVAllowedField;
            }
            set {
                this.dEAVAllowedField = value;
            }
        }
        
        /// <remarks/>
        public DeaLicenseType DeaLicenseTypeId {
            get {
                return this.deaLicenseTypeIdField;
            }
            set {
                this.deaLicenseTypeIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public enum DeaLicenseType {
        
        /// <remarks/>
        Unknown,
        
        /// <remarks/>
        DefaultDea,
        
        /// <remarks/>
        Dea,
        
        /// <remarks/>
        NaDean,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class StateLicense {
        
        private string stateField;
        
        private string licenseNumberField;
        
        private System.DateTime expDateField;
        
        private ProviderLicenseType licenseTypeField;
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string LicenseNumber {
            get {
                return this.licenseNumberField;
            }
            set {
                this.licenseNumberField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ExpDate {
            get {
                return this.expDateField;
            }
            set {
                this.expDateField = value;
            }
        }
        
        /// <remarks/>
        public ProviderLicenseType LicenseType {
            get {
                return this.licenseTypeField;
            }
            set {
                this.licenseTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public enum ProviderLicenseType {
        
        /// <remarks/>
        Unknown,
        
        /// <remarks/>
        StateLicenseNumber,
        
        /// <remarks/>
        CertificateToPrescribe,
        
        /// <remarks/>
        StateControlledSubstanceLicense,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class Permission : Claim {
        
        private int shieldInternalIDField;
        
        private bool isInternalField;
        
        /// <remarks/>
        public int ShieldInternalID {
            get {
                return this.shieldInternalIDField;
            }
            set {
                this.shieldInternalIDField = value;
            }
        }
        
        /// <remarks/>
        public bool IsInternal {
            get {
                return this.isInternalField;
            }
            set {
                this.isInternalField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Role))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Permission))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class Claim {
        
        private string claimTypeField;
        
        private string nameField;
        
        private string valueField;
        
        private string valueTypeField;
        
        /// <remarks/>
        public string ClaimType {
            get {
                return this.claimTypeField;
            }
            set {
                this.claimTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        public string ValueType {
            get {
                return this.valueTypeField;
            }
            set {
                this.valueTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class Role : Claim {
        
        private string roleIDField;
        
        private string roleNameField;
        
        private int shieldInternalIDField;
        
        /// <remarks/>
        public string RoleID {
            get {
                return this.roleIDField;
            }
            set {
                this.roleIDField = value;
            }
        }
        
        /// <remarks/>
        public string RoleName {
            get {
                return this.roleNameField;
            }
            set {
                this.roleNameField = value;
            }
        }
        
        /// <remarks/>
        public int ShieldInternalID {
            get {
                return this.shieldInternalIDField;
            }
            set {
                this.shieldInternalIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class Property {
        
        private string propertyIDField;
        
        private string propertyNameField;
        
        private int shieldInternalIDField;
        
        private string propertyStatusField;
        
        /// <remarks/>
        public string PropertyID {
            get {
                return this.propertyIDField;
            }
            set {
                this.propertyIDField = value;
            }
        }
        
        /// <remarks/>
        public string PropertyName {
            get {
                return this.propertyNameField;
            }
            set {
                this.propertyNameField = value;
            }
        }
        
        /// <remarks/>
        public int ShieldInternalID {
            get {
                return this.shieldInternalIDField;
            }
            set {
                this.shieldInternalIDField = value;
            }
        }
        
        /// <remarks/>
        public string PropertyStatus {
            get {
                return this.propertyStatusField;
            }
            set {
                this.propertyStatusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class PobAuthorizedProviders {
        
        private bool allProvidersField;
        
        private string[] providerGuidListField;
        
        /// <remarks/>
        public bool AllProviders {
            get {
                return this.allProvidersField;
            }
            set {
                this.allProvidersField = value;
            }
        }
        
        /// <remarks/>
        public string[] ProviderGuidList {
            get {
                return this.providerGuidListField;
            }
            set {
                this.providerGuidListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class SearchUsersResponse {
        
        private RxUser[] rxUsersField;
        
        /// <remarks/>
        public RxUser[] RxUsers {
            get {
                return this.rxUsersField;
            }
            set {
                this.rxUsersField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class PrescriptionUpdateCreationTypeResponse {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class RejectScriptMessageResponse {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class CreateErrorMessageResponse {
        
        private string scriptMessageIDField;
        
        /// <remarks/>
        public string ScriptMessageID {
            get {
                return this.scriptMessageIDField;
            }
            set {
                this.scriptMessageIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class CreateErrorMessageRequest {
        
        private string inboundXmlField;
        
        private string licenseIDField;
        
        private string providerIDField;
        
        private string messageField;
        
        private ConnectionStringPointer dBIDField;
        
        /// <remarks/>
        public string InboundXml {
            get {
                return this.inboundXmlField;
            }
            set {
                this.inboundXmlField = value;
            }
        }
        
        /// <remarks/>
        public string LicenseID {
            get {
                return this.licenseIDField;
            }
            set {
                this.licenseIDField = value;
            }
        }
        
        /// <remarks/>
        public string ProviderID {
            get {
                return this.providerIDField;
            }
            set {
                this.providerIDField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public ConnectionStringPointer DBID {
            get {
                return this.dBIDField;
            }
            set {
                this.dBIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public enum ConnectionStringPointer {
        
        /// <remarks/>
        SHARED_DB,
        
        /// <remarks/>
        ERXDB_SERVER_1,
        
        /// <remarks/>
        ERXDB_SERVER_2,
        
        /// <remarks/>
        ERXDB_SERVER_3,
        
        /// <remarks/>
        ERXDB_SERVER_4,
        
        /// <remarks/>
        ERXDB_SERVER_5,
        
        /// <remarks/>
        ERXDB_SERVER_6,
        
        /// <remarks/>
        ERXDB_SERVER_7,
        
        /// <remarks/>
        ERXDB_SERVER_8,
        
        /// <remarks/>
        ERXDB_SERVER_9,
        
        /// <remarks/>
        ERXDB_SERVER_10,
        
        /// <remarks/>
        ERXDB_DEFAULT,
        
        /// <remarks/>
        SERVICE_MGR_DB,
        
        /// <remarks/>
        REPLICA_DB,
        
        /// <remarks/>
        REGISTRATION_DB,
        
        /// <remarks/>
        UTILITIES_DB,
        
        /// <remarks/>
        DEBUG_DB,
        
        /// <remarks/>
        REPORTING_DB,
        
        /// <remarks/>
        AUDIT_ERXDB_SERVER_1,
        
        /// <remarks/>
        AUDIT_ERXDB_SERVER_2,
        
        /// <remarks/>
        AUDIT_ERXDB_SERVER_3,
        
        /// <remarks/>
        AUDIT_ERXDB_SERVER_4,
        
        /// <remarks/>
        AUDIT_ERXDB_SERVER_5,
        
        /// <remarks/>
        AUDIT_ERXDB_SERVER_6,
        
        /// <remarks/>
        AUDIT_ERXDB_SERVER_7,
        
        /// <remarks/>
        AUDIT_ERXDB_SERVER_8,
        
        /// <remarks/>
        AUDIT_ERXDB_SERVER_9,
        
        /// <remarks/>
        AUDIT_ERXDB_SERVER_10,
        
        /// <remarks/>
        RPT_DBSERVER_1,
        
        /// <remarks/>
        RPT_DBSERVER_2,
        
        /// <remarks/>
        RPT_DBSERVER_3,
        
        /// <remarks/>
        RPT_DBSERVER_4,
        
        /// <remarks/>
        RPT_DBSERVER_5,
        
        /// <remarks/>
        RPT_DBSERVER_6,
        
        /// <remarks/>
        RPT_DBSERVER_7,
        
        /// <remarks/>
        RPT_DBSERVER_8,
        
        /// <remarks/>
        RPT_DBSERVER_9,
        
        /// <remarks/>
        RPT_DBSERVER_10,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class CreateVerifyMessageResponse {
        
        private string scriptMessageIDField;
        
        /// <remarks/>
        public string ScriptMessageID {
            get {
                return this.scriptMessageIDField;
            }
            set {
                this.scriptMessageIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class CreateVerifyMessageRequest {
        
        private string inboundXmlField;
        
        private string licenseIDField;
        
        private string providerIDField;
        
        private ConnectionStringPointer dBIDField;
        
        /// <remarks/>
        public string InboundXml {
            get {
                return this.inboundXmlField;
            }
            set {
                this.inboundXmlField = value;
            }
        }
        
        /// <remarks/>
        public string LicenseID {
            get {
                return this.licenseIDField;
            }
            set {
                this.licenseIDField = value;
            }
        }
        
        /// <remarks/>
        public string ProviderID {
            get {
                return this.providerIDField;
            }
            set {
                this.providerIDField = value;
            }
        }
        
        /// <remarks/>
        public ConnectionStringPointer DBID {
            get {
                return this.dBIDField;
            }
            set {
                this.dBIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class UpdateProviderOfRecordRequest {
        
        private string rxIDField;
        
        private string providerIDField;
        
        private string authorizeByIDField;
        
        private string userIDField;
        
        private string licenseIDField;
        
        private ConnectionStringPointer dbIDField;
        
        /// <remarks/>
        public string RxID {
            get {
                return this.rxIDField;
            }
            set {
                this.rxIDField = value;
            }
        }
        
        /// <remarks/>
        public string ProviderID {
            get {
                return this.providerIDField;
            }
            set {
                this.providerIDField = value;
            }
        }
        
        /// <remarks/>
        public string AuthorizeByID {
            get {
                return this.authorizeByIDField;
            }
            set {
                this.authorizeByIDField = value;
            }
        }
        
        /// <remarks/>
        public string UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public string LicenseID {
            get {
                return this.licenseIDField;
            }
            set {
                this.licenseIDField = value;
            }
        }
        
        /// <remarks/>
        public ConnectionStringPointer DbID {
            get {
                return this.dbIDField;
            }
            set {
                this.dbIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class SendRxToAssistantResponse {
        
        private long rxTaskIDField;
        
        /// <remarks/>
        public long RxTaskID {
            get {
                return this.rxTaskIDField;
            }
            set {
                this.rxTaskIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class LicensePreferenceSaveRequest {
        
        private Preference preferenceField;
        
        private string licenseIDField;
        
        private ConnectionStringPointer dBIDField;
        
        /// <remarks/>
        public Preference Preference {
            get {
                return this.preferenceField;
            }
            set {
                this.preferenceField = value;
            }
        }
        
        /// <remarks/>
        public string LicenseID {
            get {
                return this.licenseIDField;
            }
            set {
                this.licenseIDField = value;
            }
        }
        
        /// <remarks/>
        public ConnectionStringPointer DBID {
            get {
                return this.dBIDField;
            }
            set {
                this.dBIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class Preference {
        
        private string nameField;
        
        private PreferenceCategory categoryField;
        
        private bool userCanOverrideField;
        
        private string licenseValueField;
        
        private string userValueField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public PreferenceCategory Category {
            get {
                return this.categoryField;
            }
            set {
                this.categoryField = value;
            }
        }
        
        /// <remarks/>
        public bool UserCanOverride {
            get {
                return this.userCanOverrideField;
            }
            set {
                this.userCanOverrideField = value;
            }
        }
        
        /// <remarks/>
        public string LicenseValue {
            get {
                return this.licenseValueField;
            }
            set {
                this.licenseValueField = value;
            }
        }
        
        /// <remarks/>
        public string UserValue {
            get {
                return this.userValueField;
            }
            set {
                this.userValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public enum PreferenceCategory {
        
        /// <remarks/>
        RX_OPTIONS,
        
        /// <remarks/>
        PROVIDER_OPTIONS,
        
        /// <remarks/>
        LICENSE_OPTIONS,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class LicenseCreationDateRequest {
        
        private System.Guid licenseIDField;
        
        /// <remarks/>
        public System.Guid LicenseID {
            get {
                return this.licenseIDField;
            }
            set {
                this.licenseIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class RxUserfavorites {
        
        private string providerIDField;
        
        private string medicationField;
        
        private string routeOfAdminCodeField;
        
        private string routeOfAdminDescriptionField;
        
        private string dosageFormCodeField;
        
        private string dosageFormDescriptionField;
        
        private string strengthField;
        
        private string strengthUOMField;
        
        private string sigTextField;
        
        private int refillQuantityField;
        
        private decimal quantityField;
        
        private int daysSupplyField;
        
        private decimal packageSizeField;
        
        private string packageUOMField;
        
        private int packageQuantityField;
        
        private string packageDescriptionField;
        
        private string controlledSubstanceCodeField;
        
        private string isGenericField;
        
        private string isOTCField;
        
        private string gppcField;
        
        private string ddiField;
        
        private string gpiField;
        
        private string dAWField;
        
        private int usageCountField;
        
        private string icd9CodeField;
        
        private decimal sIGDailyQuantityField;
        
        private int sigDoseFrequencyField;
        
        private string latinSIGIDField;
        
        private string latinSIGDescriptionField;
        
        private System.DateTime createdDateField;
        
        /// <remarks/>
        public string ProviderID {
            get {
                return this.providerIDField;
            }
            set {
                this.providerIDField = value;
            }
        }
        
        /// <remarks/>
        public string Medication {
            get {
                return this.medicationField;
            }
            set {
                this.medicationField = value;
            }
        }
        
        /// <remarks/>
        public string RouteOfAdminCode {
            get {
                return this.routeOfAdminCodeField;
            }
            set {
                this.routeOfAdminCodeField = value;
            }
        }
        
        /// <remarks/>
        public string RouteOfAdminDescription {
            get {
                return this.routeOfAdminDescriptionField;
            }
            set {
                this.routeOfAdminDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string DosageFormCode {
            get {
                return this.dosageFormCodeField;
            }
            set {
                this.dosageFormCodeField = value;
            }
        }
        
        /// <remarks/>
        public string DosageFormDescription {
            get {
                return this.dosageFormDescriptionField;
            }
            set {
                this.dosageFormDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Strength {
            get {
                return this.strengthField;
            }
            set {
                this.strengthField = value;
            }
        }
        
        /// <remarks/>
        public string StrengthUOM {
            get {
                return this.strengthUOMField;
            }
            set {
                this.strengthUOMField = value;
            }
        }
        
        /// <remarks/>
        public string SigText {
            get {
                return this.sigTextField;
            }
            set {
                this.sigTextField = value;
            }
        }
        
        /// <remarks/>
        public int RefillQuantity {
            get {
                return this.refillQuantityField;
            }
            set {
                this.refillQuantityField = value;
            }
        }
        
        /// <remarks/>
        public decimal Quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
            }
        }
        
        /// <remarks/>
        public int DaysSupply {
            get {
                return this.daysSupplyField;
            }
            set {
                this.daysSupplyField = value;
            }
        }
        
        /// <remarks/>
        public decimal PackageSize {
            get {
                return this.packageSizeField;
            }
            set {
                this.packageSizeField = value;
            }
        }
        
        /// <remarks/>
        public string PackageUOM {
            get {
                return this.packageUOMField;
            }
            set {
                this.packageUOMField = value;
            }
        }
        
        /// <remarks/>
        public int PackageQuantity {
            get {
                return this.packageQuantityField;
            }
            set {
                this.packageQuantityField = value;
            }
        }
        
        /// <remarks/>
        public string PackageDescription {
            get {
                return this.packageDescriptionField;
            }
            set {
                this.packageDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string ControlledSubstanceCode {
            get {
                return this.controlledSubstanceCodeField;
            }
            set {
                this.controlledSubstanceCodeField = value;
            }
        }
        
        /// <remarks/>
        public string IsGeneric {
            get {
                return this.isGenericField;
            }
            set {
                this.isGenericField = value;
            }
        }
        
        /// <remarks/>
        public string IsOTC {
            get {
                return this.isOTCField;
            }
            set {
                this.isOTCField = value;
            }
        }
        
        /// <remarks/>
        public string Gppc {
            get {
                return this.gppcField;
            }
            set {
                this.gppcField = value;
            }
        }
        
        /// <remarks/>
        public string Ddi {
            get {
                return this.ddiField;
            }
            set {
                this.ddiField = value;
            }
        }
        
        /// <remarks/>
        public string Gpi {
            get {
                return this.gpiField;
            }
            set {
                this.gpiField = value;
            }
        }
        
        /// <remarks/>
        public string DAW {
            get {
                return this.dAWField;
            }
            set {
                this.dAWField = value;
            }
        }
        
        /// <remarks/>
        public int UsageCount {
            get {
                return this.usageCountField;
            }
            set {
                this.usageCountField = value;
            }
        }
        
        /// <remarks/>
        public string Icd9Code {
            get {
                return this.icd9CodeField;
            }
            set {
                this.icd9CodeField = value;
            }
        }
        
        /// <remarks/>
        public decimal SIGDailyQuantity {
            get {
                return this.sIGDailyQuantityField;
            }
            set {
                this.sIGDailyQuantityField = value;
            }
        }
        
        /// <remarks/>
        public int SigDoseFrequency {
            get {
                return this.sigDoseFrequencyField;
            }
            set {
                this.sigDoseFrequencyField = value;
            }
        }
        
        /// <remarks/>
        public string LatinSIGID {
            get {
                return this.latinSIGIDField;
            }
            set {
                this.latinSIGIDField = value;
            }
        }
        
        /// <remarks/>
        public string LatinSIGDescription {
            get {
                return this.latinSIGDescriptionField;
            }
            set {
                this.latinSIGDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreatedDate {
            get {
                return this.createdDateField;
            }
            set {
                this.createdDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class ProviderFavoritesResponse {
        
        private int countField;
        
        private RxUserfavorites[] rxUserfavoritesField;
        
        /// <remarks/>
        public int Count {
            get {
                return this.countField;
            }
            set {
                this.countField = value;
            }
        }
        
        /// <remarks/>
        public RxUserfavorites[] RxUserfavorites {
            get {
                return this.rxUserfavoritesField;
            }
            set {
                this.rxUserfavoritesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class ReponseDEALicenses {
        
        private DEALicense[] lstDEALicenseField;
        
        /// <remarks/>
        public DEALicense[] lstDEALicense {
            get {
                return this.lstDEALicenseField;
            }
            set {
                this.lstDEALicenseField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetShieldExternalAppInstanceIDRequest {
        
        private ApplicationEnum applicationEnumField;
        
        private string accountIDField;
        
        /// <remarks/>
        public ApplicationEnum ApplicationEnum {
            get {
                return this.applicationEnumField;
            }
            set {
                this.applicationEnumField = value;
            }
        }
        
        /// <remarks/>
        public string AccountID {
            get {
                return this.accountIDField;
            }
            set {
                this.accountIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public enum ApplicationEnum {
        
        /// <remarks/>
        ePrescribe,
        
        /// <remarks/>
        Utilities,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class PatientEligAndMedHxStatus {
        
        private string patientGUIDField;
        
        private long switchMessageIDField;
        
        private string switchMessageTypeIDField;
        
        private string planIDField;
        
        private bool positiveField;
        
        private string typeDescriptionField;
        
        private string messageField;
        
        private System.DateTime dateTimeUTCField;
        
        private string dateTimeLocalFormattedField;
        
        /// <remarks/>
        public string PatientGUID {
            get {
                return this.patientGUIDField;
            }
            set {
                this.patientGUIDField = value;
            }
        }
        
        /// <remarks/>
        public long SwitchMessageID {
            get {
                return this.switchMessageIDField;
            }
            set {
                this.switchMessageIDField = value;
            }
        }
        
        /// <remarks/>
        public string SwitchMessageTypeID {
            get {
                return this.switchMessageTypeIDField;
            }
            set {
                this.switchMessageTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public string PlanID {
            get {
                return this.planIDField;
            }
            set {
                this.planIDField = value;
            }
        }
        
        /// <remarks/>
        public bool Positive {
            get {
                return this.positiveField;
            }
            set {
                this.positiveField = value;
            }
        }
        
        /// <remarks/>
        public string TypeDescription {
            get {
                return this.typeDescriptionField;
            }
            set {
                this.typeDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateTimeUTC {
            get {
                return this.dateTimeUTCField;
            }
            set {
                this.dateTimeUTCField = value;
            }
        }
        
        /// <remarks/>
        public string DateTimeLocalFormatted {
            get {
                return this.dateTimeLocalFormattedField;
            }
            set {
                this.dateTimeLocalFormattedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetEligAndMedHxStatusResponse {
        
        private PatientEligAndMedHxStatus[] patientEligAndMedHxStatusesField;
        
        /// <remarks/>
        public PatientEligAndMedHxStatus[] PatientEligAndMedHxStatuses {
            get {
                return this.patientEligAndMedHxStatusesField;
            }
            set {
                this.patientEligAndMedHxStatusesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetLicenseShieldStatusRequest {
        
        private GetLicenseShieldStatusLookupType lookupTypeField;
        
        private string lookupValueField;
        
        private ConnectionStringPointer dBIDField;
        
        /// <remarks/>
        public GetLicenseShieldStatusLookupType LookupType {
            get {
                return this.lookupTypeField;
            }
            set {
                this.lookupTypeField = value;
            }
        }
        
        /// <remarks/>
        public string LookupValue {
            get {
                return this.lookupValueField;
            }
            set {
                this.lookupValueField = value;
            }
        }
        
        /// <remarks/>
        public ConnectionStringPointer DBID {
            get {
                return this.dBIDField;
            }
            set {
                this.dBIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public enum GetLicenseShieldStatusLookupType {
        
        /// <remarks/>
        LicenseID,
        
        /// <remarks/>
        AccountID,
        
        /// <remarks/>
        UserID,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class ApplicationRequest {
        
        private ePrescribeApplication applicationIDField;
        
        /// <remarks/>
        public ePrescribeApplication ApplicationID {
            get {
                return this.applicationIDField;
            }
            set {
                this.applicationIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public enum ePrescribeApplication {
        
        /// <remarks/>
        DataManagerService,
        
        /// <remarks/>
        ePrescribeServices,
        
        /// <remarks/>
        FullRegistration,
        
        /// <remarks/>
        MainApplication,
        
        /// <remarks/>
        MobileWeb,
        
        /// <remarks/>
        PartnerRegistration,
        
        /// <remarks/>
        PartnerServices,
        
        /// <remarks/>
        RegistrationWebServices,
        
        /// <remarks/>
        SupportForce,
        
        /// <remarks/>
        UAIWebServices,
        
        /// <remarks/>
        Utilities,
        
        /// <remarks/>
        RegistrationWCFService,
        
        /// <remarks/>
        MobileServices,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetBackdoorSitesResponse {
        
        private LicenseSite[] licenseSitesField;
        
        /// <remarks/>
        public LicenseSite[] LicenseSites {
            get {
                return this.licenseSitesField;
            }
            set {
                this.licenseSitesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class LicenseSite {
        
        private string licenseIDField;
        
        private int accountIDField;
        
        private int siteIDField;
        
        private string siteNameField;
        
        private string siteNameAndAccountIDField;
        
        private string address1Field;
        
        private string address2Field;
        
        private string cityField;
        
        private string stateField;
        
        private string zIPCodeField;
        
        private string phoneAreaCodeField;
        
        private string phoneNumberField;
        
        private string faxAreaCodeField;
        
        private string faxNumberField;
        
        private bool activeField;
        
        private string timeZoneField;
        
        private bool allowAdminField;
        
        private string taxSettingField;
        
        private string taxesField;
        
        private int standingField;
        
        private string enterpriseClientIDField;
        
        private string licenseIDWithSiteIDField;
        
        /// <remarks/>
        public string LicenseID {
            get {
                return this.licenseIDField;
            }
            set {
                this.licenseIDField = value;
            }
        }
        
        /// <remarks/>
        public int AccountID {
            get {
                return this.accountIDField;
            }
            set {
                this.accountIDField = value;
            }
        }
        
        /// <remarks/>
        public int SiteID {
            get {
                return this.siteIDField;
            }
            set {
                this.siteIDField = value;
            }
        }
        
        /// <remarks/>
        public string SiteName {
            get {
                return this.siteNameField;
            }
            set {
                this.siteNameField = value;
            }
        }
        
        /// <remarks/>
        public string SiteNameAndAccountID {
            get {
                return this.siteNameAndAccountIDField;
            }
            set {
                this.siteNameAndAccountIDField = value;
            }
        }
        
        /// <remarks/>
        public string Address1 {
            get {
                return this.address1Field;
            }
            set {
                this.address1Field = value;
            }
        }
        
        /// <remarks/>
        public string Address2 {
            get {
                return this.address2Field;
            }
            set {
                this.address2Field = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string ZIPCode {
            get {
                return this.zIPCodeField;
            }
            set {
                this.zIPCodeField = value;
            }
        }
        
        /// <remarks/>
        public string PhoneAreaCode {
            get {
                return this.phoneAreaCodeField;
            }
            set {
                this.phoneAreaCodeField = value;
            }
        }
        
        /// <remarks/>
        public string PhoneNumber {
            get {
                return this.phoneNumberField;
            }
            set {
                this.phoneNumberField = value;
            }
        }
        
        /// <remarks/>
        public string FaxAreaCode {
            get {
                return this.faxAreaCodeField;
            }
            set {
                this.faxAreaCodeField = value;
            }
        }
        
        /// <remarks/>
        public string FaxNumber {
            get {
                return this.faxNumberField;
            }
            set {
                this.faxNumberField = value;
            }
        }
        
        /// <remarks/>
        public bool Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
        
        /// <remarks/>
        public string TimeZone {
            get {
                return this.timeZoneField;
            }
            set {
                this.timeZoneField = value;
            }
        }
        
        /// <remarks/>
        public bool AllowAdmin {
            get {
                return this.allowAdminField;
            }
            set {
                this.allowAdminField = value;
            }
        }
        
        /// <remarks/>
        public string TaxSetting {
            get {
                return this.taxSettingField;
            }
            set {
                this.taxSettingField = value;
            }
        }
        
        /// <remarks/>
        public string Taxes {
            get {
                return this.taxesField;
            }
            set {
                this.taxesField = value;
            }
        }
        
        /// <remarks/>
        public int Standing {
            get {
                return this.standingField;
            }
            set {
                this.standingField = value;
            }
        }
        
        /// <remarks/>
        public string EnterpriseClientID {
            get {
                return this.enterpriseClientIDField;
            }
            set {
                this.enterpriseClientIDField = value;
            }
        }
        
        /// <remarks/>
        public string LicenseIDWithSiteID {
            get {
                return this.licenseIDWithSiteIDField;
            }
            set {
                this.licenseIDWithSiteIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetMainAppLogRecordsRequest {
        
        private string passwordToDecryptField;
        
        private int recordsToReturnField;
        
        /// <remarks/>
        public string PasswordToDecrypt {
            get {
                return this.passwordToDecryptField;
            }
            set {
                this.passwordToDecryptField = value;
            }
        }
        
        /// <remarks/>
        public int RecordsToReturn {
            get {
                return this.recordsToReturnField;
            }
            set {
                this.recordsToReturnField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class UserLoggingInfo {
        
        private string idField;
        
        private string userGuidField;
        
        private string shieldUserNameField;
        
        private string legacyUserNameField;
        
        private string createdByUserField;
        
        private string createdDateUTCField;
        
        private bool isActiveField;
        
        /// <remarks/>
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string UserGuid {
            get {
                return this.userGuidField;
            }
            set {
                this.userGuidField = value;
            }
        }
        
        /// <remarks/>
        public string ShieldUserName {
            get {
                return this.shieldUserNameField;
            }
            set {
                this.shieldUserNameField = value;
            }
        }
        
        /// <remarks/>
        public string LegacyUserName {
            get {
                return this.legacyUserNameField;
            }
            set {
                this.legacyUserNameField = value;
            }
        }
        
        /// <remarks/>
        public string CreatedByUser {
            get {
                return this.createdByUserField;
            }
            set {
                this.createdByUserField = value;
            }
        }
        
        /// <remarks/>
        public string CreatedDateUTC {
            get {
                return this.createdDateUTCField;
            }
            set {
                this.createdDateUTCField = value;
            }
        }
        
        /// <remarks/>
        public bool IsActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetUsersBeingLoggedResult {
        
        private UserLoggingInfo[] usersBeingLoggedField;
        
        /// <remarks/>
        public UserLoggingInfo[] UsersBeingLogged {
            get {
                return this.usersBeingLoggedField;
            }
            set {
                this.usersBeingLoggedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class DisableLoggingForUserByUserIDRequest {
        
        private System.Guid userGuidField;
        
        /// <remarks/>
        public System.Guid UserGuid {
            get {
                return this.userGuidField;
            }
            set {
                this.userGuidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class EnableLoggingForUserRequest {
        
        private string shieldUserNameField;
        
        private string legacyUserNameField;
        
        private System.Guid userGuidField;
        
        private System.Guid createdByUserGuidField;
        
        /// <remarks/>
        public string ShieldUserName {
            get {
                return this.shieldUserNameField;
            }
            set {
                this.shieldUserNameField = value;
            }
        }
        
        /// <remarks/>
        public string LegacyUserName {
            get {
                return this.legacyUserNameField;
            }
            set {
                this.legacyUserNameField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid UserGuid {
            get {
                return this.userGuidField;
            }
            set {
                this.userGuidField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid CreatedByUserGuid {
            get {
                return this.createdByUserGuidField;
            }
            set {
                this.createdByUserGuidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class ClinicalViewerLaunchResponse {
        
        private string headerDataField;
        
        private HIELaunchType launchTypeField;
        
        private byte[] postDataByteArrayField;
        
        private string postDataStringField;
        
        private string uRLField;
        
        private string htmlSourceField;
        
        /// <remarks/>
        public string HeaderData {
            get {
                return this.headerDataField;
            }
            set {
                this.headerDataField = value;
            }
        }
        
        /// <remarks/>
        public HIELaunchType LaunchType {
            get {
                return this.launchTypeField;
            }
            set {
                this.launchTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] PostDataByteArray {
            get {
                return this.postDataByteArrayField;
            }
            set {
                this.postDataByteArrayField = value;
            }
        }
        
        /// <remarks/>
        public string PostDataString {
            get {
                return this.postDataStringField;
            }
            set {
                this.postDataStringField = value;
            }
        }
        
        /// <remarks/>
        public string URL {
            get {
                return this.uRLField;
            }
            set {
                this.uRLField = value;
            }
        }
        
        /// <remarks/>
        public string HtmlSource {
            get {
                return this.htmlSourceField;
            }
            set {
                this.htmlSourceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public enum HIELaunchType {
        
        /// <remarks/>
        HttpGet,
        
        /// <remarks/>
        HttpPost,
        
        /// <remarks/>
        HttpSamlPost,
        
        /// <remarks/>
        HttpSamlArtifact,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class ACRCommunityResponse {
        
        private string[] communitiesField;
        
        /// <remarks/>
        public string[] Communities {
            get {
                return this.communitiesField;
            }
            set {
                this.communitiesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class ACRCommunityRequest {
        
        private string systemOidField;
        
        /// <remarks/>
        public string SystemOid {
            get {
                return this.systemOidField;
            }
            set {
                this.systemOidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class SearchMedicationAndClassRequest {
        
        private string searchTextField;
        
        private string typeField;
        
        private int rowCountField;
        
        private ConnectionStringPointer dbIDField;
        
        /// <remarks/>
        public string SearchText {
            get {
                return this.searchTextField;
            }
            set {
                this.searchTextField = value;
            }
        }
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public int RowCount {
            get {
                return this.rowCountField;
            }
            set {
                this.rowCountField = value;
            }
        }
        
        /// <remarks/>
        public ConnectionStringPointer dbID {
            get {
                return this.dbIDField;
            }
            set {
                this.dbIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class SearchMedicationRequest {
        
        private string searchTextField;
        
        private int rowCountField;
        
        private string genericEquivalentField;
        
        private ConnectionStringPointer dbIDField;
        
        /// <remarks/>
        public string SearchText {
            get {
                return this.searchTextField;
            }
            set {
                this.searchTextField = value;
            }
        }
        
        /// <remarks/>
        public int RowCount {
            get {
                return this.rowCountField;
            }
            set {
                this.rowCountField = value;
            }
        }
        
        /// <remarks/>
        public string GenericEquivalent {
            get {
                return this.genericEquivalentField;
            }
            set {
                this.genericEquivalentField = value;
            }
        }
        
        /// <remarks/>
        public ConnectionStringPointer dbID {
            get {
                return this.dbIDField;
            }
            set {
                this.dbIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetIdProofingUrlResponse {
        
        private string idProofingUrlField;
        
        private bool successField;
        
        private string messageField;
        
        /// <remarks/>
        public string IdProofingUrl {
            get {
                return this.idProofingUrlField;
            }
            set {
                this.idProofingUrlField = value;
            }
        }
        
        /// <remarks/>
        public bool Success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class UpdateShieldUserTenantAdminStatusRequest {
        
        private bool isTenantAdminField;
        
        private string accountIDField;
        
        private System.Guid[] userGUIDsField;
        
        private ApplicationEnum applicationField;
        
        /// <remarks/>
        public bool IsTenantAdmin {
            get {
                return this.isTenantAdminField;
            }
            set {
                this.isTenantAdminField = value;
            }
        }
        
        /// <remarks/>
        public string AccountID {
            get {
                return this.accountIDField;
            }
            set {
                this.accountIDField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid[] UserGUIDs {
            get {
                return this.userGUIDsField;
            }
            set {
                this.userGUIDsField = value;
            }
        }
        
        /// <remarks/>
        public ApplicationEnum Application {
            get {
                return this.applicationField;
            }
            set {
                this.applicationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetiAssistSamlTokenResponse {
        
        private string base64SamlTokenField;
        
        private System.DateTime tokenRefreshTimeField;
        
        /// <remarks/>
        public string Base64SamlToken {
            get {
                return this.base64SamlTokenField;
            }
            set {
                this.base64SamlTokenField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime TokenRefreshTime {
            get {
                return this.tokenRefreshTimeField;
            }
            set {
                this.tokenRefreshTimeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class CreateLicenseForExistingShieldTenantRequest {
        
        private string externalTenantIDField;
        
        private string licenseNameField;
        
        private string accountIDField;
        
        private int shieldApplicationIDField;
        
        private string shieldSupportAdminUserNameField;
        
        private string shieldSupportAdminPasswordField;
        
        /// <remarks/>
        public string ExternalTenantID {
            get {
                return this.externalTenantIDField;
            }
            set {
                this.externalTenantIDField = value;
            }
        }
        
        /// <remarks/>
        public string LicenseName {
            get {
                return this.licenseNameField;
            }
            set {
                this.licenseNameField = value;
            }
        }
        
        /// <remarks/>
        public string AccountID {
            get {
                return this.accountIDField;
            }
            set {
                this.accountIDField = value;
            }
        }
        
        /// <remarks/>
        public int ShieldApplicationID {
            get {
                return this.shieldApplicationIDField;
            }
            set {
                this.shieldApplicationIDField = value;
            }
        }
        
        /// <remarks/>
        public string ShieldSupportAdminUserName {
            get {
                return this.shieldSupportAdminUserNameField;
            }
            set {
                this.shieldSupportAdminUserNameField = value;
            }
        }
        
        /// <remarks/>
        public string ShieldSupportAdminPassword {
            get {
                return this.shieldSupportAdminPasswordField;
            }
            set {
                this.shieldSupportAdminPasswordField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class ProviderWithShieldTraits {
        
        private string shieldUserNameField;
        
        private System.Guid providerGuidField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string dEANumberField;
        
        private ShieldTraitInfo[] shieldTraitsField;
        
        private bool isIdentityCompromisedField;
        
        private bool userMaySetIdentityCompromisedField;
        
        private bool isCanEnrollPrivilegeGrantedField;
        
        private bool userMaySetCanEnrollPrivilegeField;
        
        private string ePCSRegistrationStatusField;
        
        private bool isEPCSSigningGrantedField;
        
        private bool userMaySetCanPrescribePrivilegeField;
        
        private bool isDeaRegistrantField;
        
        /// <remarks/>
        public string ShieldUserName {
            get {
                return this.shieldUserNameField;
            }
            set {
                this.shieldUserNameField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid ProviderGuid {
            get {
                return this.providerGuidField;
            }
            set {
                this.providerGuidField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string DEANumber {
            get {
                return this.dEANumberField;
            }
            set {
                this.dEANumberField = value;
            }
        }
        
        /// <remarks/>
        public ShieldTraitInfo[] ShieldTraits {
            get {
                return this.shieldTraitsField;
            }
            set {
                this.shieldTraitsField = value;
            }
        }
        
        /// <remarks/>
        public bool IsIdentityCompromised {
            get {
                return this.isIdentityCompromisedField;
            }
            set {
                this.isIdentityCompromisedField = value;
            }
        }
        
        /// <remarks/>
        public bool UserMaySetIdentityCompromised {
            get {
                return this.userMaySetIdentityCompromisedField;
            }
            set {
                this.userMaySetIdentityCompromisedField = value;
            }
        }
        
        /// <remarks/>
        public bool IsCanEnrollPrivilegeGranted {
            get {
                return this.isCanEnrollPrivilegeGrantedField;
            }
            set {
                this.isCanEnrollPrivilegeGrantedField = value;
            }
        }
        
        /// <remarks/>
        public bool UserMaySetCanEnrollPrivilege {
            get {
                return this.userMaySetCanEnrollPrivilegeField;
            }
            set {
                this.userMaySetCanEnrollPrivilegeField = value;
            }
        }
        
        /// <remarks/>
        public string EPCSRegistrationStatus {
            get {
                return this.ePCSRegistrationStatusField;
            }
            set {
                this.ePCSRegistrationStatusField = value;
            }
        }
        
        /// <remarks/>
        public bool IsEPCSSigningGranted {
            get {
                return this.isEPCSSigningGrantedField;
            }
            set {
                this.isEPCSSigningGrantedField = value;
            }
        }
        
        /// <remarks/>
        public bool UserMaySetCanPrescribePrivilege {
            get {
                return this.userMaySetCanPrescribePrivilegeField;
            }
            set {
                this.userMaySetCanPrescribePrivilegeField = value;
            }
        }
        
        /// <remarks/>
        public bool IsDeaRegistrant {
            get {
                return this.isDeaRegistrantField;
            }
            set {
                this.isDeaRegistrantField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class ShieldTraitInfo {
        
        private ShieldTraitName traitNameField;
        
        private ShieldTraitValue traitValueEnumField;
        
        private string traitValueStringField;
        
        private ShieldTraitValueType traitValueTypeField;
        
        private bool userMaySetField;
        
        /// <remarks/>
        public ShieldTraitName TraitName {
            get {
                return this.traitNameField;
            }
            set {
                this.traitNameField = value;
            }
        }
        
        /// <remarks/>
        public ShieldTraitValue TraitValueEnum {
            get {
                return this.traitValueEnumField;
            }
            set {
                this.traitValueEnumField = value;
            }
        }
        
        /// <remarks/>
        public string TraitValueString {
            get {
                return this.traitValueStringField;
            }
            set {
                this.traitValueStringField = value;
            }
        }
        
        /// <remarks/>
        public ShieldTraitValueType TraitValueType {
            get {
                return this.traitValueTypeField;
            }
            set {
                this.traitValueTypeField = value;
            }
        }
        
        /// <remarks/>
        public bool UserMaySet {
            get {
                return this.userMaySetField;
            }
            set {
                this.userMaySetField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public enum ShieldTraitName {
        
        /// <remarks/>
        CanApprove,
        
        /// <remarks/>
        CanEnroll,
        
        /// <remarks/>
        CanPrescribe,
        
        /// <remarks/>
        CanViewProviderReports,
        
        /// <remarks/>
        CanViewSecurityReports,
        
        /// <remarks/>
        IsDeaRegistrantStatusValid,
        
        /// <remarks/>
        IDProofingStatus,
        
        /// <remarks/>
        IsIdentityCompromised,
        
        /// <remarks/>
        OTPRegistrationURL,
        
        /// <remarks/>
        VerizonIdentityName,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public enum ShieldTraitValue {
        
        /// <remarks/>
        YES,
        
        /// <remarks/>
        NO,
        
        /// <remarks/>
        UNKNOWN,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public enum ShieldTraitValueType {
        
        /// <remarks/>
        Enum,
        
        /// <remarks/>
        String,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetAllProvidersAndTraitsForLicenseResponse {
        
        private ProviderWithShieldTraits[] providersField;
        
        /// <remarks/>
        public ProviderWithShieldTraits[] Providers {
            get {
                return this.providersField;
            }
            set {
                this.providersField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class IsValidPartnerLicenseRelationshipRequest {
        
        private System.Guid partnerGuidField;
        
        private System.Guid licenseGuidField;
        
        private ConnectionStringPointer dbIdField;
        
        /// <remarks/>
        public System.Guid PartnerGuid {
            get {
                return this.partnerGuidField;
            }
            set {
                this.partnerGuidField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid LicenseGuid {
            get {
                return this.licenseGuidField;
            }
            set {
                this.licenseGuidField = value;
            }
        }
        
        /// <remarks/>
        public ConnectionStringPointer DbId {
            get {
                return this.dbIdField;
            }
            set {
                this.dbIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class DisableLoggingForPartnerByPartnerIDRequest {
        
        private System.Guid partnerGuidField;
        
        /// <remarks/>
        public System.Guid PartnerGuid {
            get {
                return this.partnerGuidField;
            }
            set {
                this.partnerGuidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class EnableLoggingForPartnerRequest {
        
        private System.Guid partnerGuidField;
        
        private System.Guid createdByUserGuidField;
        
        /// <remarks/>
        public System.Guid PartnerGuid {
            get {
                return this.partnerGuidField;
            }
            set {
                this.partnerGuidField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid CreatedByUserGuid {
            get {
                return this.createdByUserGuidField;
            }
            set {
                this.createdByUserGuidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class PartnerLoggingEnabledRequest {
        
        private System.Guid partnerGuidField;
        
        /// <remarks/>
        public System.Guid PartnerGuid {
            get {
                return this.partnerGuidField;
            }
            set {
                this.partnerGuidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class Partner {
        
        private System.Guid partnerGuidField;
        
        private string partnerNameField;
        
        private System.Xml.XmlNode configField;
        
        private string webSvcUserNameField;
        
        private string webSvcPasswordField;
        
        private string webSvcLockedOutField;
        
        private bool allowsUserNameAndPasswordField;
        
        /// <remarks/>
        public System.Guid PartnerGuid {
            get {
                return this.partnerGuidField;
            }
            set {
                this.partnerGuidField = value;
            }
        }
        
        /// <remarks/>
        public string PartnerName {
            get {
                return this.partnerNameField;
            }
            set {
                this.partnerNameField = value;
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Config {
            get {
                return this.configField;
            }
            set {
                this.configField = value;
            }
        }
        
        /// <remarks/>
        public string WebSvcUserName {
            get {
                return this.webSvcUserNameField;
            }
            set {
                this.webSvcUserNameField = value;
            }
        }
        
        /// <remarks/>
        public string WebSvcPassword {
            get {
                return this.webSvcPasswordField;
            }
            set {
                this.webSvcPasswordField = value;
            }
        }
        
        /// <remarks/>
        public string WebSvcLockedOut {
            get {
                return this.webSvcLockedOutField;
            }
            set {
                this.webSvcLockedOutField = value;
            }
        }
        
        /// <remarks/>
        public bool AllowsUserNameAndPassword {
            get {
                return this.allowsUserNameAndPasswordField;
            }
            set {
                this.allowsUserNameAndPasswordField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class PartnersBeingLoggedResponse {
        
        private Partner[] partnersBeingLoggedField;
        
        private System.Guid[] partnersBeingLoggedGuidsField;
        
        /// <remarks/>
        public Partner[] PartnersBeingLogged {
            get {
                return this.partnersBeingLoggedField;
            }
            set {
                this.partnersBeingLoggedField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid[] PartnersBeingLoggedGuids {
            get {
                return this.partnersBeingLoggedGuidsField;
            }
            set {
                this.partnersBeingLoggedGuidsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class PartnersBeingLoggedRequest {
        
        private ListType listTypeField;
        
        /// <remarks/>
        public ListType ListType {
            get {
                return this.listTypeField;
            }
            set {
                this.listTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public enum ListType {
        
        /// <remarks/>
        GuidsOnly,
        
        /// <remarks/>
        PartnerClass,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class PatientProblem {
        
        private string patDxIDField;
        
        private System.Guid patientIDField;
        
        private string iCD9CodeField;
        
        private string iCD10CodeField;
        
        private string snomedCodeField;
        
        private string codeTypeField;
        
        private string termUIDField;
        
        private PatientProblemStatus statusField;
        
        private string descriptionField;
        
        private System.DateTime startDateField;
        
        private System.Nullable<System.DateTime> resolvedDateField;
        
        /// <remarks/>
        public string PatDxID {
            get {
                return this.patDxIDField;
            }
            set {
                this.patDxIDField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid PatientID {
            get {
                return this.patientIDField;
            }
            set {
                this.patientIDField = value;
            }
        }
        
        /// <remarks/>
        public string ICD9Code {
            get {
                return this.iCD9CodeField;
            }
            set {
                this.iCD9CodeField = value;
            }
        }
        
        /// <remarks/>
        public string ICD10Code {
            get {
                return this.iCD10CodeField;
            }
            set {
                this.iCD10CodeField = value;
            }
        }
        
        /// <remarks/>
        public string SnomedCode {
            get {
                return this.snomedCodeField;
            }
            set {
                this.snomedCodeField = value;
            }
        }
        
        /// <remarks/>
        public string CodeType {
            get {
                return this.codeTypeField;
            }
            set {
                this.codeTypeField = value;
            }
        }
        
        /// <remarks/>
        public string TermUID {
            get {
                return this.termUIDField;
            }
            set {
                this.termUIDField = value;
            }
        }
        
        /// <remarks/>
        public PatientProblemStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ResolvedDate {
            get {
                return this.resolvedDateField;
            }
            set {
                this.resolvedDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public enum PatientProblemStatus {
        
        /// <remarks/>
        ACTIVE,
        
        /// <remarks/>
        INACTIVE,
        
        /// <remarks/>
        ENTERED_IN_ERROR,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class OfficeLocation {
        
        private string siteIDField;
        
        private string siteNameField;
        
        private string address1Field;
        
        private string address2Field;
        
        private string cityField;
        
        private string stateField;
        
        private string zipCodeField;
        
        private Phone phoneField;
        
        private Phone faxField;
        
        /// <remarks/>
        public string SiteID {
            get {
                return this.siteIDField;
            }
            set {
                this.siteIDField = value;
            }
        }
        
        /// <remarks/>
        public string SiteName {
            get {
                return this.siteNameField;
            }
            set {
                this.siteNameField = value;
            }
        }
        
        /// <remarks/>
        public string Address1 {
            get {
                return this.address1Field;
            }
            set {
                this.address1Field = value;
            }
        }
        
        /// <remarks/>
        public string Address2 {
            get {
                return this.address2Field;
            }
            set {
                this.address2Field = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string ZipCode {
            get {
                return this.zipCodeField;
            }
            set {
                this.zipCodeField = value;
            }
        }
        
        /// <remarks/>
        public Phone Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public Phone Fax {
            get {
                return this.faxField;
            }
            set {
                this.faxField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class Phone {
        
        private string areaCodeField;
        
        private string baseNumberField;
        
        private PhoneType typeField;
        
        /// <remarks/>
        public string AreaCode {
            get {
                return this.areaCodeField;
            }
            set {
                this.areaCodeField = value;
            }
        }
        
        /// <remarks/>
        public string BaseNumber {
            get {
                return this.baseNumberField;
            }
            set {
                this.baseNumberField = value;
            }
        }
        
        /// <remarks/>
        public PhoneType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public enum PhoneType {
        
        /// <remarks/>
        Home,
        
        /// <remarks/>
        Mobile,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetOfficeLocationsResponse {
        
        private OfficeLocation[] officeLocationsField;
        
        private string[] messagesField;
        
        private bool successField;
        
        /// <remarks/>
        public OfficeLocation[] OfficeLocations {
            get {
                return this.officeLocationsField;
            }
            set {
                this.officeLocationsField = value;
            }
        }
        
        /// <remarks/>
        public string[] Messages {
            get {
                return this.messagesField;
            }
            set {
                this.messagesField = value;
            }
        }
        
        /// <remarks/>
        public bool Success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class UpdateOfficeLocationResponse {
        
        private string licenseIDField;
        
        private string partnerIDField;
        
        private Errors[] errorsField;
        
        private int officeIDField;
        
        private string officeNameField;
        
        private string address1Field;
        
        private string address2Field;
        
        private string cityField;
        
        private string stateField;
        
        private string zipCodeField;
        
        private string phoneAreaCodeField;
        
        private string phoneNumberField;
        
        private string faxAreaCodeField;
        
        private string faxNumberField;
        
        private bool activeField;
        
        private string timeZoneField;
        
        private bool allowAdminField;
        
        private Preferences[] preferencesField;
        
        private bool isSuccessfulField;
        
        /// <remarks/>
        public string LicenseID {
            get {
                return this.licenseIDField;
            }
            set {
                this.licenseIDField = value;
            }
        }
        
        /// <remarks/>
        public string PartnerID {
            get {
                return this.partnerIDField;
            }
            set {
                this.partnerIDField = value;
            }
        }
        
        /// <remarks/>
        public Errors[] Errors {
            get {
                return this.errorsField;
            }
            set {
                this.errorsField = value;
            }
        }
        
        /// <remarks/>
        public int OfficeID {
            get {
                return this.officeIDField;
            }
            set {
                this.officeIDField = value;
            }
        }
        
        /// <remarks/>
        public string OfficeName {
            get {
                return this.officeNameField;
            }
            set {
                this.officeNameField = value;
            }
        }
        
        /// <remarks/>
        public string Address1 {
            get {
                return this.address1Field;
            }
            set {
                this.address1Field = value;
            }
        }
        
        /// <remarks/>
        public string Address2 {
            get {
                return this.address2Field;
            }
            set {
                this.address2Field = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string ZipCode {
            get {
                return this.zipCodeField;
            }
            set {
                this.zipCodeField = value;
            }
        }
        
        /// <remarks/>
        public string PhoneAreaCode {
            get {
                return this.phoneAreaCodeField;
            }
            set {
                this.phoneAreaCodeField = value;
            }
        }
        
        /// <remarks/>
        public string PhoneNumber {
            get {
                return this.phoneNumberField;
            }
            set {
                this.phoneNumberField = value;
            }
        }
        
        /// <remarks/>
        public string FaxAreaCode {
            get {
                return this.faxAreaCodeField;
            }
            set {
                this.faxAreaCodeField = value;
            }
        }
        
        /// <remarks/>
        public string FaxNumber {
            get {
                return this.faxNumberField;
            }
            set {
                this.faxNumberField = value;
            }
        }
        
        /// <remarks/>
        public bool Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
        
        /// <remarks/>
        public string TimeZone {
            get {
                return this.timeZoneField;
            }
            set {
                this.timeZoneField = value;
            }
        }
        
        /// <remarks/>
        public bool AllowAdmin {
            get {
                return this.allowAdminField;
            }
            set {
                this.allowAdminField = value;
            }
        }
        
        /// <remarks/>
        public Preferences[] Preferences {
            get {
                return this.preferencesField;
            }
            set {
                this.preferencesField = value;
            }
        }
        
        /// <remarks/>
        public bool IsSuccessful {
            get {
                return this.isSuccessfulField;
            }
            set {
                this.isSuccessfulField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class Errors {
        
        private ErrorType typeField;
        
        private string messagesField;
        
        /// <remarks/>
        public ErrorType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string Messages {
            get {
                return this.messagesField;
            }
            set {
                this.messagesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public enum ErrorType {
        
        /// <remarks/>
        CRITICAL,
        
        /// <remarks/>
        WARNING,
        
        /// <remarks/>
        NONE,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class Preferences {
        
        private string nameField;
        
        private string valueField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class AddOfficeLocationResponse {
        
        private string licenseIDField;
        
        private string partnerIDField;
        
        private Errors[] errorsField;
        
        private int officeIDField;
        
        private string officeNameField;
        
        private string address1Field;
        
        private string address2Field;
        
        private string cityField;
        
        private string stateField;
        
        private string zipCodeField;
        
        private string phoneAreaCodeField;
        
        private string phoneNumberField;
        
        private string faxAreaCodeField;
        
        private string faxNumberField;
        
        private string activeField;
        
        private string timeZoneField;
        
        private bool allowAdminField;
        
        private Preferences[] preferencesField;
        
        private bool isSuccessfulField;
        
        /// <remarks/>
        public string LicenseID {
            get {
                return this.licenseIDField;
            }
            set {
                this.licenseIDField = value;
            }
        }
        
        /// <remarks/>
        public string PartnerID {
            get {
                return this.partnerIDField;
            }
            set {
                this.partnerIDField = value;
            }
        }
        
        /// <remarks/>
        public Errors[] Errors {
            get {
                return this.errorsField;
            }
            set {
                this.errorsField = value;
            }
        }
        
        /// <remarks/>
        public int OfficeID {
            get {
                return this.officeIDField;
            }
            set {
                this.officeIDField = value;
            }
        }
        
        /// <remarks/>
        public string OfficeName {
            get {
                return this.officeNameField;
            }
            set {
                this.officeNameField = value;
            }
        }
        
        /// <remarks/>
        public string Address1 {
            get {
                return this.address1Field;
            }
            set {
                this.address1Field = value;
            }
        }
        
        /// <remarks/>
        public string Address2 {
            get {
                return this.address2Field;
            }
            set {
                this.address2Field = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string ZipCode {
            get {
                return this.zipCodeField;
            }
            set {
                this.zipCodeField = value;
            }
        }
        
        /// <remarks/>
        public string PhoneAreaCode {
            get {
                return this.phoneAreaCodeField;
            }
            set {
                this.phoneAreaCodeField = value;
            }
        }
        
        /// <remarks/>
        public string PhoneNumber {
            get {
                return this.phoneNumberField;
            }
            set {
                this.phoneNumberField = value;
            }
        }
        
        /// <remarks/>
        public string FaxAreaCode {
            get {
                return this.faxAreaCodeField;
            }
            set {
                this.faxAreaCodeField = value;
            }
        }
        
        /// <remarks/>
        public string FaxNumber {
            get {
                return this.faxNumberField;
            }
            set {
                this.faxNumberField = value;
            }
        }
        
        /// <remarks/>
        public string Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
        
        /// <remarks/>
        public string TimeZone {
            get {
                return this.timeZoneField;
            }
            set {
                this.timeZoneField = value;
            }
        }
        
        /// <remarks/>
        public bool AllowAdmin {
            get {
                return this.allowAdminField;
            }
            set {
                this.allowAdminField = value;
            }
        }
        
        /// <remarks/>
        public Preferences[] Preferences {
            get {
                return this.preferencesField;
            }
            set {
                this.preferencesField = value;
            }
        }
        
        /// <remarks/>
        public bool IsSuccessful {
            get {
                return this.isSuccessfulField;
            }
            set {
                this.isSuccessfulField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class PriorAuthorizationStatus {
        
        private System.DateTime createdDateTimeField;
        
        private PriorAuthorizationStatusType priorAuthorizationField;
        
        /// <remarks/>
        public System.DateTime CreatedDateTime {
            get {
                return this.createdDateTimeField;
            }
            set {
                this.createdDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public PriorAuthorizationStatusType PriorAuthorization {
            get {
                return this.priorAuthorizationField;
            }
            set {
                this.priorAuthorizationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public enum PriorAuthorizationStatusType {
        
        /// <remarks/>
        Ready,
        
        /// <remarks/>
        Saved,
        
        /// <remarks/>
        Submitted,
        
        /// <remarks/>
        Approved,
        
        /// <remarks/>
        Denied,
        
        /// <remarks/>
        Cancelled,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class SpecialtyEnrollmentStatus {
        
        private System.DateTime createdDateTimeField;
        
        private ProgramEnrollmentStatusType specialtyEnrollmentField;
        
        /// <remarks/>
        public System.DateTime CreatedDateTime {
            get {
                return this.createdDateTimeField;
            }
            set {
                this.createdDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public ProgramEnrollmentStatusType SpecialtyEnrollment {
            get {
                return this.specialtyEnrollmentField;
            }
            set {
                this.specialtyEnrollmentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public enum ProgramEnrollmentStatusType {
        
        /// <remarks/>
        Ready,
        
        /// <remarks/>
        Saved,
        
        /// <remarks/>
        Submitted,
        
        /// <remarks/>
        Benefits_Investigation_Approved,
        
        /// <remarks/>
        Copay_Approved,
        
        /// <remarks/>
        Patient_Eligibility_Approved,
        
        /// <remarks/>
        Starter_Pack_Dispensed,
        
        /// <remarks/>
        Preferred_Pharmacy,
        
        /// <remarks/>
        Cancelled,
        
        /// <remarks/>
        Trial_Pack_Starter_Pack_Dispensed,
        
        /// <remarks/>
        Trial_Pack_Starter_Pack_Denied,
        
        /// <remarks/>
        Trial_Pack_Starter_Pack_Cancelled,
        
        /// <remarks/>
        Copay_Denied,
        
        /// <remarks/>
        First_Dose_Observation_Complete,
        
        /// <remarks/>
        First_Dose_Observation_Cancelled,
        
        /// <remarks/>
        Labs_Initiated,
        
        /// <remarks/>
        Labs_Complete,
        
        /// <remarks/>
        Labs_Cancelled,
        
        /// <remarks/>
        Nurse_Training_Complete,
        
        /// <remarks/>
        Nurse_Training_Cancelled,
        
        /// <remarks/>
        Medication_Device_Shipment_Complete,
        
        /// <remarks/>
        Medication_Device_Shipment_Cancelled,
        
        /// <remarks/>
        Inpatient_Transition_Support_Complete,
        
        /// <remarks/>
        Inpatient_Transition_Support_Cancelled,
        
        /// <remarks/>
        Smn_Complete,
        
        /// <remarks/>
        Smn_Cancelled,
        
        /// <remarks/>
        Pap_Approved,
        
        /// <remarks/>
        Pap_Denied,
        
        /// <remarks/>
        Patient_Support_Enrollment_Complete,
        
        /// <remarks/>
        Patient_Support_Enrollment_Cancelled,
        
        /// <remarks/>
        Nurse_Support_Complete,
        
        /// <remarks/>
        Nurse_Support_Cancelled,
        
        /// <remarks/>
        Medication_Reminders_Complete,
        
        /// <remarks/>
        Medication_Reminders_Cancelled,
        
        /// <remarks/>
        Other_Other,
        
        /// <remarks/>
        Contact_Us,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class StatusMessageMultiple {
        
        private int activityIdField;
        
        private ProgramEnrollmentStatusType specialtyEnrollmentStatusField;
        
        private PriorAuthorizationStatusType priorAuthorizationStatusField;
        
        private string statusTextField;
        
        private string paDenialReasonField;
        
        private string priorAuthorizationFileField;
        
        private string summaryReportField;
        
        private string vendorApplicationUrlField;
        
        private string vendorTransactionIdField;
        
        private string recommendedPharmacyField;
        
        private SpecialtyEnrollmentStatus[] specialtyEnrollmentStatusHistoryField;
        
        private PriorAuthorizationStatus[] priorAuthorizationStatusHistoryField;
        
        /// <remarks/>
        public int ActivityId {
            get {
                return this.activityIdField;
            }
            set {
                this.activityIdField = value;
            }
        }
        
        /// <remarks/>
        public ProgramEnrollmentStatusType SpecialtyEnrollmentStatus {
            get {
                return this.specialtyEnrollmentStatusField;
            }
            set {
                this.specialtyEnrollmentStatusField = value;
            }
        }
        
        /// <remarks/>
        public PriorAuthorizationStatusType PriorAuthorizationStatus {
            get {
                return this.priorAuthorizationStatusField;
            }
            set {
                this.priorAuthorizationStatusField = value;
            }
        }
        
        /// <remarks/>
        public string StatusText {
            get {
                return this.statusTextField;
            }
            set {
                this.statusTextField = value;
            }
        }
        
        /// <remarks/>
        public string PaDenialReason {
            get {
                return this.paDenialReasonField;
            }
            set {
                this.paDenialReasonField = value;
            }
        }
        
        /// <remarks/>
        public string PriorAuthorizationFile {
            get {
                return this.priorAuthorizationFileField;
            }
            set {
                this.priorAuthorizationFileField = value;
            }
        }
        
        /// <remarks/>
        public string SummaryReport {
            get {
                return this.summaryReportField;
            }
            set {
                this.summaryReportField = value;
            }
        }
        
        /// <remarks/>
        public string VendorApplicationUrl {
            get {
                return this.vendorApplicationUrlField;
            }
            set {
                this.vendorApplicationUrlField = value;
            }
        }
        
        /// <remarks/>
        public string VendorTransactionId {
            get {
                return this.vendorTransactionIdField;
            }
            set {
                this.vendorTransactionIdField = value;
            }
        }
        
        /// <remarks/>
        public string RecommendedPharmacy {
            get {
                return this.recommendedPharmacyField;
            }
            set {
                this.recommendedPharmacyField = value;
            }
        }
        
        /// <remarks/>
        public SpecialtyEnrollmentStatus[] SpecialtyEnrollmentStatusHistory {
            get {
                return this.specialtyEnrollmentStatusHistoryField;
            }
            set {
                this.specialtyEnrollmentStatusHistoryField = value;
            }
        }
        
        /// <remarks/>
        public PriorAuthorizationStatus[] PriorAuthorizationStatusHistory {
            get {
                return this.priorAuthorizationStatusHistoryField;
            }
            set {
                this.priorAuthorizationStatusHistoryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class StatusMessage {
        
        private int activityIdField;
        
        private ProgramEnrollmentStatusType specialtyEnrollmentStatusField;
        
        private PriorAuthorizationStatusType priorAuthorizationStatusField;
        
        private string statusTextField;
        
        private string paDenialReasonField;
        
        private string priorAuthorizationFileField;
        
        private string summaryReportField;
        
        private string vendorApplicationUrlField;
        
        private string vendorTransactionIdField;
        
        /// <remarks/>
        public int ActivityId {
            get {
                return this.activityIdField;
            }
            set {
                this.activityIdField = value;
            }
        }
        
        /// <remarks/>
        public ProgramEnrollmentStatusType SpecialtyEnrollmentStatus {
            get {
                return this.specialtyEnrollmentStatusField;
            }
            set {
                this.specialtyEnrollmentStatusField = value;
            }
        }
        
        /// <remarks/>
        public PriorAuthorizationStatusType PriorAuthorizationStatus {
            get {
                return this.priorAuthorizationStatusField;
            }
            set {
                this.priorAuthorizationStatusField = value;
            }
        }
        
        /// <remarks/>
        public string StatusText {
            get {
                return this.statusTextField;
            }
            set {
                this.statusTextField = value;
            }
        }
        
        /// <remarks/>
        public string PaDenialReason {
            get {
                return this.paDenialReasonField;
            }
            set {
                this.paDenialReasonField = value;
            }
        }
        
        /// <remarks/>
        public string PriorAuthorizationFile {
            get {
                return this.priorAuthorizationFileField;
            }
            set {
                this.priorAuthorizationFileField = value;
            }
        }
        
        /// <remarks/>
        public string SummaryReport {
            get {
                return this.summaryReportField;
            }
            set {
                this.summaryReportField = value;
            }
        }
        
        /// <remarks/>
        public string VendorApplicationUrl {
            get {
                return this.vendorApplicationUrlField;
            }
            set {
                this.vendorApplicationUrlField = value;
            }
        }
        
        /// <remarks/>
        public string VendorTransactionId {
            get {
                return this.vendorTransactionIdField;
            }
            set {
                this.vendorTransactionIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class ClientInfo {
        
        private CodedValueType installationIDField;
        
        private string versionField;
        
        private string integratedProductNameField;
        
        private string integratedProductVersionField;
        
        /// <remarks/>
        public CodedValueType InstallationID {
            get {
                return this.installationIDField;
            }
            set {
                this.installationIDField = value;
            }
        }
        
        /// <remarks/>
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        public string IntegratedProductName {
            get {
                return this.integratedProductNameField;
            }
            set {
                this.integratedProductNameField = value;
            }
        }
        
        /// <remarks/>
        public string IntegratedProductVersion {
            get {
                return this.integratedProductVersionField;
            }
            set {
                this.integratedProductVersionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:Allscripts:mombt")]
    public partial class CodedValueType {
        
        private string codeValueField;
        
        private string codeDescriptionField;
        
        private string codeTypeField;
        
        private string codingSystemField;
        
        private CodedValueTypeExtended extendedField;
        
        private string audienceField;
        
        /// <remarks/>
        public string CodeValue {
            get {
                return this.codeValueField;
            }
            set {
                this.codeValueField = value;
            }
        }
        
        /// <remarks/>
        public string CodeDescription {
            get {
                return this.codeDescriptionField;
            }
            set {
                this.codeDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string CodeType {
            get {
                return this.codeTypeField;
            }
            set {
                this.codeTypeField = value;
            }
        }
        
        /// <remarks/>
        public string CodingSystem {
            get {
                return this.codingSystemField;
            }
            set {
                this.codingSystemField = value;
            }
        }
        
        /// <remarks/>
        public CodedValueTypeExtended Extended {
            get {
                return this.extendedField;
            }
            set {
                this.extendedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Audience {
            get {
                return this.audienceField;
            }
            set {
                this.audienceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:Allscripts:mombt")]
    public partial class CodedValueTypeExtended {
        
        private string alternativeCodeValueField;
        
        private string alternativeCodeDescriptionField;
        
        private string alternativeCodeTypeField;
        
        private string alternativeCodingSystemField;
        
        private HierarchicalDesignator assigningAuthorityField;
        
        private CheckDigit checkDigitField;
        
        private HierarchicalDesignator assigningFacilityField;
        
        /// <remarks/>
        public string AlternativeCodeValue {
            get {
                return this.alternativeCodeValueField;
            }
            set {
                this.alternativeCodeValueField = value;
            }
        }
        
        /// <remarks/>
        public string AlternativeCodeDescription {
            get {
                return this.alternativeCodeDescriptionField;
            }
            set {
                this.alternativeCodeDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string AlternativeCodeType {
            get {
                return this.alternativeCodeTypeField;
            }
            set {
                this.alternativeCodeTypeField = value;
            }
        }
        
        /// <remarks/>
        public string AlternativeCodingSystem {
            get {
                return this.alternativeCodingSystemField;
            }
            set {
                this.alternativeCodingSystemField = value;
            }
        }
        
        /// <remarks/>
        public HierarchicalDesignator AssigningAuthority {
            get {
                return this.assigningAuthorityField;
            }
            set {
                this.assigningAuthorityField = value;
            }
        }
        
        /// <remarks/>
        public CheckDigit CheckDigit {
            get {
                return this.checkDigitField;
            }
            set {
                this.checkDigitField = value;
            }
        }
        
        /// <remarks/>
        public HierarchicalDesignator AssigningFacility {
            get {
                return this.assigningFacilityField;
            }
            set {
                this.assigningFacilityField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:Allscripts:mombt")]
    public partial class HierarchicalDesignator {
        
        private string namespaceIDField;
        
        private string universalIDField;
        
        private string universalIDTypeField;
        
        /// <remarks/>
        public string NamespaceID {
            get {
                return this.namespaceIDField;
            }
            set {
                this.namespaceIDField = value;
            }
        }
        
        /// <remarks/>
        public string UniversalID {
            get {
                return this.universalIDField;
            }
            set {
                this.universalIDField = value;
            }
        }
        
        /// <remarks/>
        public string UniversalIDType {
            get {
                return this.universalIDTypeField;
            }
            set {
                this.universalIDTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:Allscripts:mombt")]
    public partial class CheckDigit {
        
        private CheckDigitCheckDigitType checkDigitTypeField;
        
        private string checkDigitValueField;
        
        /// <remarks/>
        public CheckDigitCheckDigitType CheckDigitType {
            get {
                return this.checkDigitTypeField;
            }
            set {
                this.checkDigitTypeField = value;
            }
        }
        
        /// <remarks/>
        public string CheckDigitValue {
            get {
                return this.checkDigitValueField;
            }
            set {
                this.checkDigitValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="urn:Allscripts:mombt")]
    public enum CheckDigitCheckDigitType {
        
        /// <remarks/>
        M10,
        
        /// <remarks/>
        M11,
        
        /// <remarks/>
        ISO,
        
        /// <remarks/>
        NPI,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:Allscripts:mombt")]
    public partial class MultipleBirth {
        
        private string birthOrderField;
        
        private string audienceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string BirthOrder {
            get {
                return this.birthOrderField;
            }
            set {
                this.birthOrderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Audience {
            get {
                return this.audienceField;
            }
            set {
                this.audienceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:Allscripts:mombt")]
    public partial class DriversLicense {
        
        private string driverLicenseIDField;
        
        private string driverLicenseIssueStateField;
        
        private System.DateTime driverLicenseExpirationDateField;
        
        private bool driverLicenseExpirationDateFieldSpecified;
        
        /// <remarks/>
        public string DriverLicenseID {
            get {
                return this.driverLicenseIDField;
            }
            set {
                this.driverLicenseIDField = value;
            }
        }
        
        /// <remarks/>
        public string DriverLicenseIssueState {
            get {
                return this.driverLicenseIssueStateField;
            }
            set {
                this.driverLicenseIssueStateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime DriverLicenseExpirationDate {
            get {
                return this.driverLicenseExpirationDateField;
            }
            set {
                this.driverLicenseExpirationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DriverLicenseExpirationDateSpecified {
            get {
                return this.driverLicenseExpirationDateFieldSpecified;
            }
            set {
                this.driverLicenseExpirationDateFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:Allscripts:mombt")]
    public partial class InsurancePlan {
        
        private string planCodeField;
        
        private string planDescriptionField;
        
        private decimal planCoInsurAmountField;
        
        private bool planCoInsurAmountFieldSpecified;
        
        private decimal planCoPayAmountField;
        
        private bool planCoPayAmountFieldSpecified;
        
        private decimal planDeductibleAmountField;
        
        private bool planDeductibleAmountFieldSpecified;
        
        private string audienceField;
        
        /// <remarks/>
        public string PlanCode {
            get {
                return this.planCodeField;
            }
            set {
                this.planCodeField = value;
            }
        }
        
        /// <remarks/>
        public string PlanDescription {
            get {
                return this.planDescriptionField;
            }
            set {
                this.planDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public decimal PlanCoInsurAmount {
            get {
                return this.planCoInsurAmountField;
            }
            set {
                this.planCoInsurAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PlanCoInsurAmountSpecified {
            get {
                return this.planCoInsurAmountFieldSpecified;
            }
            set {
                this.planCoInsurAmountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public decimal PlanCoPayAmount {
            get {
                return this.planCoPayAmountField;
            }
            set {
                this.planCoPayAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PlanCoPayAmountSpecified {
            get {
                return this.planCoPayAmountFieldSpecified;
            }
            set {
                this.planCoPayAmountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public decimal PlanDeductibleAmount {
            get {
                return this.planDeductibleAmountField;
            }
            set {
                this.planDeductibleAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PlanDeductibleAmountSpecified {
            get {
                return this.planDeductibleAmountFieldSpecified;
            }
            set {
                this.planDeductibleAmountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Audience {
            get {
                return this.audienceField;
            }
            set {
                this.audienceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:Allscripts:mombt")]
    public partial class Policy {
        
        private Organization carrierField;
        
        private Person subscriberField;
        
        private string insuranceTypeField;
        
        private string policySequenceNoField;
        
        private string coverageTypeField;
        
        private string coverageField;
        
        private string acceptAssignField;
        
        private string certificateNoField;
        
        private string certificateSuffixField;
        
        private EffectivePeriod effectiveField;
        
        private string groupNameField;
        
        private string groupNumberField;
        
        private InsurancePlan planField;
        
        private string audienceField;
        
        /// <remarks/>
        public Organization Carrier {
            get {
                return this.carrierField;
            }
            set {
                this.carrierField = value;
            }
        }
        
        /// <remarks/>
        public Person Subscriber {
            get {
                return this.subscriberField;
            }
            set {
                this.subscriberField = value;
            }
        }
        
        /// <remarks/>
        public string InsuranceType {
            get {
                return this.insuranceTypeField;
            }
            set {
                this.insuranceTypeField = value;
            }
        }
        
        /// <remarks/>
        public string PolicySequenceNo {
            get {
                return this.policySequenceNoField;
            }
            set {
                this.policySequenceNoField = value;
            }
        }
        
        /// <remarks/>
        public string CoverageType {
            get {
                return this.coverageTypeField;
            }
            set {
                this.coverageTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Coverage {
            get {
                return this.coverageField;
            }
            set {
                this.coverageField = value;
            }
        }
        
        /// <remarks/>
        public string AcceptAssign {
            get {
                return this.acceptAssignField;
            }
            set {
                this.acceptAssignField = value;
            }
        }
        
        /// <remarks/>
        public string CertificateNo {
            get {
                return this.certificateNoField;
            }
            set {
                this.certificateNoField = value;
            }
        }
        
        /// <remarks/>
        public string CertificateSuffix {
            get {
                return this.certificateSuffixField;
            }
            set {
                this.certificateSuffixField = value;
            }
        }
        
        /// <remarks/>
        public EffectivePeriod Effective {
            get {
                return this.effectiveField;
            }
            set {
                this.effectiveField = value;
            }
        }
        
        /// <remarks/>
        public string GroupName {
            get {
                return this.groupNameField;
            }
            set {
                this.groupNameField = value;
            }
        }
        
        /// <remarks/>
        public string GroupNumber {
            get {
                return this.groupNumberField;
            }
            set {
                this.groupNumberField = value;
            }
        }
        
        /// <remarks/>
        public InsurancePlan Plan {
            get {
                return this.planField;
            }
            set {
                this.planField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Audience {
            get {
                return this.audienceField;
            }
            set {
                this.audienceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:Allscripts:mombt")]
    public partial class Organization {
        
        private string nameField;
        
        private string typeField;
        
        private CodedValueType[] iDsField;
        
        private Address1 addressField;
        
        private string[] contactField;
        
        private PhoneNumber[] phonesField;
        
        private Email[] emailField;
        
        private string audienceField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("IDs")]
        public CodedValueType[] IDs {
            get {
                return this.iDsField;
            }
            set {
                this.iDsField = value;
            }
        }
        
        /// <remarks/>
        public Address1 Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Contact")]
        public string[] Contact {
            get {
                return this.contactField;
            }
            set {
                this.contactField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Phones")]
        public PhoneNumber[] Phones {
            get {
                return this.phonesField;
            }
            set {
                this.phonesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Email")]
        public Email[] Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Audience {
            get {
                return this.audienceField;
            }
            set {
                this.audienceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="Address", Namespace="urn:Allscripts:mombt")]
    public partial class Address1 {
        
        private object itemField;
        
        private string audienceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("SimpleAddress", typeof(string))]
        [System.Xml.Serialization.XmlElementAttribute("StructuredAddress", typeof(StructuredAddress))]
        public object Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Audience {
            get {
                return this.audienceField;
            }
            set {
                this.audienceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:Allscripts:mombt")]
    public partial class StructuredAddress {
        
        private string streetAddress1Field;
        
        private string streetAddress2Field;
        
        private string cityField;
        
        private string stateOrProvinceField;
        
        private string postalCodeField;
        
        private string countryField;
        
        private AddressType addressTypeField;
        
        private bool addressTypeFieldSpecified;
        
        private string countyCodeField;
        
        private string audienceField;
        
        public StructuredAddress() {
            this.countryField = "US";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
        public string StreetAddress1 {
            get {
                return this.streetAddress1Field;
            }
            set {
                this.streetAddress1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
        public string StreetAddress2 {
            get {
                return this.streetAddress2Field;
            }
            set {
                this.streetAddress2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
        public string StateOrProvince {
            get {
                return this.stateOrProvinceField;
            }
            set {
                this.stateOrProvinceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
        public string PostalCode {
            get {
                return this.postalCodeField;
            }
            set {
                this.postalCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute("US")]
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        public AddressType AddressType {
            get {
                return this.addressTypeField;
            }
            set {
                this.addressTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AddressTypeSpecified {
            get {
                return this.addressTypeFieldSpecified;
            }
            set {
                this.addressTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string CountyCode {
            get {
                return this.countyCodeField;
            }
            set {
                this.countyCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Audience {
            get {
                return this.audienceField;
            }
            set {
                this.audienceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:Allscripts:momst")]
    public enum AddressType {
        
        /// <remarks/>
        Billing,
        
        /// <remarks/>
        Birth,
        
        /// <remarks/>
        Temporary,
        
        /// <remarks/>
        Home,
        
        /// <remarks/>
        Communication,
        
        /// <remarks/>
        Mailing,
        
        /// <remarks/>
        CountryOfOrigin,
        
        /// <remarks/>
        Office,
        
        /// <remarks/>
        Business,
        
        /// <remarks/>
        Permanent,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:Allscripts:mombt")]
    public partial class PhoneNumber {
        
        private PhoneType1 typeField;
        
        private bool typeFieldSpecified;
        
        private string descriptionField;
        
        private object itemField;
        
        private TelecommunicationUse telecommunicationUseField;
        
        private bool telecommunicationUseFieldSpecified;
        
        private TelecommunicationEquipmentType telecommunicationEquipmentTypeField;
        
        private bool telecommunicationEquipmentTypeFieldSpecified;
        
        private string audienceField;
        
        /// <remarks/>
        public PhoneType1 Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified {
            get {
                return this.typeFieldSpecified;
            }
            set {
                this.typeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("SimplePhoneNumber", typeof(string), DataType="normalizedString")]
        [System.Xml.Serialization.XmlElementAttribute("StructuredPhoneNumber", typeof(StructuredPhoneNumber))]
        public object Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
        
        /// <remarks/>
        public TelecommunicationUse TelecommunicationUse {
            get {
                return this.telecommunicationUseField;
            }
            set {
                this.telecommunicationUseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TelecommunicationUseSpecified {
            get {
                return this.telecommunicationUseFieldSpecified;
            }
            set {
                this.telecommunicationUseFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public TelecommunicationEquipmentType TelecommunicationEquipmentType {
            get {
                return this.telecommunicationEquipmentTypeField;
            }
            set {
                this.telecommunicationEquipmentTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TelecommunicationEquipmentTypeSpecified {
            get {
                return this.telecommunicationEquipmentTypeFieldSpecified;
            }
            set {
                this.telecommunicationEquipmentTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Audience {
            get {
                return this.audienceField;
            }
            set {
                this.audienceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="PhoneType", Namespace="urn:Allscripts:momst")]
    public enum PhoneType1 {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item3,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("4")]
        Item4,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:Allscripts:mombt")]
    public partial class StructuredPhoneNumber {
        
        private string countryCodeField;
        
        private string cityCodeField;
        
        private string localNumberField;
        
        private string extensionField;
        
        private string audienceField;
        
        public StructuredPhoneNumber() {
            this.countryCodeField = "1";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
        [System.ComponentModel.DefaultValueAttribute("1")]
        public string CountryCode {
            get {
                return this.countryCodeField;
            }
            set {
                this.countryCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
        public string CityCode {
            get {
                return this.cityCodeField;
            }
            set {
                this.cityCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
        public string LocalNumber {
            get {
                return this.localNumberField;
            }
            set {
                this.localNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="normalizedString")]
        public string Extension {
            get {
                return this.extensionField;
            }
            set {
                this.extensionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Audience {
            get {
                return this.audienceField;
            }
            set {
                this.audienceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:Allscripts:momst")]
    public enum TelecommunicationUse {
        
        /// <remarks/>
        AnsweringServiceNumber,
        
        /// <remarks/>
        CellularPhone,
        
        /// <remarks/>
        EmergencyNumber,
        
        /// <remarks/>
        HomeNumber,
        
        /// <remarks/>
        VacationHomeNumber,
        
        /// <remarks/>
        OtherResidenceNumber,
        
        /// <remarks/>
        WorkNumber,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:Allscripts:momst")]
    public enum TelecommunicationEquipmentType {
        
        /// <remarks/>
        Telephone,
        
        /// <remarks/>
        Fax,
        
        /// <remarks/>
        Modem,
        
        /// <remarks/>
        CellularPhone,
        
        /// <remarks/>
        Beeper,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:Allscripts:mombt")]
    public partial class Email {
        
        private string typeField;
        
        private string emailAddressField;
        
        private string audienceField;
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string EmailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Audience {
            get {
                return this.audienceField;
            }
            set {
                this.audienceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:Allscripts:mombt")]
    public partial class Person {
        
        private CodedValueType[] iDsField;
        
        private string typeField;
        
        private string relationshipField;
        
        private Name nameField;
        
        private Address1 addressField;
        
        private string ssnField;
        
        private System.DateTime dateOfBirthField;
        
        private bool dateOfBirthFieldSpecified;
        
        private Gender1 genderField;
        
        private bool genderFieldSpecified;
        
        private PhoneNumber[] phonesField;
        
        private Organization employerField;
        
        private Email[] emailField;
        
        private string audienceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("IDs")]
        public CodedValueType[] IDs {
            get {
                return this.iDsField;
            }
            set {
                this.iDsField = value;
            }
        }
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string Relationship {
            get {
                return this.relationshipField;
            }
            set {
                this.relationshipField = value;
            }
        }
        
        /// <remarks/>
        public Name Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public Address1 Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        public string Ssn {
            get {
                return this.ssnField;
            }
            set {
                this.ssnField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateOfBirth {
            get {
                return this.dateOfBirthField;
            }
            set {
                this.dateOfBirthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DateOfBirthSpecified {
            get {
                return this.dateOfBirthFieldSpecified;
            }
            set {
                this.dateOfBirthFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public Gender1 Gender {
            get {
                return this.genderField;
            }
            set {
                this.genderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GenderSpecified {
            get {
                return this.genderFieldSpecified;
            }
            set {
                this.genderFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Phones")]
        public PhoneNumber[] Phones {
            get {
                return this.phonesField;
            }
            set {
                this.phonesField = value;
            }
        }
        
        /// <remarks/>
        public Organization Employer {
            get {
                return this.employerField;
            }
            set {
                this.employerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Email")]
        public Email[] Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Audience {
            get {
                return this.audienceField;
            }
            set {
                this.audienceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:Allscripts:mombt")]
    public partial class Name {
        
        private string titleField;
        
        private string firstField;
        
        private string middleField;
        
        private string lastField;
        
        private string suffixField;
        
        private NameType nameTypeField;
        
        private string degreeField;
        
        private string audienceField;
        
        public Name() {
            this.nameTypeField = NameType.Legal;
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string First {
            get {
                return this.firstField;
            }
            set {
                this.firstField = value;
            }
        }
        
        /// <remarks/>
        public string Middle {
            get {
                return this.middleField;
            }
            set {
                this.middleField = value;
            }
        }
        
        /// <remarks/>
        public string Last {
            get {
                return this.lastField;
            }
            set {
                this.lastField = value;
            }
        }
        
        /// <remarks/>
        public string Suffix {
            get {
                return this.suffixField;
            }
            set {
                this.suffixField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(NameType.Legal)]
        public NameType NameType {
            get {
                return this.nameTypeField;
            }
            set {
                this.nameTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Degree {
            get {
                return this.degreeField;
            }
            set {
                this.degreeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Audience {
            get {
                return this.audienceField;
            }
            set {
                this.audienceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:Allscripts:momst")]
    public enum NameType {
        
        /// <remarks/>
        Adopted,
        
        /// <remarks/>
        Alias,
        
        /// <remarks/>
        BirthName,
        
        /// <remarks/>
        Legal,
        
        /// <remarks/>
        Maiden,
        
        /// <remarks/>
        Preferred,
        
        /// <remarks/>
        Unspecified,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="Gender", Namespace="urn:Allscripts:momst")]
    public enum Gender1 {
        
        /// <remarks/>
        Female,
        
        /// <remarks/>
        Male,
        
        /// <remarks/>
        Undifferentiated,
        
        /// <remarks/>
        undifferentiated,
        
        /// <remarks/>
        F,
        
        /// <remarks/>
        M,
        
        /// <remarks/>
        U,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item3,
        
        /// <remarks/>
        f,
        
        /// <remarks/>
        m,
        
        /// <remarks/>
        u,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:Allscripts:mombt")]
    public partial class EffectivePeriod {
        
        private System.DateTime effectiveDateField;
        
        private bool effectiveDateFieldSpecified;
        
        private System.DateTime expirationDateField;
        
        private bool expirationDateFieldSpecified;
        
        private string audienceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime EffectiveDate {
            get {
                return this.effectiveDateField;
            }
            set {
                this.effectiveDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EffectiveDateSpecified {
            get {
                return this.effectiveDateFieldSpecified;
            }
            set {
                this.effectiveDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime ExpirationDate {
            get {
                return this.expirationDateField;
            }
            set {
                this.expirationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExpirationDateSpecified {
            get {
                return this.expirationDateFieldSpecified;
            }
            set {
                this.expirationDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Audience {
            get {
                return this.audienceField;
            }
            set {
                this.audienceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:Allscripts:mombt")]
    public partial class Provider {
        
        private string npiField;
        
        private string roleField;
        
        private CodedValueType[] iDsField;
        
        private Name nameField;
        
        private string specialityField;
        
        private string audienceField;
        
        /// <remarks/>
        public string Npi {
            get {
                return this.npiField;
            }
            set {
                this.npiField = value;
            }
        }
        
        /// <remarks/>
        public string Role {
            get {
                return this.roleField;
            }
            set {
                this.roleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("IDs")]
        public CodedValueType[] IDs {
            get {
                return this.iDsField;
            }
            set {
                this.iDsField = value;
            }
        }
        
        /// <remarks/>
        public Name Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Speciality {
            get {
                return this.specialityField;
            }
            set {
                this.specialityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Audience {
            get {
                return this.audienceField;
            }
            set {
                this.audienceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:Allscripts:mombt")]
    public partial class FinancialDetail {
        
        private string financialClassField;
        
        private decimal patientBalanceField;
        
        private bool patientBalanceFieldSpecified;
        
        private decimal insuranceBalanceField;
        
        private bool insuranceBalanceFieldSpecified;
        
        private decimal collectionBalanceField;
        
        private bool collectionBalanceFieldSpecified;
        
        private string audienceField;
        
        /// <remarks/>
        public string FinancialClass {
            get {
                return this.financialClassField;
            }
            set {
                this.financialClassField = value;
            }
        }
        
        /// <remarks/>
        public decimal PatientBalance {
            get {
                return this.patientBalanceField;
            }
            set {
                this.patientBalanceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PatientBalanceSpecified {
            get {
                return this.patientBalanceFieldSpecified;
            }
            set {
                this.patientBalanceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public decimal InsuranceBalance {
            get {
                return this.insuranceBalanceField;
            }
            set {
                this.insuranceBalanceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InsuranceBalanceSpecified {
            get {
                return this.insuranceBalanceFieldSpecified;
            }
            set {
                this.insuranceBalanceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public decimal CollectionBalance {
            get {
                return this.collectionBalanceField;
            }
            set {
                this.collectionBalanceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CollectionBalanceSpecified {
            get {
                return this.collectionBalanceFieldSpecified;
            }
            set {
                this.collectionBalanceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Audience {
            get {
                return this.audienceField;
            }
            set {
                this.audienceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:Allscripts:mombt")]
    public partial class Account {
        
        private string accountNumberField;
        
        private CodedValueType[] iDsField;
        
        private Person guarantorField;
        
        private CodedValueType accountTypeField;
        
        private FinancialDetail financialField;
        
        private Location locationField;
        
        private string audienceField;
        
        /// <remarks/>
        public string AccountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("IDs")]
        public CodedValueType[] IDs {
            get {
                return this.iDsField;
            }
            set {
                this.iDsField = value;
            }
        }
        
        /// <remarks/>
        public Person Guarantor {
            get {
                return this.guarantorField;
            }
            set {
                this.guarantorField = value;
            }
        }
        
        /// <remarks/>
        public CodedValueType AccountType {
            get {
                return this.accountTypeField;
            }
            set {
                this.accountTypeField = value;
            }
        }
        
        /// <remarks/>
        public FinancialDetail Financial {
            get {
                return this.financialField;
            }
            set {
                this.financialField = value;
            }
        }
        
        /// <remarks/>
        public Location Location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Audience {
            get {
                return this.audienceField;
            }
            set {
                this.audienceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:Allscripts:mombt")]
    public partial class Location {
        
        private string codeField;
        
        private string nameField;
        
        private string typeField;
        
        private Address1 addressField;
        
        private string[] contactField;
        
        private PhoneNumber[] phonesField;
        
        private string audienceField;
        
        /// <remarks/>
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public Address1 Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Contact")]
        public string[] Contact {
            get {
                return this.contactField;
            }
            set {
                this.contactField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Phones")]
        public PhoneNumber[] Phones {
            get {
                return this.phonesField;
            }
            set {
                this.phonesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Audience {
            get {
                return this.audienceField;
            }
            set {
                this.audienceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:Allscripts:mombt")]
    public partial class CustomField {
        
        private string typeField;
        
        private string nameField;
        
        private string valueField;
        
        private string audienceField;
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Audience {
            get {
                return this.audienceField;
            }
            set {
                this.audienceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:Allscripts:mombt")]
    public partial class AdvanceDirectiveCode {
        
        private string advanceDirectiveIDField;
        
        private string alternateIdentifierField;
        
        private string audienceField;
        
        /// <remarks/>
        public string AdvanceDirectiveID {
            get {
                return this.advanceDirectiveIDField;
            }
            set {
                this.advanceDirectiveIDField = value;
            }
        }
        
        /// <remarks/>
        public string AlternateIdentifier {
            get {
                return this.alternateIdentifierField;
            }
            set {
                this.alternateIdentifierField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Audience {
            get {
                return this.audienceField;
            }
            set {
                this.audienceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:Allscripts:mombt")]
    public partial class CommunityHie {
        
        private string signatureOnFileField;
        
        private EffectivePeriod signatureDateField;
        
        private Indicator refusalIndicatorField;
        
        private Indicator securityIndicatorField;
        
        private string audienceField;
        
        /// <remarks/>
        public string SignatureOnFile {
            get {
                return this.signatureOnFileField;
            }
            set {
                this.signatureOnFileField = value;
            }
        }
        
        /// <remarks/>
        public EffectivePeriod SignatureDate {
            get {
                return this.signatureDateField;
            }
            set {
                this.signatureDateField = value;
            }
        }
        
        /// <remarks/>
        public Indicator RefusalIndicator {
            get {
                return this.refusalIndicatorField;
            }
            set {
                this.refusalIndicatorField = value;
            }
        }
        
        /// <remarks/>
        public Indicator SecurityIndicator {
            get {
                return this.securityIndicatorField;
            }
            set {
                this.securityIndicatorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Audience {
            get {
                return this.audienceField;
            }
            set {
                this.audienceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:Allscripts:mombt")]
    public partial class Indicator {
        
        private string indicatorTypeField;
        
        private string indicationField;
        
        private string descriptionField;
        
        private string levelField;
        
        private EffectivePeriod effectivePeriodField;
        
        private string audienceField;
        
        /// <remarks/>
        public string IndicatorType {
            get {
                return this.indicatorTypeField;
            }
            set {
                this.indicatorTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Indication {
            get {
                return this.indicationField;
            }
            set {
                this.indicationField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Level {
            get {
                return this.levelField;
            }
            set {
                this.levelField = value;
            }
        }
        
        /// <remarks/>
        public EffectivePeriod EffectivePeriod {
            get {
                return this.effectivePeriodField;
            }
            set {
                this.effectivePeriodField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Audience {
            get {
                return this.audienceField;
            }
            set {
                this.audienceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:Allscripts:mombt")]
    public partial class Hipaa {
        
        private string signatureOnFileField;
        
        private EffectivePeriod signatureDateField;
        
        private Indicator refusalIndicatorField;
        
        private string refusalReasonField;
        
        private string audienceField;
        
        /// <remarks/>
        public string SignatureOnFile {
            get {
                return this.signatureOnFileField;
            }
            set {
                this.signatureOnFileField = value;
            }
        }
        
        /// <remarks/>
        public EffectivePeriod SignatureDate {
            get {
                return this.signatureDateField;
            }
            set {
                this.signatureDateField = value;
            }
        }
        
        /// <remarks/>
        public Indicator RefusalIndicator {
            get {
                return this.refusalIndicatorField;
            }
            set {
                this.refusalIndicatorField = value;
            }
        }
        
        /// <remarks/>
        public string RefusalReason {
            get {
                return this.refusalReasonField;
            }
            set {
                this.refusalReasonField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Audience {
            get {
                return this.audienceField;
            }
            set {
                this.audienceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:Allscripts:mombt")]
    public partial class Handicap {
        
        private Indicator handicapIndicatorField;
        
        private string equipmentField;
        
        private string parkingTagField;
        
        private string audienceField;
        
        /// <remarks/>
        public Indicator HandicapIndicator {
            get {
                return this.handicapIndicatorField;
            }
            set {
                this.handicapIndicatorField = value;
            }
        }
        
        /// <remarks/>
        public string Equipment {
            get {
                return this.equipmentField;
            }
            set {
                this.equipmentField = value;
            }
        }
        
        /// <remarks/>
        public string ParkingTag {
            get {
                return this.parkingTagField;
            }
            set {
                this.parkingTagField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Audience {
            get {
                return this.audienceField;
            }
            set {
                this.audienceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:Allscripts:mombt")]
    public partial class Language {
        
        private LanguageName languageNameField;
        
        private bool languageNameFieldSpecified;
        
        private string languageIDField;
        
        private string audienceField;
        
        /// <remarks/>
        public LanguageName LanguageName {
            get {
                return this.languageNameField;
            }
            set {
                this.languageNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LanguageNameSpecified {
            get {
                return this.languageNameFieldSpecified;
            }
            set {
                this.languageNameFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string LanguageID {
            get {
                return this.languageIDField;
            }
            set {
                this.languageIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Audience {
            get {
                return this.audienceField;
            }
            set {
                this.audienceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:Allscripts:momst")]
    public enum LanguageName {
        
        /// <remarks/>
        English,
        
        /// <remarks/>
        Spanish,
        
        /// <remarks/>
        French,
        
        /// <remarks/>
        German,
        
        /// <remarks/>
        Irish,
        
        /// <remarks/>
        Italian,
        
        /// <remarks/>
        Hatian,
        
        /// <remarks/>
        Hebrew,
        
        /// <remarks/>
        Japanese,
        
        /// <remarks/>
        Polish,
        
        /// <remarks/>
        Russian,
        
        /// <remarks/>
        Chinese,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cantonese Chinese")]
        CantoneseChinese,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Mandarin Chinese")]
        MandarinChinese,
        
        /// <remarks/>
        Sign,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Sign Language")]
        SignLanguage,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:Allscripts:mombt")]
    public partial class EthnicGroup {
        
        private string ethnicityIDField;
        
        private EthnicDescription ethnicityDescriptionField;
        
        private string iDCodeSystemField;
        
        private string audienceField;
        
        /// <remarks/>
        public string EthnicityID {
            get {
                return this.ethnicityIDField;
            }
            set {
                this.ethnicityIDField = value;
            }
        }
        
        /// <remarks/>
        public EthnicDescription EthnicityDescription {
            get {
                return this.ethnicityDescriptionField;
            }
            set {
                this.ethnicityDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string IDCodeSystem {
            get {
                return this.iDCodeSystemField;
            }
            set {
                this.iDCodeSystemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Audience {
            get {
                return this.audienceField;
            }
            set {
                this.audienceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:Allscripts:momst")]
    public enum EthnicDescription {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Central American")]
        CentralAmerican,
        
        /// <remarks/>
        Cuban,
        
        /// <remarks/>
        Dominican,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Latin American")]
        LatinAmerican,
        
        /// <remarks/>
        Mexican,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Puerto Rican")]
        PuertoRican,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("South American")]
        SouthAmerican,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Hispanic or Latino")]
        HispanicorLatino,
        
        /// <remarks/>
        Hispanic,
        
        /// <remarks/>
        Latino,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Not Hispanic or Latino")]
        NotHispanicorLatino,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Not Hispanic")]
        NotHispanic,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Not Latino")]
        NotLatino,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:Allscripts:mombt")]
    public partial class RaceID {
        
        private string raceIdentifierField;
        
        private RaceDescription raceDescriptionField;
        
        private string iDCodeSystemField;
        
        private string audienceField;
        
        /// <remarks/>
        public string RaceIdentifier {
            get {
                return this.raceIdentifierField;
            }
            set {
                this.raceIdentifierField = value;
            }
        }
        
        /// <remarks/>
        public RaceDescription RaceDescription {
            get {
                return this.raceDescriptionField;
            }
            set {
                this.raceDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string IDCodeSystem {
            get {
                return this.iDCodeSystemField;
            }
            set {
                this.iDCodeSystemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Audience {
            get {
                return this.audienceField;
            }
            set {
                this.audienceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:Allscripts:momst")]
    public enum RaceDescription {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Alaskan Native")]
        AlaskanNative,
        
        /// <remarks/>
        Alaskan,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("American Indian")]
        AmericanIndian,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Native American")]
        NativeAmerican,
        
        /// <remarks/>
        Asian,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Black or African American")]
        BlackorAfricanAmerican,
        
        /// <remarks/>
        Black,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("African American")]
        AfricanAmerican,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Native Hawaiian or other Pacific Islander")]
        NativeHawaiianorotherPacificIslander,
        
        /// <remarks/>
        Hawaiian,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Pacific Islander")]
        PacificIslander,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Other Race")]
        OtherRace,
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        White,
        
        /// <remarks/>
        Unknown,
        
        /// <remarks/>
        Hispanic,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PatientDetail))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="Patient", Namespace="urn:Allscripts:mombt")]
    public partial class Patient1 {
        
        private string mrnField;
        
        private CodedValueType[] iDsField;
        
        private Name nameField;
        
        private string ssnField;
        
        private System.DateTime dateOfBirthField;
        
        private bool dateOfBirthFieldSpecified;
        
        private Gender1 genderField;
        
        private bool genderFieldSpecified;
        
        private Email[] emailField;
        
        private PhoneNumber[] phonesField;
        
        private string audienceField;
        
        /// <remarks/>
        public string Mrn {
            get {
                return this.mrnField;
            }
            set {
                this.mrnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("IDs")]
        public CodedValueType[] IDs {
            get {
                return this.iDsField;
            }
            set {
                this.iDsField = value;
            }
        }
        
        /// <remarks/>
        public Name Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Ssn {
            get {
                return this.ssnField;
            }
            set {
                this.ssnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime DateOfBirth {
            get {
                return this.dateOfBirthField;
            }
            set {
                this.dateOfBirthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DateOfBirthSpecified {
            get {
                return this.dateOfBirthFieldSpecified;
            }
            set {
                this.dateOfBirthFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public Gender1 Gender {
            get {
                return this.genderField;
            }
            set {
                this.genderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GenderSpecified {
            get {
                return this.genderFieldSpecified;
            }
            set {
                this.genderFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Email")]
        public Email[] Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Phones")]
        public PhoneNumber[] Phones {
            get {
                return this.phonesField;
            }
            set {
                this.phonesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Audience {
            get {
                return this.audienceField;
            }
            set {
                this.audienceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:Allscripts:mombt")]
    public partial class PatientDetail : Patient1 {
        
        private Address1[] addressField;
        
        private string employmentStatusField;
        
        private string studentStatusField;
        
        private System.DateTime dateRegisteredField;
        
        private bool dateRegisteredFieldSpecified;
        
        private RaceID[] raceField;
        
        private EthnicGroup ethnicGroupField;
        
        private string[] occupationField;
        
        private Language[] languageField;
        
        private Handicap[] handicapField;
        
        private CodedValueType[] religionField;
        
        private Hipaa hipaaField;
        
        private CommunityHie[] communityHieField;
        
        private CodedValueType[] citizenshipField;
        
        private CodedValueType[] nationalityField;
        
        private System.DateTime dateOfDeathField;
        
        private bool dateOfDeathFieldSpecified;
        
        private CodedValueType[] dietTypeField;
        
        private LivingArrangement[] livingArrangementField;
        
        private LivingDependency[] livingDependencyField;
        
        private AdvanceDirectiveCode advanceDirectiveCodeField;
        
        private MaritalStatus maritalStatusField;
        
        private bool maritalStatusFieldSpecified;
        
        private Location medicalRecordLocationField;
        
        private Organization[] employerField;
        
        private CustomField[] customFieldsField;
        
        private Account accountField;
        
        private Person[] relatedPeopleField;
        
        private Provider[] providersField;
        
        private Policy[] policiesField;
        
        private Name[] motherMaidenNameField;
        
        private Name[] aliasField;
        
        private DriversLicense driversLicenseField;
        
        private string birthPlaceField;
        
        private MultipleBirth multipleBirthField;
        
        private string veteranMilitaryStatusField;
        
        private string identityUnknownIndicatorField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Address")]
        public Address1[] Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        public string EmploymentStatus {
            get {
                return this.employmentStatusField;
            }
            set {
                this.employmentStatusField = value;
            }
        }
        
        /// <remarks/>
        public string StudentStatus {
            get {
                return this.studentStatusField;
            }
            set {
                this.studentStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime DateRegistered {
            get {
                return this.dateRegisteredField;
            }
            set {
                this.dateRegisteredField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DateRegisteredSpecified {
            get {
                return this.dateRegisteredFieldSpecified;
            }
            set {
                this.dateRegisteredFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Race")]
        public RaceID[] Race {
            get {
                return this.raceField;
            }
            set {
                this.raceField = value;
            }
        }
        
        /// <remarks/>
        public EthnicGroup EthnicGroup {
            get {
                return this.ethnicGroupField;
            }
            set {
                this.ethnicGroupField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Occupation")]
        public string[] Occupation {
            get {
                return this.occupationField;
            }
            set {
                this.occupationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Language")]
        public Language[] Language {
            get {
                return this.languageField;
            }
            set {
                this.languageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Handicap")]
        public Handicap[] Handicap {
            get {
                return this.handicapField;
            }
            set {
                this.handicapField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Religion")]
        public CodedValueType[] Religion {
            get {
                return this.religionField;
            }
            set {
                this.religionField = value;
            }
        }
        
        /// <remarks/>
        public Hipaa Hipaa {
            get {
                return this.hipaaField;
            }
            set {
                this.hipaaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CommunityHie")]
        public CommunityHie[] CommunityHie {
            get {
                return this.communityHieField;
            }
            set {
                this.communityHieField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Citizenship")]
        public CodedValueType[] Citizenship {
            get {
                return this.citizenshipField;
            }
            set {
                this.citizenshipField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Nationality")]
        public CodedValueType[] Nationality {
            get {
                return this.nationalityField;
            }
            set {
                this.nationalityField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateOfDeath {
            get {
                return this.dateOfDeathField;
            }
            set {
                this.dateOfDeathField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DateOfDeathSpecified {
            get {
                return this.dateOfDeathFieldSpecified;
            }
            set {
                this.dateOfDeathFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("DietType")]
        public CodedValueType[] DietType {
            get {
                return this.dietTypeField;
            }
            set {
                this.dietTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("LivingArrangement")]
        public LivingArrangement[] LivingArrangement {
            get {
                return this.livingArrangementField;
            }
            set {
                this.livingArrangementField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("LivingDependency")]
        public LivingDependency[] LivingDependency {
            get {
                return this.livingDependencyField;
            }
            set {
                this.livingDependencyField = value;
            }
        }
        
        /// <remarks/>
        public AdvanceDirectiveCode AdvanceDirectiveCode {
            get {
                return this.advanceDirectiveCodeField;
            }
            set {
                this.advanceDirectiveCodeField = value;
            }
        }
        
        /// <remarks/>
        public MaritalStatus MaritalStatus {
            get {
                return this.maritalStatusField;
            }
            set {
                this.maritalStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaritalStatusSpecified {
            get {
                return this.maritalStatusFieldSpecified;
            }
            set {
                this.maritalStatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public Location MedicalRecordLocation {
            get {
                return this.medicalRecordLocationField;
            }
            set {
                this.medicalRecordLocationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Employer")]
        public Organization[] Employer {
            get {
                return this.employerField;
            }
            set {
                this.employerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CustomFields")]
        public CustomField[] CustomFields {
            get {
                return this.customFieldsField;
            }
            set {
                this.customFieldsField = value;
            }
        }
        
        /// <remarks/>
        public Account Account {
            get {
                return this.accountField;
            }
            set {
                this.accountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("RelatedPeople")]
        public Person[] RelatedPeople {
            get {
                return this.relatedPeopleField;
            }
            set {
                this.relatedPeopleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Providers")]
        public Provider[] Providers {
            get {
                return this.providersField;
            }
            set {
                this.providersField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Policies")]
        public Policy[] Policies {
            get {
                return this.policiesField;
            }
            set {
                this.policiesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("MotherMaidenName")]
        public Name[] MotherMaidenName {
            get {
                return this.motherMaidenNameField;
            }
            set {
                this.motherMaidenNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Alias")]
        public Name[] Alias {
            get {
                return this.aliasField;
            }
            set {
                this.aliasField = value;
            }
        }
        
        /// <remarks/>
        public DriversLicense DriversLicense {
            get {
                return this.driversLicenseField;
            }
            set {
                this.driversLicenseField = value;
            }
        }
        
        /// <remarks/>
        public string BirthPlace {
            get {
                return this.birthPlaceField;
            }
            set {
                this.birthPlaceField = value;
            }
        }
        
        /// <remarks/>
        public MultipleBirth MultipleBirth {
            get {
                return this.multipleBirthField;
            }
            set {
                this.multipleBirthField = value;
            }
        }
        
        /// <remarks/>
        public string VeteranMilitaryStatus {
            get {
                return this.veteranMilitaryStatusField;
            }
            set {
                this.veteranMilitaryStatusField = value;
            }
        }
        
        /// <remarks/>
        public string IdentityUnknownIndicator {
            get {
                return this.identityUnknownIndicatorField;
            }
            set {
                this.identityUnknownIndicatorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:Allscripts:momst")]
    public enum LivingArrangement {
        
        /// <remarks/>
        A,
        
        /// <remarks/>
        F,
        
        /// <remarks/>
        I,
        
        /// <remarks/>
        R,
        
        /// <remarks/>
        U,
        
        /// <remarks/>
        S,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:Allscripts:momst")]
    public enum LivingDependency {
        
        /// <remarks/>
        S,
        
        /// <remarks/>
        M,
        
        /// <remarks/>
        C,
        
        /// <remarks/>
        O,
        
        /// <remarks/>
        U,
        
        /// <remarks/>
        P,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:Allscripts:momst")]
    public enum MaritalStatus {
        
        /// <remarks/>
        A,
        
        /// <remarks/>
        Annulled,
        
        /// <remarks/>
        D,
        
        /// <remarks/>
        Divorced,
        
        /// <remarks/>
        I,
        
        /// <remarks/>
        Interlocutory,
        
        /// <remarks/>
        L,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Legally separated")]
        Legallyseparated,
        
        /// <remarks/>
        Separated,
        
        /// <remarks/>
        M,
        
        /// <remarks/>
        Married,
        
        /// <remarks/>
        P,
        
        /// <remarks/>
        Polygamous,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Big Love")]
        BigLove,
        
        /// <remarks/>
        S,
        
        /// <remarks/>
        Single,
        
        /// <remarks/>
        T,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Domestic partner")]
        Domesticpartner,
        
        /// <remarks/>
        Partner,
        
        /// <remarks/>
        W,
        
        /// <remarks/>
        Widowed,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class RecommendationContext {
        
        private Patient1 patientField;
        
        private PatientDetail patientDetailField;
        
        private Provider providerField;
        
        private Organization organizationField;
        
        private CodedValueType installationIDField;
        
        private CodedValueType userIDField;
        
        private Name userNameField;
        
        private CodedValueType encounterInContextIDField;
        
        private CodedValueType contextIDField;
        
        private string contextDescriptionField;
        
        private ClientInfo clientInfoField;
        
        private System.Nullable<System.DateTime> requestDateField;
        
        /// <remarks/>
        public Patient1 Patient {
            get {
                return this.patientField;
            }
            set {
                this.patientField = value;
            }
        }
        
        /// <remarks/>
        public PatientDetail PatientDetail {
            get {
                return this.patientDetailField;
            }
            set {
                this.patientDetailField = value;
            }
        }
        
        /// <remarks/>
        public Provider Provider {
            get {
                return this.providerField;
            }
            set {
                this.providerField = value;
            }
        }
        
        /// <remarks/>
        public Organization Organization {
            get {
                return this.organizationField;
            }
            set {
                this.organizationField = value;
            }
        }
        
        /// <remarks/>
        public CodedValueType InstallationID {
            get {
                return this.installationIDField;
            }
            set {
                this.installationIDField = value;
            }
        }
        
        /// <remarks/>
        public CodedValueType UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public Name UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public CodedValueType EncounterInContextID {
            get {
                return this.encounterInContextIDField;
            }
            set {
                this.encounterInContextIDField = value;
            }
        }
        
        /// <remarks/>
        public CodedValueType ContextID {
            get {
                return this.contextIDField;
            }
            set {
                this.contextIDField = value;
            }
        }
        
        /// <remarks/>
        public string ContextDescription {
            get {
                return this.contextDescriptionField;
            }
            set {
                this.contextDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public ClientInfo ClientInfo {
            get {
                return this.clientInfoField;
            }
            set {
                this.clientInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date", IsNullable=true)]
        public System.Nullable<System.DateTime> RequestDate {
            get {
                return this.requestDateField;
            }
            set {
                this.requestDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class StatusMessageResult {
        
        private RecommendationContext contextField;
        
        private StatusMessage[] statusMessagesField;
        
        private StatusMessageMultiple[] statusMultipleMessagesField;
        
        /// <remarks/>
        public RecommendationContext Context {
            get {
                return this.contextField;
            }
            set {
                this.contextField = value;
            }
        }
        
        /// <remarks/>
        public StatusMessage[] StatusMessages {
            get {
                return this.statusMessagesField;
            }
            set {
                this.statusMessagesField = value;
            }
        }
        
        /// <remarks/>
        public StatusMessageMultiple[] StatusMultipleMessages {
            get {
                return this.statusMultipleMessagesField;
            }
            set {
                this.statusMultipleMessagesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class InitiationResult {
        
        private int activityIdField;
        
        private bool submissionSuccessField;
        
        private string vendorApplicationUrlField;
        
        private string vendorTransactionIdField;
        
        /// <remarks/>
        public int ActivityId {
            get {
                return this.activityIdField;
            }
            set {
                this.activityIdField = value;
            }
        }
        
        /// <remarks/>
        public bool SubmissionSuccess {
            get {
                return this.submissionSuccessField;
            }
            set {
                this.submissionSuccessField = value;
            }
        }
        
        /// <remarks/>
        public string VendorApplicationUrl {
            get {
                return this.vendorApplicationUrlField;
            }
            set {
                this.vendorApplicationUrlField = value;
            }
        }
        
        /// <remarks/>
        public string VendorTransactionId {
            get {
                return this.vendorTransactionIdField;
            }
            set {
                this.vendorTransactionIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class UMPInfoByLicenseID {
        
        private string licenseIDField;
        
        private string uMPAccountNumberField;
        
        private string uMPClientIDField;
        
        private string uMPAccountIDField;
        
        private string uMPOrganizationIDField;
        
        /// <remarks/>
        public string LicenseID {
            get {
                return this.licenseIDField;
            }
            set {
                this.licenseIDField = value;
            }
        }
        
        /// <remarks/>
        public string UMPAccountNumber {
            get {
                return this.uMPAccountNumberField;
            }
            set {
                this.uMPAccountNumberField = value;
            }
        }
        
        /// <remarks/>
        public string UMPClientID {
            get {
                return this.uMPClientIDField;
            }
            set {
                this.uMPClientIDField = value;
            }
        }
        
        /// <remarks/>
        public string UMPAccountID {
            get {
                return this.uMPAccountIDField;
            }
            set {
                this.uMPAccountIDField = value;
            }
        }
        
        /// <remarks/>
        public string UMPOrganizationID {
            get {
                return this.uMPOrganizationIDField;
            }
            set {
                this.uMPOrganizationIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class LicenseInfoForUMP {
        
        private string licenseIDField;
        
        private string accountIDField;
        
        private string contactPersonNameField;
        
        private string contactPersonEmailField;
        
        private string siteNameField;
        
        private string address1Field;
        
        private string address2Field;
        
        private string cityField;
        
        private string stateField;
        
        private string zipCodeField;
        
        private string phoneAreaCodeField;
        
        private string phoneNumberField;
        
        private string timeZoneField;
        
        /// <remarks/>
        public string LicenseID {
            get {
                return this.licenseIDField;
            }
            set {
                this.licenseIDField = value;
            }
        }
        
        /// <remarks/>
        public string AccountID {
            get {
                return this.accountIDField;
            }
            set {
                this.accountIDField = value;
            }
        }
        
        /// <remarks/>
        public string ContactPersonName {
            get {
                return this.contactPersonNameField;
            }
            set {
                this.contactPersonNameField = value;
            }
        }
        
        /// <remarks/>
        public string ContactPersonEmail {
            get {
                return this.contactPersonEmailField;
            }
            set {
                this.contactPersonEmailField = value;
            }
        }
        
        /// <remarks/>
        public string SiteName {
            get {
                return this.siteNameField;
            }
            set {
                this.siteNameField = value;
            }
        }
        
        /// <remarks/>
        public string Address1 {
            get {
                return this.address1Field;
            }
            set {
                this.address1Field = value;
            }
        }
        
        /// <remarks/>
        public string Address2 {
            get {
                return this.address2Field;
            }
            set {
                this.address2Field = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string ZipCode {
            get {
                return this.zipCodeField;
            }
            set {
                this.zipCodeField = value;
            }
        }
        
        /// <remarks/>
        public string PhoneAreaCode {
            get {
                return this.phoneAreaCodeField;
            }
            set {
                this.phoneAreaCodeField = value;
            }
        }
        
        /// <remarks/>
        public string PhoneNumber {
            get {
                return this.phoneNumberField;
            }
            set {
                this.phoneNumberField = value;
            }
        }
        
        /// <remarks/>
        public string TimeZone {
            get {
                return this.timeZoneField;
            }
            set {
                this.timeZoneField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class HubResponse {
        
        private SimpleResult resultField;
        
        private string messageField;
        
        /// <remarks/>
        public SimpleResult Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public enum SimpleResult {
        
        /// <remarks/>
        SUCCESS,
        
        /// <remarks/>
        FAILED,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class RegistrationSsoResponse {
        
        private string partnerDeviceKeyField;
        
        private string partnerBundleIdField;
        
        private string callbackurlField;
        
        private string secretField;
        
        /// <remarks/>
        public string PartnerDeviceKey {
            get {
                return this.partnerDeviceKeyField;
            }
            set {
                this.partnerDeviceKeyField = value;
            }
        }
        
        /// <remarks/>
        public string PartnerBundleId {
            get {
                return this.partnerBundleIdField;
            }
            set {
                this.partnerBundleIdField = value;
            }
        }
        
        /// <remarks/>
        public string Callbackurl {
            get {
                return this.callbackurlField;
            }
            set {
                this.callbackurlField = value;
            }
        }
        
        /// <remarks/>
        public string Secret {
            get {
                return this.secretField;
            }
            set {
                this.secretField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class RegistrationSsoRequest {
        
        private string allscriptsDeviceKeyField;
        
        private string registrationKeyField;
        
        /// <remarks/>
        public string AllscriptsDeviceKey {
            get {
                return this.allscriptsDeviceKeyField;
            }
            set {
                this.allscriptsDeviceKeyField = value;
            }
        }
        
        /// <remarks/>
        public string RegistrationKey {
            get {
                return this.registrationKeyField;
            }
            set {
                this.registrationKeyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class MobileSsoRegistrationResponse {
        
        private string encryptedRegistrationKeyBytesField;
        
        /// <remarks/>
        public string EncryptedRegistrationKeyBytes {
            get {
                return this.encryptedRegistrationKeyBytesField;
            }
            set {
                this.encryptedRegistrationKeyBytesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class MobileSsoRegistrationRequest {
        
        private string unencryptedRegistrationKeyField;
        
        /// <remarks/>
        public string UnencryptedRegistrationKey {
            get {
                return this.unencryptedRegistrationKeyField;
            }
            set {
                this.unencryptedRegistrationKeyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class RetrieveItemFromDocumentStoreResponse {
        
        private string documentBase64Field;
        
        /// <remarks/>
        public string DocumentBase64 {
            get {
                return this.documentBase64Field;
            }
            set {
                this.documentBase64Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class PrintRxResponse {
        
        private string htmlField;
        
        private string styleSheetField;
        
        private string pdfBase64Field;
        
        private System.Guid retrievalCodeField;
        
        /// <remarks/>
        public string Html {
            get {
                return this.htmlField;
            }
            set {
                this.htmlField = value;
            }
        }
        
        /// <remarks/>
        public string StyleSheet {
            get {
                return this.styleSheetField;
            }
            set {
                this.styleSheetField = value;
            }
        }
        
        /// <remarks/>
        public string PdfBase64 {
            get {
                return this.pdfBase64Field;
            }
            set {
                this.pdfBase64Field = value;
            }
        }
        
        /// <remarks/>
        public System.Guid RetrievalCode {
            get {
                return this.retrievalCodeField;
            }
            set {
                this.retrievalCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class SecretQuestion {
        
        private int questionIDField;
        
        private string questionField;
        
        /// <remarks/>
        public int QuestionID {
            get {
                return this.questionIDField;
            }
            set {
                this.questionIDField = value;
            }
        }
        
        /// <remarks/>
        public string Question {
            get {
                return this.questionField;
            }
            set {
                this.questionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class SsoAttributes {
        
        private string medicationField;
        
        private System.Guid licenseIdField;
        
        private string patientMrnField;
        
        private string operationField;
        
        private System.Guid partnerGuidField;
        
        private System.Guid patientIdField;
        
        private string patientDocField;
        
        private string ssoModeField;
        
        private int siteIdField;
        
        private string userNameField;
        
        /// <remarks/>
        public string Medication {
            get {
                return this.medicationField;
            }
            set {
                this.medicationField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid LicenseId {
            get {
                return this.licenseIdField;
            }
            set {
                this.licenseIdField = value;
            }
        }
        
        /// <remarks/>
        public string PatientMrn {
            get {
                return this.patientMrnField;
            }
            set {
                this.patientMrnField = value;
            }
        }
        
        /// <remarks/>
        public string Operation {
            get {
                return this.operationField;
            }
            set {
                this.operationField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid PartnerGuid {
            get {
                return this.partnerGuidField;
            }
            set {
                this.partnerGuidField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
            }
        }
        
        /// <remarks/>
        public string PatientDoc {
            get {
                return this.patientDocField;
            }
            set {
                this.patientDocField = value;
            }
        }
        
        /// <remarks/>
        public string SsoMode {
            get {
                return this.ssoModeField;
            }
            set {
                this.ssoModeField = value;
            }
        }
        
        /// <remarks/>
        public int SiteId {
            get {
                return this.siteIdField;
            }
            set {
                this.siteIdField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class RegistrantInfo {
        
        private long registrantIdField;
        
        private System.Guid shieldObjectIdField;
        
        private string shieldUserNameField;
        
        private string levelOfAssuranceField;
        
        private string enterpriseClientIDField;
        
        /// <remarks/>
        public long RegistrantId {
            get {
                return this.registrantIdField;
            }
            set {
                this.registrantIdField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid ShieldObjectId {
            get {
                return this.shieldObjectIdField;
            }
            set {
                this.shieldObjectIdField = value;
            }
        }
        
        /// <remarks/>
        public string ShieldUserName {
            get {
                return this.shieldUserNameField;
            }
            set {
                this.shieldUserNameField = value;
            }
        }
        
        /// <remarks/>
        public string LevelOfAssurance {
            get {
                return this.levelOfAssuranceField;
            }
            set {
                this.levelOfAssuranceField = value;
            }
        }
        
        /// <remarks/>
        public string EnterpriseClientID {
            get {
                return this.enterpriseClientIDField;
            }
            set {
                this.enterpriseClientIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AuthenticatedUtilitiesUser))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AuthenticatedShieldUser))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public abstract partial class AuthenticatedUser {
        
        private string userGUIDField;
        
        private string firstNameField;
        
        private string middleNameField;
        
        private string lastNameField;
        
        private string emailField;
        
        private System.DateTime lastLoginDateUTCField;
        
        private Role[] appRolesField;
        
        private Permission[] appPermissionsField;
        
        private Property[] appPropertyField;
        
        private int shieldStatusField;
        
        private bool isPasswordExpiredField;
        
        private System.DateTime authenticationTokenValidFromField;
        
        private System.DateTime authenticationTokenValidToField;
        
        /// <remarks/>
        public string UserGUID {
            get {
                return this.userGUIDField;
            }
            set {
                this.userGUIDField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string MiddleName {
            get {
                return this.middleNameField;
            }
            set {
                this.middleNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastLoginDateUTC {
            get {
                return this.lastLoginDateUTCField;
            }
            set {
                this.lastLoginDateUTCField = value;
            }
        }
        
        /// <remarks/>
        public Role[] AppRoles {
            get {
                return this.appRolesField;
            }
            set {
                this.appRolesField = value;
            }
        }
        
        /// <remarks/>
        public Permission[] AppPermissions {
            get {
                return this.appPermissionsField;
            }
            set {
                this.appPermissionsField = value;
            }
        }
        
        /// <remarks/>
        public Property[] AppProperty {
            get {
                return this.appPropertyField;
            }
            set {
                this.appPropertyField = value;
            }
        }
        
        /// <remarks/>
        public int ShieldStatus {
            get {
                return this.shieldStatusField;
            }
            set {
                this.shieldStatusField = value;
            }
        }
        
        /// <remarks/>
        public bool IsPasswordExpired {
            get {
                return this.isPasswordExpiredField;
            }
            set {
                this.isPasswordExpiredField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime AuthenticationTokenValidFrom {
            get {
                return this.authenticationTokenValidFromField;
            }
            set {
                this.authenticationTokenValidFromField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime AuthenticationTokenValidTo {
            get {
                return this.authenticationTokenValidToField;
            }
            set {
                this.authenticationTokenValidToField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class AuthenticatedUtilitiesUser : AuthenticatedUser {
        
        private string utilitiesUserNameField;
        
        private string shieldLoginIDField;
        
        private string shieldExternalTenantIDField;
        
        private string shieldTenantNameField;
        
        private string securityTokenField;
        
        private string shieldADUserIDField;
        
        /// <remarks/>
        public string UtilitiesUserName {
            get {
                return this.utilitiesUserNameField;
            }
            set {
                this.utilitiesUserNameField = value;
            }
        }
        
        /// <remarks/>
        public string ShieldLoginID {
            get {
                return this.shieldLoginIDField;
            }
            set {
                this.shieldLoginIDField = value;
            }
        }
        
        /// <remarks/>
        public string ShieldExternalTenantID {
            get {
                return this.shieldExternalTenantIDField;
            }
            set {
                this.shieldExternalTenantIDField = value;
            }
        }
        
        /// <remarks/>
        public string ShieldTenantName {
            get {
                return this.shieldTenantNameField;
            }
            set {
                this.shieldTenantNameField = value;
            }
        }
        
        /// <remarks/>
        public string SecurityToken {
            get {
                return this.securityTokenField;
            }
            set {
                this.securityTokenField = value;
            }
        }
        
        /// <remarks/>
        public string ShieldADUserID {
            get {
                return this.shieldADUserIDField;
            }
            set {
                this.shieldADUserIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class AuthenticatedShieldUser : AuthenticatedUser {
        
        private string shieldExternalTenantIDField;
        
        private string shieldTenantNameField;
        
        private string shieldLoginIDField;
        
        private string ePrescribeUserNameField;
        
        private string securityTokenField;
        
        private string shieldADUserIDField;
        
        private int dBIDField;
        
        private bool isLicenseShieldEnabledField;
        
        private string licenseIDField;
        
        private string licenseNameField;
        
        private string accountIDField;
        
        private bool isDEARegistrantField;
        
        private bool isUsernameAndPasswordSetupNeededField;
        
        private ShieldTenantIDProofingModel tenantIdProofingModelField;
        
        private HOME_ADDRESS_CHECK_STATUS homeAddressCheckStatusField;
        
        private string shieldIdentityTokenField;
        
        private string deluxeFeatureStatusDisplayField;
        
        /// <remarks/>
        public string ShieldExternalTenantID {
            get {
                return this.shieldExternalTenantIDField;
            }
            set {
                this.shieldExternalTenantIDField = value;
            }
        }
        
        /// <remarks/>
        public string ShieldTenantName {
            get {
                return this.shieldTenantNameField;
            }
            set {
                this.shieldTenantNameField = value;
            }
        }
        
        /// <remarks/>
        public string ShieldLoginID {
            get {
                return this.shieldLoginIDField;
            }
            set {
                this.shieldLoginIDField = value;
            }
        }
        
        /// <remarks/>
        public string EPrescribeUserName {
            get {
                return this.ePrescribeUserNameField;
            }
            set {
                this.ePrescribeUserNameField = value;
            }
        }
        
        /// <remarks/>
        public string SecurityToken {
            get {
                return this.securityTokenField;
            }
            set {
                this.securityTokenField = value;
            }
        }
        
        /// <remarks/>
        public string ShieldADUserID {
            get {
                return this.shieldADUserIDField;
            }
            set {
                this.shieldADUserIDField = value;
            }
        }
        
        /// <remarks/>
        public int DBID {
            get {
                return this.dBIDField;
            }
            set {
                this.dBIDField = value;
            }
        }
        
        /// <remarks/>
        public bool IsLicenseShieldEnabled {
            get {
                return this.isLicenseShieldEnabledField;
            }
            set {
                this.isLicenseShieldEnabledField = value;
            }
        }
        
        /// <remarks/>
        public string LicenseID {
            get {
                return this.licenseIDField;
            }
            set {
                this.licenseIDField = value;
            }
        }
        
        /// <remarks/>
        public string LicenseName {
            get {
                return this.licenseNameField;
            }
            set {
                this.licenseNameField = value;
            }
        }
        
        /// <remarks/>
        public string AccountID {
            get {
                return this.accountIDField;
            }
            set {
                this.accountIDField = value;
            }
        }
        
        /// <remarks/>
        public bool IsDEARegistrant {
            get {
                return this.isDEARegistrantField;
            }
            set {
                this.isDEARegistrantField = value;
            }
        }
        
        /// <remarks/>
        public bool IsUsernameAndPasswordSetupNeeded {
            get {
                return this.isUsernameAndPasswordSetupNeededField;
            }
            set {
                this.isUsernameAndPasswordSetupNeededField = value;
            }
        }
        
        /// <remarks/>
        public ShieldTenantIDProofingModel TenantIdProofingModel {
            get {
                return this.tenantIdProofingModelField;
            }
            set {
                this.tenantIdProofingModelField = value;
            }
        }
        
        /// <remarks/>
        public HOME_ADDRESS_CHECK_STATUS HomeAddressCheckStatus {
            get {
                return this.homeAddressCheckStatusField;
            }
            set {
                this.homeAddressCheckStatusField = value;
            }
        }
        
        /// <remarks/>
        public string ShieldIdentityToken {
            get {
                return this.shieldIdentityTokenField;
            }
            set {
                this.shieldIdentityTokenField = value;
            }
        }
        
        /// <remarks/>
        public string DeluxeFeatureStatusDisplay {
            get {
                return this.deluxeFeatureStatusDisplayField;
            }
            set {
                this.deluxeFeatureStatusDisplayField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public enum ShieldTenantIDProofingModel {
        
        /// <remarks/>
        Individual,
        
        /// <remarks/>
        Institutional,
        
        /// <remarks/>
        None,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public enum HOME_ADDRESS_CHECK_STATUS {
        
        /// <remarks/>
        NOT_VERIFIED,
        
        /// <remarks/>
        VERIFIED,
        
        /// <remarks/>
        LOCKED,
        
        /// <remarks/>
        MANUAL,
        
        /// <remarks/>
        BULK_WAITING,
        
        /// <remarks/>
        NOT_COMPLETED,
        
        /// <remarks/>
        COMPLETED,
        
        /// <remarks/>
        NONE,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class MessageQueueScriptInfo {
        
        private string messageTypeField;
        
        private System.Guid patientIDField;
        
        private System.Guid rxIDField;
        
        private int siteIDField;
        
        private System.Guid providerIDField;
        
        private string providerNameField;
        
        /// <remarks/>
        public string MessageType {
            get {
                return this.messageTypeField;
            }
            set {
                this.messageTypeField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid PatientID {
            get {
                return this.patientIDField;
            }
            set {
                this.patientIDField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid RxID {
            get {
                return this.rxIDField;
            }
            set {
                this.rxIDField = value;
            }
        }
        
        /// <remarks/>
        public int SiteID {
            get {
                return this.siteIDField;
            }
            set {
                this.siteIDField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid ProviderID {
            get {
                return this.providerIDField;
            }
            set {
                this.providerIDField = value;
            }
        }
        
        /// <remarks/>
        public string ProviderName {
            get {
                return this.providerNameField;
            }
            set {
                this.providerNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class MessageQueue {
        
        private string scriptMessageIDField;
        
        private string patientNameField;
        
        private string displayTypeField;
        
        private string displayStatusField;
        
        private string createdField;
        
        private string updatedField;
        
        private string authorizerNameField;
        
        private string originatorNameField;
        
        private string errorTextField;
        
        private string errorConfirmedByNameField;
        
        private string errorConfirmedDateTimeField;
        
        private string rxIDField;
        
        private bool isVIPPatientField;
        
        private bool isRestrictedPatientField;
        
        /// <remarks/>
        public string ScriptMessageID {
            get {
                return this.scriptMessageIDField;
            }
            set {
                this.scriptMessageIDField = value;
            }
        }
        
        /// <remarks/>
        public string PatientName {
            get {
                return this.patientNameField;
            }
            set {
                this.patientNameField = value;
            }
        }
        
        /// <remarks/>
        public string DisplayType {
            get {
                return this.displayTypeField;
            }
            set {
                this.displayTypeField = value;
            }
        }
        
        /// <remarks/>
        public string DisplayStatus {
            get {
                return this.displayStatusField;
            }
            set {
                this.displayStatusField = value;
            }
        }
        
        /// <remarks/>
        public string Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
            }
        }
        
        /// <remarks/>
        public string Updated {
            get {
                return this.updatedField;
            }
            set {
                this.updatedField = value;
            }
        }
        
        /// <remarks/>
        public string AuthorizerName {
            get {
                return this.authorizerNameField;
            }
            set {
                this.authorizerNameField = value;
            }
        }
        
        /// <remarks/>
        public string OriginatorName {
            get {
                return this.originatorNameField;
            }
            set {
                this.originatorNameField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorText {
            get {
                return this.errorTextField;
            }
            set {
                this.errorTextField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorConfirmedByName {
            get {
                return this.errorConfirmedByNameField;
            }
            set {
                this.errorConfirmedByNameField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorConfirmedDateTime {
            get {
                return this.errorConfirmedDateTimeField;
            }
            set {
                this.errorConfirmedDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string RxID {
            get {
                return this.rxIDField;
            }
            set {
                this.rxIDField = value;
            }
        }
        
        /// <remarks/>
        public bool IsVIPPatient {
            get {
                return this.isVIPPatientField;
            }
            set {
                this.isVIPPatientField = value;
            }
        }
        
        /// <remarks/>
        public bool IsRestrictedPatient {
            get {
                return this.isRestrictedPatientField;
            }
            set {
                this.isRestrictedPatientField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class ECouponTransactionModel {
        
        private string rxIdField;
        
        private string medicationField;
        
        private string ecouponRequestedField;
        
        private string ecouponResponseField;
        
        private string deliveryTypeField;
        
        private string deliveryDateField;
        
        /// <remarks/>
        public string RxId {
            get {
                return this.rxIdField;
            }
            set {
                this.rxIdField = value;
            }
        }
        
        /// <remarks/>
        public string Medication {
            get {
                return this.medicationField;
            }
            set {
                this.medicationField = value;
            }
        }
        
        /// <remarks/>
        public string EcouponRequested {
            get {
                return this.ecouponRequestedField;
            }
            set {
                this.ecouponRequestedField = value;
            }
        }
        
        /// <remarks/>
        public string EcouponResponse {
            get {
                return this.ecouponResponseField;
            }
            set {
                this.ecouponResponseField = value;
            }
        }
        
        /// <remarks/>
        public string DeliveryType {
            get {
                return this.deliveryTypeField;
            }
            set {
                this.deliveryTypeField = value;
            }
        }
        
        /// <remarks/>
        public string DeliveryDate {
            get {
                return this.deliveryDateField;
            }
            set {
                this.deliveryDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class ECouponDetailLiteModel {
        
        private string eCouponDetailIDField;
        
        private string rxIDField;
        
        private string activityIDField;
        
        private string offerImageURLField;
        
        /// <remarks/>
        public string ECouponDetailID {
            get {
                return this.eCouponDetailIDField;
            }
            set {
                this.eCouponDetailIDField = value;
            }
        }
        
        /// <remarks/>
        public string RxID {
            get {
                return this.rxIDField;
            }
            set {
                this.rxIDField = value;
            }
        }
        
        /// <remarks/>
        public string ActivityID {
            get {
                return this.activityIDField;
            }
            set {
                this.activityIDField = value;
            }
        }
        
        /// <remarks/>
        public string OfferImageURL {
            get {
                return this.offerImageURLField;
            }
            set {
                this.offerImageURLField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class ECouponDetailModel {
        
        private long eCouponDetailIDField;
        
        private string rxIDField;
        
        private string activityIDField;
        
        private string issuerField;
        
        private string offerIDField;
        
        private string offerNameField;
        
        private string offerImageURLField;
        
        private string offerURLField;
        
        private System.DateTime offerCancelDateTimeField;
        
        private string pharmacyNotesField;
        
        private string prescribingURLField;
        
        private string binField;
        
        private string pcnField;
        
        private string groupField;
        
        private string externalIDField;
        
        private System.DateTime createdUTCField;
        
        /// <remarks/>
        public long ECouponDetailID {
            get {
                return this.eCouponDetailIDField;
            }
            set {
                this.eCouponDetailIDField = value;
            }
        }
        
        /// <remarks/>
        public string RxID {
            get {
                return this.rxIDField;
            }
            set {
                this.rxIDField = value;
            }
        }
        
        /// <remarks/>
        public string ActivityID {
            get {
                return this.activityIDField;
            }
            set {
                this.activityIDField = value;
            }
        }
        
        /// <remarks/>
        public string Issuer {
            get {
                return this.issuerField;
            }
            set {
                this.issuerField = value;
            }
        }
        
        /// <remarks/>
        public string OfferID {
            get {
                return this.offerIDField;
            }
            set {
                this.offerIDField = value;
            }
        }
        
        /// <remarks/>
        public string OfferName {
            get {
                return this.offerNameField;
            }
            set {
                this.offerNameField = value;
            }
        }
        
        /// <remarks/>
        public string OfferImageURL {
            get {
                return this.offerImageURLField;
            }
            set {
                this.offerImageURLField = value;
            }
        }
        
        /// <remarks/>
        public string OfferURL {
            get {
                return this.offerURLField;
            }
            set {
                this.offerURLField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime OfferCancelDateTime {
            get {
                return this.offerCancelDateTimeField;
            }
            set {
                this.offerCancelDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string PharmacyNotes {
            get {
                return this.pharmacyNotesField;
            }
            set {
                this.pharmacyNotesField = value;
            }
        }
        
        /// <remarks/>
        public string PrescribingURL {
            get {
                return this.prescribingURLField;
            }
            set {
                this.prescribingURLField = value;
            }
        }
        
        /// <remarks/>
        public string Bin {
            get {
                return this.binField;
            }
            set {
                this.binField = value;
            }
        }
        
        /// <remarks/>
        public string Pcn {
            get {
                return this.pcnField;
            }
            set {
                this.pcnField = value;
            }
        }
        
        /// <remarks/>
        public string Group {
            get {
                return this.groupField;
            }
            set {
                this.groupField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalID {
            get {
                return this.externalIDField;
            }
            set {
                this.externalIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreatedUTC {
            get {
                return this.createdUTCField;
            }
            set {
                this.createdUTCField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Medication))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class BasicMedication {
        
        private string nameField;
        
        private string routeOfAdminCodeField;
        
        private string dosageFormCodeField;
        
        private string strengthField;
        
        private string strengthUOMField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string RouteOfAdminCode {
            get {
                return this.routeOfAdminCodeField;
            }
            set {
                this.routeOfAdminCodeField = value;
            }
        }
        
        /// <remarks/>
        public string DosageFormCode {
            get {
                return this.dosageFormCodeField;
            }
            set {
                this.dosageFormCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Strength {
            get {
                return this.strengthField;
            }
            set {
                this.strengthField = value;
            }
        }
        
        /// <remarks/>
        public string StrengthUOM {
            get {
                return this.strengthUOMField;
            }
            set {
                this.strengthUOMField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class Medication : BasicMedication {
        
        private string dDIField;
        
        private string medicationNameField;
        
        private string routeOfAdminField;
        
        private string dosageFormField;
        
        private string strengthCompleteField;
        
        private string bioEquivalenceCodeField;
        
        private string controlledSubstanceCodeField;
        
        private string efficacyCodeField;
        
        private string legendCodeField;
        
        private string genericCodeField;
        
        private string brandNameCodeField;
        
        private string nameSourceCodeField;
        
        private string gPIField;
        
        private string kDCField;
        
        private string newDDIField;
        
        private string screenFlagField;
        
        private string kDCFlagField;
        
        private string transactionCodeField;
        
        private string levelOfPreferednessField;
        
        private string formularyStatusField;
        
        private string isOTCField;
        
        /// <remarks/>
        public string DDI {
            get {
                return this.dDIField;
            }
            set {
                this.dDIField = value;
            }
        }
        
        /// <remarks/>
        public string MedicationName {
            get {
                return this.medicationNameField;
            }
            set {
                this.medicationNameField = value;
            }
        }
        
        /// <remarks/>
        public string RouteOfAdmin {
            get {
                return this.routeOfAdminField;
            }
            set {
                this.routeOfAdminField = value;
            }
        }
        
        /// <remarks/>
        public string DosageForm {
            get {
                return this.dosageFormField;
            }
            set {
                this.dosageFormField = value;
            }
        }
        
        /// <remarks/>
        public string StrengthComplete {
            get {
                return this.strengthCompleteField;
            }
            set {
                this.strengthCompleteField = value;
            }
        }
        
        /// <remarks/>
        public string BioEquivalenceCode {
            get {
                return this.bioEquivalenceCodeField;
            }
            set {
                this.bioEquivalenceCodeField = value;
            }
        }
        
        /// <remarks/>
        public string ControlledSubstanceCode {
            get {
                return this.controlledSubstanceCodeField;
            }
            set {
                this.controlledSubstanceCodeField = value;
            }
        }
        
        /// <remarks/>
        public string EfficacyCode {
            get {
                return this.efficacyCodeField;
            }
            set {
                this.efficacyCodeField = value;
            }
        }
        
        /// <remarks/>
        public string LegendCode {
            get {
                return this.legendCodeField;
            }
            set {
                this.legendCodeField = value;
            }
        }
        
        /// <remarks/>
        public string GenericCode {
            get {
                return this.genericCodeField;
            }
            set {
                this.genericCodeField = value;
            }
        }
        
        /// <remarks/>
        public string BrandNameCode {
            get {
                return this.brandNameCodeField;
            }
            set {
                this.brandNameCodeField = value;
            }
        }
        
        /// <remarks/>
        public string NameSourceCode {
            get {
                return this.nameSourceCodeField;
            }
            set {
                this.nameSourceCodeField = value;
            }
        }
        
        /// <remarks/>
        public string GPI {
            get {
                return this.gPIField;
            }
            set {
                this.gPIField = value;
            }
        }
        
        /// <remarks/>
        public string KDC {
            get {
                return this.kDCField;
            }
            set {
                this.kDCField = value;
            }
        }
        
        /// <remarks/>
        public string NewDDI {
            get {
                return this.newDDIField;
            }
            set {
                this.newDDIField = value;
            }
        }
        
        /// <remarks/>
        public string ScreenFlag {
            get {
                return this.screenFlagField;
            }
            set {
                this.screenFlagField = value;
            }
        }
        
        /// <remarks/>
        public string KDCFlag {
            get {
                return this.kDCFlagField;
            }
            set {
                this.kDCFlagField = value;
            }
        }
        
        /// <remarks/>
        public string TransactionCode {
            get {
                return this.transactionCodeField;
            }
            set {
                this.transactionCodeField = value;
            }
        }
        
        /// <remarks/>
        public string LevelOfPreferedness {
            get {
                return this.levelOfPreferednessField;
            }
            set {
                this.levelOfPreferednessField = value;
            }
        }
        
        /// <remarks/>
        public string FormularyStatus {
            get {
                return this.formularyStatusField;
            }
            set {
                this.formularyStatusField = value;
            }
        }
        
        /// <remarks/>
        public string IsOTC {
            get {
                return this.isOTCField;
            }
            set {
                this.isOTCField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class DenialReason {
        
        private string idField;
        
        private string nameField;
        
        private PrescriptionTaskType1 taskTypeField;
        
        /// <remarks/>
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public PrescriptionTaskType1 TaskType {
            get {
                return this.taskTypeField;
            }
            set {
                this.taskTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="PrescriptionTaskType", Namespace="https://eprescribe.allscripts.com/")]
    public enum PrescriptionTaskType1 {
        
        /// <remarks/>
        APPROVAL_REQUEST,
        
        /// <remarks/>
        REJECTION_NOTIFICATION,
        
        /// <remarks/>
        RENEWAL_REQUEST,
        
        /// <remarks/>
        SCRIPT_ERROR,
        
        /// <remarks/>
        SEND_TO_ADMIN,
        
        /// <remarks/>
        REFREQ,
        
        /// <remarks/>
        EPA,
        
        /// <remarks/>
        RXCHG,
        
        /// <remarks/>
        RXCHG_PRIORAUTH,
        
        /// <remarks/>
        SPECIALTY_MED_ASSIST_RX,
        
        /// <remarks/>
        DEFAULT,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class OTPForm {
        
        private bool allowsRequestField;
        
        private string descriptionField;
        
        private string deviceTypeField;
        
        private string displayNameField;
        
        private string formIdField;
        
        private string subTypeField;
        
        private string typeField;
        
        private OtpType erxOtpTypeField;
        
        /// <remarks/>
        public bool AllowsRequest {
            get {
                return this.allowsRequestField;
            }
            set {
                this.allowsRequestField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string DeviceType {
            get {
                return this.deviceTypeField;
            }
            set {
                this.deviceTypeField = value;
            }
        }
        
        /// <remarks/>
        public string DisplayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
            }
        }
        
        /// <remarks/>
        public string FormId {
            get {
                return this.formIdField;
            }
            set {
                this.formIdField = value;
            }
        }
        
        /// <remarks/>
        public string SubType {
            get {
                return this.subTypeField;
            }
            set {
                this.subTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public OtpType ErxOtpType {
            get {
                return this.erxOtpTypeField;
            }
            set {
                this.erxOtpTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public enum OtpType {
        
        /// <remarks/>
        ZentryEmail,
        
        /// <remarks/>
        ZentrySMS,
        
        /// <remarks/>
        ZentryRsaSecureID,
        
        /// <remarks/>
        Others,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class DiagnosisModel {
        
        private string termField;
        
        private string termUIDField;
        
        private string iCD9CMField;
        
        private string iCD10CMField;
        
        private string sNOMEDCTField;
        
        /// <remarks/>
        public string Term {
            get {
                return this.termField;
            }
            set {
                this.termField = value;
            }
        }
        
        /// <remarks/>
        public string TermUID {
            get {
                return this.termUIDField;
            }
            set {
                this.termUIDField = value;
            }
        }
        
        /// <remarks/>
        public string ICD9CM {
            get {
                return this.iCD9CMField;
            }
            set {
                this.iCD9CMField = value;
            }
        }
        
        /// <remarks/>
        public string ICD10CM {
            get {
                return this.iCD10CMField;
            }
            set {
                this.iCD10CMField = value;
            }
        }
        
        /// <remarks/>
        public string SNOMEDCT {
            get {
                return this.sNOMEDCTField;
            }
            set {
                this.sNOMEDCTField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class RxInfoDetailLiteModel {
        
        private string rxInfoDetailsIDField;
        
        private string issuerField;
        
        private string activityIDField;
        
        /// <remarks/>
        public string RxInfoDetailsID {
            get {
                return this.rxInfoDetailsIDField;
            }
            set {
                this.rxInfoDetailsIDField = value;
            }
        }
        
        /// <remarks/>
        public string Issuer {
            get {
                return this.issuerField;
            }
            set {
                this.issuerField = value;
            }
        }
        
        /// <remarks/>
        public string ActivityID {
            get {
                return this.activityIDField;
            }
            set {
                this.activityIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class RuleAgentID {
        
        private string ruleAgentField;
        
        private bool enrolledField;
        
        /// <remarks/>
        public string RuleAgent {
            get {
                return this.ruleAgentField;
            }
            set {
                this.ruleAgentField = value;
            }
        }
        
        /// <remarks/>
        public bool Enrolled {
            get {
                return this.enrolledField;
            }
            set {
                this.enrolledField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class UserMessageTrackingAck {
        
        private System.Guid userGuidField;
        
        private System.Guid configKeyField;
        
        private System.DateTime ackUTCField;
        
        /// <remarks/>
        public System.Guid UserGuid {
            get {
                return this.userGuidField;
            }
            set {
                this.userGuidField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid ConfigKey {
            get {
                return this.configKeyField;
            }
            set {
                this.configKeyField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime AckUTC {
            get {
                return this.ackUTCField;
            }
            set {
                this.ackUTCField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MobileServiceSecurityTokenResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UAISecurityTokenResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LicensePreferenceSaveResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LicenseCreationDateResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SignPrescriptionsResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SetDEARegistrantStatusResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateShieldUserResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CreateShieldUserResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CreateUserResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AuthenticateAndAuthorizeUtilUserResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ResetForgottenPasswordResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetUserSecretQuestionsResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EnrollProviderResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SaveSecretQuestionAnswersResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetAllSecretQuestionsResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LinkAndAuthorizeFederatedUserResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CreateShieldTenantResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetNewPasswordResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CreateTenantAndUserResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetNewActivationCodeResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetServiceAccountShieldSamlTokenResult))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RefreshSamlTokenResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AuthenticateSsoResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AuthenticateAndAuthorizeUserResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetShieldUserResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetUsersFromePrescribeResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetUsersResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AuditLogPatientRxCSResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AuditLogPatientRxResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetLicenseShieldStatusResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ApplicationResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EPAServiceResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(InfoScriptsMessageResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(InfoScriptsMessageListResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetMainAppLogRecordsResult))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ExportCCDToDBMotionResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetPatientCCDResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetEnterpriseInfoResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetStateLicenseAndDeaExpiryDateForUserResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IsValidPasswordResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetFailedScriptsResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetPendingScriptsResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LoadMessageQueueTxResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateMessageQueueResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(InsertMessageQueueResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SaveRxErrorResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ECouponRefillPrintResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ECouponRefillResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetECouponTransactionDetailResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetECouponDetailsLiteByIDResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetECouponDetailByRxIDResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LoadMedicationResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SearchMedicationAndClassResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SearchMedicationResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetShieldUserTraitsResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SetProviderTraitsResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SetShieldUserTraitResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateShieldUserTenantAdminStatusResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateUserResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MedicationResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DenialReasonResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TeaserAdResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AuthenticateOtpFormsForSigningResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LinkExistingShieldUserToeRxUserResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CreateLicenseForExistingShieldTenantResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ActivateAndUpdateUserResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetShieldAuthenicateOTPFormsResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetShieldSendOTPResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetShieldOTPFormsResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SearchDiagnosisResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SavePatientCCDResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SavePatientProblemResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdatePatientProblemResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetRxInfoDetailsLiteByRxIDResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DXCClientUserResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetProviderProgramEnrollmentsResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateUserInUMPResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddUserToUMPResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateLicenseInUMPResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AddLicenseToUMPResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProcessHubMailboxHeaderListResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetRegistrantIdProofingLoaResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CreateRegistrantUserResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ShieldAuditEventResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetUserShieldCspStatusInfoResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CreateAndSignMobileAccessTokenResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConvertFromHtmlToPdfResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetMessageTrackingAcksResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SearchAccountsByNameResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetMatchingPharmacyResponse))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class ePrescribeSvcResponse {
        
        private bool successField;
        
        private string[] messagesField;
        
        private string exceptionIDField;
        
        /// <remarks/>
        public bool Success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        public string[] Messages {
            get {
                return this.messagesField;
            }
            set {
                this.messagesField = value;
            }
        }
        
        /// <remarks/>
        public string ExceptionID {
            get {
                return this.exceptionIDField;
            }
            set {
                this.exceptionIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class MobileServiceSecurityTokenResponse : ePrescribeSvcResponse {
        
        private string resultStatusField;
        
        private string userGUIDField;
        
        private string licenseIDField;
        
        private string shieldTokenField;
        
        private string applicationNameField;
        
        private string samlErrorResponseField;
        
        private int siteIdField;
        
        private System.Nullable<SsoMode> ssoModeField;
        
        private System.Guid patientIdField;
        
        /// <remarks/>
        public string ResultStatus {
            get {
                return this.resultStatusField;
            }
            set {
                this.resultStatusField = value;
            }
        }
        
        /// <remarks/>
        public string UserGUID {
            get {
                return this.userGUIDField;
            }
            set {
                this.userGUIDField = value;
            }
        }
        
        /// <remarks/>
        public string LicenseID {
            get {
                return this.licenseIDField;
            }
            set {
                this.licenseIDField = value;
            }
        }
        
        /// <remarks/>
        public string ShieldToken {
            get {
                return this.shieldTokenField;
            }
            set {
                this.shieldTokenField = value;
            }
        }
        
        /// <remarks/>
        public string ApplicationName {
            get {
                return this.applicationNameField;
            }
            set {
                this.applicationNameField = value;
            }
        }
        
        /// <remarks/>
        public string SamlErrorResponse {
            get {
                return this.samlErrorResponseField;
            }
            set {
                this.samlErrorResponseField = value;
            }
        }
        
        /// <remarks/>
        public int SiteId {
            get {
                return this.siteIdField;
            }
            set {
                this.siteIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<SsoMode> SsoMode {
            get {
                return this.ssoModeField;
            }
            set {
                this.ssoModeField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public enum SsoMode {
        
        /// <remarks/>
        STANDARD,
        
        /// <remarks/>
        PATIENT_LOCKDOWN,
        
        /// <remarks/>
        TASKING,
        
        /// <remarks/>
        EPA_PATIENT_LOCKDOWN_TASK,
        
        /// <remarks/>
        EPA_TASK_LOCKDOWN,
        
        /// <remarks/>
        SSO_IDPROOFING,
        
        /// <remarks/>
        MESSAGE_QUEUE,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class UAISecurityTokenResponse : ePrescribeSvcResponse {
        
        private string resultStatusField;
        
        private string userGUIDField;
        
        private string licenseIDField;
        
        private int dBIDField;
        
        /// <remarks/>
        public string ResultStatus {
            get {
                return this.resultStatusField;
            }
            set {
                this.resultStatusField = value;
            }
        }
        
        /// <remarks/>
        public string UserGUID {
            get {
                return this.userGUIDField;
            }
            set {
                this.userGUIDField = value;
            }
        }
        
        /// <remarks/>
        public string LicenseID {
            get {
                return this.licenseIDField;
            }
            set {
                this.licenseIDField = value;
            }
        }
        
        /// <remarks/>
        public int DBID {
            get {
                return this.dBIDField;
            }
            set {
                this.dBIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class LicensePreferenceSaveResponse : ePrescribeSvcResponse {
        
        private Preference preferenceField;
        
        /// <remarks/>
        public Preference Preference {
            get {
                return this.preferenceField;
            }
            set {
                this.preferenceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class LicenseCreationDateResponse : ePrescribeSvcResponse {
        
        private System.DateTime licenseCreationDateField;
        
        /// <remarks/>
        public System.DateTime LicenseCreationDate {
            get {
                return this.licenseCreationDateField;
            }
            set {
                this.licenseCreationDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class SignPrescriptionsResponse : ePrescribeSvcResponse {
        
        private string[] scriptMessageIDsField;
        
        private bool isPrescriptionSignedField;
        
        private bool isSignedScriptMessageInsertedField;
        
        /// <remarks/>
        public string[] ScriptMessageIDs {
            get {
                return this.scriptMessageIDsField;
            }
            set {
                this.scriptMessageIDsField = value;
            }
        }
        
        /// <remarks/>
        public bool IsPrescriptionSigned {
            get {
                return this.isPrescriptionSignedField;
            }
            set {
                this.isPrescriptionSignedField = value;
            }
        }
        
        /// <remarks/>
        public bool IsSignedScriptMessageInserted {
            get {
                return this.isSignedScriptMessageInsertedField;
            }
            set {
                this.isSignedScriptMessageInsertedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class SetDEARegistrantStatusResponse : ePrescribeSvcResponse {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class UpdateShieldUserResponse : ePrescribeSvcResponse {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class CreateShieldUserResponse : ePrescribeSvcResponse {
        
        private string activationCodeField;
        
        /// <remarks/>
        public string ActivationCode {
            get {
                return this.activationCodeField;
            }
            set {
                this.activationCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class CreateUserResponse : ePrescribeSvcResponse {
        
        private string activationCodeField;
        
        private string userGUIDField;
        
        /// <remarks/>
        public string ActivationCode {
            get {
                return this.activationCodeField;
            }
            set {
                this.activationCodeField = value;
            }
        }
        
        /// <remarks/>
        public string UserGUID {
            get {
                return this.userGUIDField;
            }
            set {
                this.userGUIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class AuthenticateAndAuthorizeUtilUserResponse : ePrescribeSvcResponse {
        
        private AuthenticatedUtilitiesUser authenticatedUtilitiesUserField;
        
        /// <remarks/>
        public AuthenticatedUtilitiesUser AuthenticatedUtilitiesUser {
            get {
                return this.authenticatedUtilitiesUserField;
            }
            set {
                this.authenticatedUtilitiesUserField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class ResetForgottenPasswordResponse : ePrescribeSvcResponse {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetUserSecretQuestionsResponse : ePrescribeSvcResponse {
        
        private SecretQuestion[] secretQuestionsField;
        
        /// <remarks/>
        public SecretQuestion[] SecretQuestions {
            get {
                return this.secretQuestionsField;
            }
            set {
                this.secretQuestionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class EnrollProviderResponse : ePrescribeSvcResponse {
        
        private string responseXMLField;
        
        /// <remarks/>
        public string ResponseXML {
            get {
                return this.responseXMLField;
            }
            set {
                this.responseXMLField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class SaveSecretQuestionAnswersResponse : ePrescribeSvcResponse {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetAllSecretQuestionsResponse : ePrescribeSvcResponse {
        
        private SecretQuestion[] secretQuestionsField;
        
        /// <remarks/>
        public SecretQuestion[] SecretQuestions {
            get {
                return this.secretQuestionsField;
            }
            set {
                this.secretQuestionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class LinkAndAuthorizeFederatedUserResponse : ePrescribeSvcResponse {
        
        private AuthenticatedShieldUser authenticatedShieldUserField;
        
        /// <remarks/>
        public AuthenticatedShieldUser AuthenticatedShieldUser {
            get {
                return this.authenticatedShieldUserField;
            }
            set {
                this.authenticatedShieldUserField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class CreateShieldTenantResponse : ePrescribeSvcResponse {
        
        private int shieldInternalTenantIDField;
        
        private int shieldInternalEnvironmentIDField;
        
        private int shieldInternalAppInstanceIDField;
        
        /// <remarks/>
        public int ShieldInternalTenantID {
            get {
                return this.shieldInternalTenantIDField;
            }
            set {
                this.shieldInternalTenantIDField = value;
            }
        }
        
        /// <remarks/>
        public int ShieldInternalEnvironmentID {
            get {
                return this.shieldInternalEnvironmentIDField;
            }
            set {
                this.shieldInternalEnvironmentIDField = value;
            }
        }
        
        /// <remarks/>
        public int ShieldInternalAppInstanceID {
            get {
                return this.shieldInternalAppInstanceIDField;
            }
            set {
                this.shieldInternalAppInstanceIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetNewPasswordResponse : ePrescribeSvcResponse {
        
        private string newPasswordField;
        
        /// <remarks/>
        public string NewPassword {
            get {
                return this.newPasswordField;
            }
            set {
                this.newPasswordField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class CreateTenantAndUserResponse : ePrescribeSvcResponse {
        
        private string activationCodeField;
        
        private string userNameField;
        
        private ConnectionStringPointer dBIDField;
        
        private string licenseIDField;
        
        private string accountIDField;
        
        /// <remarks/>
        public string ActivationCode {
            get {
                return this.activationCodeField;
            }
            set {
                this.activationCodeField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public ConnectionStringPointer DBID {
            get {
                return this.dBIDField;
            }
            set {
                this.dBIDField = value;
            }
        }
        
        /// <remarks/>
        public string LicenseID {
            get {
                return this.licenseIDField;
            }
            set {
                this.licenseIDField = value;
            }
        }
        
        /// <remarks/>
        public string AccountID {
            get {
                return this.accountIDField;
            }
            set {
                this.accountIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetNewActivationCodeResponse : ePrescribeSvcResponse {
        
        private string activationCodeField;
        
        /// <remarks/>
        public string ActivationCode {
            get {
                return this.activationCodeField;
            }
            set {
                this.activationCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetServiceAccountShieldSamlTokenResult : ePrescribeSvcResponse {
        
        private string samlStringField;
        
        private System.DateTime validToField;
        
        /// <remarks/>
        public string samlString {
            get {
                return this.samlStringField;
            }
            set {
                this.samlStringField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime validTo {
            get {
                return this.validToField;
            }
            set {
                this.validToField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class RefreshSamlTokenResponse : ePrescribeSvcResponse {
        
        private string refreshedSecurityTokenField;
        
        private System.DateTime tokenValidFromDateTimeUTCField;
        
        private System.DateTime tokenValidToDateTimeUTCField;
        
        private System.Nullable<bool> areClaimCollectionsIdenticalField;
        
        /// <remarks/>
        public string RefreshedSecurityToken {
            get {
                return this.refreshedSecurityTokenField;
            }
            set {
                this.refreshedSecurityTokenField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime TokenValidFromDateTimeUTC {
            get {
                return this.tokenValidFromDateTimeUTCField;
            }
            set {
                this.tokenValidFromDateTimeUTCField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime TokenValidToDateTimeUTC {
            get {
                return this.tokenValidToDateTimeUTCField;
            }
            set {
                this.tokenValidToDateTimeUTCField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> AreClaimCollectionsIdentical {
            get {
                return this.areClaimCollectionsIdenticalField;
            }
            set {
                this.areClaimCollectionsIdenticalField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class AuthenticateSsoResponse : ePrescribeSvcResponse {
        
        private SsoAttributes attributeStatementsField;
        
        private long operationField;
        
        private System.Guid partnerIdField;
        
        private AuthenticateAndAuthorizeUserResponse federatedUserField;
        
        private SsoMode ssoModeField;
        
        private int errorField;
        
        private ConnectionStringPointer dbIdField;
        
        /// <remarks/>
        public SsoAttributes AttributeStatements {
            get {
                return this.attributeStatementsField;
            }
            set {
                this.attributeStatementsField = value;
            }
        }
        
        /// <remarks/>
        public long Operation {
            get {
                return this.operationField;
            }
            set {
                this.operationField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid PartnerId {
            get {
                return this.partnerIdField;
            }
            set {
                this.partnerIdField = value;
            }
        }
        
        /// <remarks/>
        public AuthenticateAndAuthorizeUserResponse FederatedUser {
            get {
                return this.federatedUserField;
            }
            set {
                this.federatedUserField = value;
            }
        }
        
        /// <remarks/>
        public SsoMode SsoMode {
            get {
                return this.ssoModeField;
            }
            set {
                this.ssoModeField = value;
            }
        }
        
        /// <remarks/>
        public int Error {
            get {
                return this.errorField;
            }
            set {
                this.errorField = value;
            }
        }
        
        /// <remarks/>
        public ConnectionStringPointer DbId {
            get {
                return this.dbIdField;
            }
            set {
                this.dbIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class AuthenticateAndAuthorizeUserResponse : ePrescribeSvcResponse {
        
        private AuthenticatedShieldUser[] authenticatedShieldUsersField;
        
        private RegistrantInfo authenticatedRegistrantField;
        
        private bool validRegistrantLoginField;
        
        private bool validShieldLoginField;
        
        private bool isUsernameAndPasswordSignInAllowedField;
        
        private AuthenticationStatuses authenticationStatusField;
        
        private string displayMessageField;
        
        private string auditLogIDField;
        
        private string identTokenField;
        
        /// <remarks/>
        public AuthenticatedShieldUser[] AuthenticatedShieldUsers {
            get {
                return this.authenticatedShieldUsersField;
            }
            set {
                this.authenticatedShieldUsersField = value;
            }
        }
        
        /// <remarks/>
        public RegistrantInfo AuthenticatedRegistrant {
            get {
                return this.authenticatedRegistrantField;
            }
            set {
                this.authenticatedRegistrantField = value;
            }
        }
        
        /// <remarks/>
        public bool ValidRegistrantLogin {
            get {
                return this.validRegistrantLoginField;
            }
            set {
                this.validRegistrantLoginField = value;
            }
        }
        
        /// <remarks/>
        public bool ValidShieldLogin {
            get {
                return this.validShieldLoginField;
            }
            set {
                this.validShieldLoginField = value;
            }
        }
        
        /// <remarks/>
        public bool IsUsernameAndPasswordSignInAllowed {
            get {
                return this.isUsernameAndPasswordSignInAllowedField;
            }
            set {
                this.isUsernameAndPasswordSignInAllowedField = value;
            }
        }
        
        /// <remarks/>
        public AuthenticationStatuses AuthenticationStatus {
            get {
                return this.authenticationStatusField;
            }
            set {
                this.authenticationStatusField = value;
            }
        }
        
        /// <remarks/>
        public string DisplayMessage {
            get {
                return this.displayMessageField;
            }
            set {
                this.displayMessageField = value;
            }
        }
        
        /// <remarks/>
        public string AuditLogID {
            get {
                return this.auditLogIDField;
            }
            set {
                this.auditLogIDField = value;
            }
        }
        
        /// <remarks/>
        public string IdentToken {
            get {
                return this.identTokenField;
            }
            set {
                this.identTokenField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public enum AuthenticationStatuses {
        
        /// <remarks/>
        SHIELD_AUTH,
        
        /// <remarks/>
        NOT_AUTHORIZED,
        
        /// <remarks/>
        AUTH_SUCCESSFUL_BUT_NOT_ALLOWED,
        
        /// <remarks/>
        SHIELD_AUTH_REGISTRANT,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetShieldUserResponse : ePrescribeSvcResponse {
        
        private RxUser rxUserField;
        
        /// <remarks/>
        public RxUser RxUser {
            get {
                return this.rxUserField;
            }
            set {
                this.rxUserField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetUsersFromePrescribeResponse : ePrescribeSvcResponse {
        
        private RxUser[] rxUsersField;
        
        /// <remarks/>
        public RxUser[] RxUsers {
            get {
                return this.rxUsersField;
            }
            set {
                this.rxUsersField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetUsersResponse : ePrescribeSvcResponse {
        
        private RxUser[] rxUsersField;
        
        private int pageCountField;
        
        /// <remarks/>
        public RxUser[] RxUsers {
            get {
                return this.rxUsersField;
            }
            set {
                this.rxUsersField = value;
            }
        }
        
        /// <remarks/>
        public int pageCount {
            get {
                return this.pageCountField;
            }
            set {
                this.pageCountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class AuditLogPatientRxCSResponse : ePrescribeSvcResponse {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class AuditLogPatientRxResponse : ePrescribeSvcResponse {
        
        private long auditLogPatientRxIDField;
        
        private string auditLogPatientIDField;
        
        /// <remarks/>
        public long AuditLogPatientRxID {
            get {
                return this.auditLogPatientRxIDField;
            }
            set {
                this.auditLogPatientRxIDField = value;
            }
        }
        
        /// <remarks/>
        public string AuditLogPatientID {
            get {
                return this.auditLogPatientIDField;
            }
            set {
                this.auditLogPatientIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetLicenseShieldStatusResponse : ePrescribeSvcResponse {
        
        private bool isLicenseShieldEnabledField;
        
        /// <remarks/>
        public bool IsLicenseShieldEnabled {
            get {
                return this.isLicenseShieldEnabledField;
            }
            set {
                this.isLicenseShieldEnabledField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class ApplicationResponse : ePrescribeSvcResponse {
        
        private bool isShieldEnabledField;
        
        /// <remarks/>
        public bool IsShieldEnabled {
            get {
                return this.isShieldEnabledField;
            }
            set {
                this.isShieldEnabledField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class EPAServiceResponse : ePrescribeSvcResponse {
        
        private string returnIDField;
        
        /// <remarks/>
        public string ReturnID {
            get {
                return this.returnIDField;
            }
            set {
                this.returnIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class InfoScriptsMessageResponse : ePrescribeSvcResponse {
        
        private InfoScriptsMessage infoScriptsMessageField;
        
        /// <remarks/>
        public InfoScriptsMessage InfoScriptsMessage {
            get {
                return this.infoScriptsMessageField;
            }
            set {
                this.infoScriptsMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class InfoScriptsMessage {
        
        private int idField;
        
        private int sponsoredLinkTypeIDField;
        
        private bool isActiveField;
        
        private System.DateTime launchDateField;
        
        private int numViewsContractedField;
        
        private int numViewsRemainingField;
        
        private int sponsoredItemIDField;
        
        private int contractIDField;
        
        private string nameField;
        
        private string contractNumField;
        
        private string detailDescriptionField;
        
        private string contractedItemDDIField;
        
        private bool contractIsActiveField;
        
        private System.DateTime contractLaunchDateField;
        
        private string medicationNameField;
        
        private string medicationStrengthField;
        
        private string medicationStrengthUOMField;
        
        private string medicationDosageFormCodeField;
        
        private string medicationRoutOfAdminCodeField;
        
        private InfoScriptsLinkAssoc[] linkAssocField;
        
        private InfoScriptsMessageDescriptions[] messageDescriptionField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int SponsoredLinkTypeID {
            get {
                return this.sponsoredLinkTypeIDField;
            }
            set {
                this.sponsoredLinkTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public bool IsActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LaunchDate {
            get {
                return this.launchDateField;
            }
            set {
                this.launchDateField = value;
            }
        }
        
        /// <remarks/>
        public int NumViewsContracted {
            get {
                return this.numViewsContractedField;
            }
            set {
                this.numViewsContractedField = value;
            }
        }
        
        /// <remarks/>
        public int NumViewsRemaining {
            get {
                return this.numViewsRemainingField;
            }
            set {
                this.numViewsRemainingField = value;
            }
        }
        
        /// <remarks/>
        public int SponsoredItemID {
            get {
                return this.sponsoredItemIDField;
            }
            set {
                this.sponsoredItemIDField = value;
            }
        }
        
        /// <remarks/>
        public int ContractID {
            get {
                return this.contractIDField;
            }
            set {
                this.contractIDField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string ContractNum {
            get {
                return this.contractNumField;
            }
            set {
                this.contractNumField = value;
            }
        }
        
        /// <remarks/>
        public string DetailDescription {
            get {
                return this.detailDescriptionField;
            }
            set {
                this.detailDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string ContractedItemDDI {
            get {
                return this.contractedItemDDIField;
            }
            set {
                this.contractedItemDDIField = value;
            }
        }
        
        /// <remarks/>
        public bool ContractIsActive {
            get {
                return this.contractIsActiveField;
            }
            set {
                this.contractIsActiveField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ContractLaunchDate {
            get {
                return this.contractLaunchDateField;
            }
            set {
                this.contractLaunchDateField = value;
            }
        }
        
        /// <remarks/>
        public string MedicationName {
            get {
                return this.medicationNameField;
            }
            set {
                this.medicationNameField = value;
            }
        }
        
        /// <remarks/>
        public string MedicationStrength {
            get {
                return this.medicationStrengthField;
            }
            set {
                this.medicationStrengthField = value;
            }
        }
        
        /// <remarks/>
        public string MedicationStrengthUOM {
            get {
                return this.medicationStrengthUOMField;
            }
            set {
                this.medicationStrengthUOMField = value;
            }
        }
        
        /// <remarks/>
        public string MedicationDosageFormCode {
            get {
                return this.medicationDosageFormCodeField;
            }
            set {
                this.medicationDosageFormCodeField = value;
            }
        }
        
        /// <remarks/>
        public string MedicationRoutOfAdminCode {
            get {
                return this.medicationRoutOfAdminCodeField;
            }
            set {
                this.medicationRoutOfAdminCodeField = value;
            }
        }
        
        /// <remarks/>
        public InfoScriptsLinkAssoc[] LinkAssoc {
            get {
                return this.linkAssocField;
            }
            set {
                this.linkAssocField = value;
            }
        }
        
        /// <remarks/>
        public InfoScriptsMessageDescriptions[] MessageDescription {
            get {
                return this.messageDescriptionField;
            }
            set {
                this.messageDescriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class InfoScriptsLinkAssoc {
        
        private int idField;
        
        private int sponsoredLinkMessageIDField;
        
        private bool isActiveField;
        
        private string linkItemDDIField;
        
        private System.DateTime createUTCField;
        
        private string nameField;
        
        private string strengthField;
        
        private string strengthUOMField;
        
        private string dosageFormCodeField;
        
        private string routOfAdminCodeField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int SponsoredLinkMessageID {
            get {
                return this.sponsoredLinkMessageIDField;
            }
            set {
                this.sponsoredLinkMessageIDField = value;
            }
        }
        
        /// <remarks/>
        public bool IsActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
            }
        }
        
        /// <remarks/>
        public string LinkItemDDI {
            get {
                return this.linkItemDDIField;
            }
            set {
                this.linkItemDDIField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreateUTC {
            get {
                return this.createUTCField;
            }
            set {
                this.createUTCField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Strength {
            get {
                return this.strengthField;
            }
            set {
                this.strengthField = value;
            }
        }
        
        /// <remarks/>
        public string StrengthUOM {
            get {
                return this.strengthUOMField;
            }
            set {
                this.strengthUOMField = value;
            }
        }
        
        /// <remarks/>
        public string DosageFormCode {
            get {
                return this.dosageFormCodeField;
            }
            set {
                this.dosageFormCodeField = value;
            }
        }
        
        /// <remarks/>
        public string RoutOfAdminCode {
            get {
                return this.routOfAdminCodeField;
            }
            set {
                this.routOfAdminCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class InfoScriptsMessageDescriptions {
        
        private int idField;
        
        private int descriptionIDField;
        
        private string descriptionTextField;
        
        private int descriptionSeqNumField;
        
        private int urlIDField;
        
        private string uRLField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int DescriptionID {
            get {
                return this.descriptionIDField;
            }
            set {
                this.descriptionIDField = value;
            }
        }
        
        /// <remarks/>
        public string DescriptionText {
            get {
                return this.descriptionTextField;
            }
            set {
                this.descriptionTextField = value;
            }
        }
        
        /// <remarks/>
        public int DescriptionSeqNum {
            get {
                return this.descriptionSeqNumField;
            }
            set {
                this.descriptionSeqNumField = value;
            }
        }
        
        /// <remarks/>
        public int UrlID {
            get {
                return this.urlIDField;
            }
            set {
                this.urlIDField = value;
            }
        }
        
        /// <remarks/>
        public string URL {
            get {
                return this.uRLField;
            }
            set {
                this.uRLField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class InfoScriptsMessageListResponse : ePrescribeSvcResponse {
        
        private InfoScriptsMessage[] infoScriptsMessageListField;
        
        /// <remarks/>
        public InfoScriptsMessage[] InfoScriptsMessageList {
            get {
                return this.infoScriptsMessageListField;
            }
            set {
                this.infoScriptsMessageListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetMainAppLogRecordsResult : ePrescribeSvcResponse {
        
        private string encryptedDelimitedStringField;
        
        private System.Data.DataTable logRecordsField;
        
        /// <remarks/>
        public string EncryptedDelimitedString {
            get {
                return this.encryptedDelimitedStringField;
            }
            set {
                this.encryptedDelimitedStringField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable LogRecords {
            get {
                return this.logRecordsField;
            }
            set {
                this.logRecordsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class ExportCCDToDBMotionResponse : ePrescribeSvcResponse {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetPatientCCDResponse : ePrescribeSvcResponse {
        
        private string cCDField;
        
        private System.Nullable<bool> isAllowPatientMedHistoryField;
        
        /// <remarks/>
        public string CCD {
            get {
                return this.cCDField;
            }
            set {
                this.cCDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> IsAllowPatientMedHistory {
            get {
                return this.isAllowPatientMedHistoryField;
            }
            set {
                this.isAllowPatientMedHistoryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetEnterpriseInfoResponse : ePrescribeSvcResponse {
        
        private string enterpriseIDField;
        
        private string enterpriseNameField;
        
        private string address1Field;
        
        private string address2Field;
        
        private string cityField;
        
        private string stateField;
        
        private string zipcodeField;
        
        private string phonenumberField;
        
        private string faxnumberField;
        
        private int deluxeFeatureStatusField;
        
        private bool isePAportalField;
        
        /// <remarks/>
        public string EnterpriseID {
            get {
                return this.enterpriseIDField;
            }
            set {
                this.enterpriseIDField = value;
            }
        }
        
        /// <remarks/>
        public string EnterpriseName {
            get {
                return this.enterpriseNameField;
            }
            set {
                this.enterpriseNameField = value;
            }
        }
        
        /// <remarks/>
        public string Address1 {
            get {
                return this.address1Field;
            }
            set {
                this.address1Field = value;
            }
        }
        
        /// <remarks/>
        public string Address2 {
            get {
                return this.address2Field;
            }
            set {
                this.address2Field = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string Zipcode {
            get {
                return this.zipcodeField;
            }
            set {
                this.zipcodeField = value;
            }
        }
        
        /// <remarks/>
        public string Phonenumber {
            get {
                return this.phonenumberField;
            }
            set {
                this.phonenumberField = value;
            }
        }
        
        /// <remarks/>
        public string Faxnumber {
            get {
                return this.faxnumberField;
            }
            set {
                this.faxnumberField = value;
            }
        }
        
        /// <remarks/>
        public int DeluxeFeatureStatus {
            get {
                return this.deluxeFeatureStatusField;
            }
            set {
                this.deluxeFeatureStatusField = value;
            }
        }
        
        /// <remarks/>
        public bool IsePAportal {
            get {
                return this.isePAportalField;
            }
            set {
                this.isePAportalField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetStateLicenseAndDeaExpiryDateForUserResponse : ePrescribeSvcResponse {
        
        private System.DateTime stateLicenseExpiryDateField;
        
        private System.DateTime deaExpiryDateField;
        
        /// <remarks/>
        public System.DateTime StateLicenseExpiryDate {
            get {
                return this.stateLicenseExpiryDateField;
            }
            set {
                this.stateLicenseExpiryDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DeaExpiryDate {
            get {
                return this.deaExpiryDateField;
            }
            set {
                this.deaExpiryDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class IsValidPasswordResponse : ePrescribeSvcResponse {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetFailedScriptsResponse : ePrescribeSvcResponse {
        
        private MessageQueueScriptInfo[] messageQueueScriptInfoListField;
        
        /// <remarks/>
        public MessageQueueScriptInfo[] MessageQueueScriptInfoList {
            get {
                return this.messageQueueScriptInfoListField;
            }
            set {
                this.messageQueueScriptInfoListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetPendingScriptsResponse : ePrescribeSvcResponse {
        
        private MessageQueueScriptInfo[] messageQueueScriptInfoListField;
        
        /// <remarks/>
        public MessageQueueScriptInfo[] MessageQueueScriptInfoList {
            get {
                return this.messageQueueScriptInfoListField;
            }
            set {
                this.messageQueueScriptInfoListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class LoadMessageQueueTxResponse : ePrescribeSvcResponse {
        
        private MessageQueue[] messageQueueItemsField;
        
        /// <remarks/>
        public MessageQueue[] MessageQueueItems {
            get {
                return this.messageQueueItemsField;
            }
            set {
                this.messageQueueItemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class UpdateMessageQueueResponse : ePrescribeSvcResponse {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class InsertMessageQueueResponse : ePrescribeSvcResponse {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class SaveRxErrorResponse : ePrescribeSvcResponse {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class ECouponRefillPrintResponse : ePrescribeSvcResponse {
        
        private long eCouponDetailIDField;
        
        private bool isPharmacyNotesUpdatedToRxField;
        
        /// <remarks/>
        public long ECouponDetailID {
            get {
                return this.eCouponDetailIDField;
            }
            set {
                this.eCouponDetailIDField = value;
            }
        }
        
        /// <remarks/>
        public bool IsPharmacyNotesUpdatedToRx {
            get {
                return this.isPharmacyNotesUpdatedToRxField;
            }
            set {
                this.isPharmacyNotesUpdatedToRxField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class ECouponRefillResponse : ePrescribeSvcResponse {
        
        private long eCouponDetailIDField;
        
        private string eCouponNotesField;
        
        /// <remarks/>
        public long ECouponDetailID {
            get {
                return this.eCouponDetailIDField;
            }
            set {
                this.eCouponDetailIDField = value;
            }
        }
        
        /// <remarks/>
        public string ECouponNotes {
            get {
                return this.eCouponNotesField;
            }
            set {
                this.eCouponNotesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetECouponTransactionDetailResponse : ePrescribeSvcResponse {
        
        private ECouponTransactionModel[] eCouponTransactionListField;
        
        /// <remarks/>
        public ECouponTransactionModel[] ECouponTransactionList {
            get {
                return this.eCouponTransactionListField;
            }
            set {
                this.eCouponTransactionListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetECouponDetailsLiteByIDResponse : ePrescribeSvcResponse {
        
        private ECouponDetailLiteModel eCouponDetailLiteModelField;
        
        /// <remarks/>
        public ECouponDetailLiteModel ECouponDetailLiteModel {
            get {
                return this.eCouponDetailLiteModelField;
            }
            set {
                this.eCouponDetailLiteModelField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetECouponDetailByRxIDResponse : ePrescribeSvcResponse {
        
        private ECouponDetailModel eCouponDetailField;
        
        /// <remarks/>
        public ECouponDetailModel ECouponDetail {
            get {
                return this.eCouponDetailField;
            }
            set {
                this.eCouponDetailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class LoadMedicationResponse : ePrescribeSvcResponse {
        
        private Medication[] medicationsField;
        
        /// <remarks/>
        public Medication[] Medications {
            get {
                return this.medicationsField;
            }
            set {
                this.medicationsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class SearchMedicationAndClassResponse : ePrescribeSvcResponse {
        
        private string[] medicationNameField;
        
        /// <remarks/>
        public string[] MedicationName {
            get {
                return this.medicationNameField;
            }
            set {
                this.medicationNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class SearchMedicationResponse : ePrescribeSvcResponse {
        
        private string[] medicationNameField;
        
        /// <remarks/>
        public string[] MedicationName {
            get {
                return this.medicationNameField;
            }
            set {
                this.medicationNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetShieldUserTraitsResponse : ePrescribeSvcResponse {
        
        private ShieldTraitInfo[] shieldTraitsField;
        
        /// <remarks/>
        public ShieldTraitInfo[] ShieldTraits {
            get {
                return this.shieldTraitsField;
            }
            set {
                this.shieldTraitsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class SetProviderTraitsResponse : ePrescribeSvcResponse {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class SetShieldUserTraitResponse : ePrescribeSvcResponse {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class UpdateShieldUserTenantAdminStatusResponse : ePrescribeSvcResponse {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class UpdateUserResponse : ePrescribeSvcResponse {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class MedicationResponse : ePrescribeSvcResponse {
        
        private Medication medicationField;
        
        /// <remarks/>
        public Medication Medication {
            get {
                return this.medicationField;
            }
            set {
                this.medicationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class DenialReasonResponse : ePrescribeSvcResponse {
        
        private DenialReason[] denialReasonsField;
        
        /// <remarks/>
        public DenialReason[] DenialReasons {
            get {
                return this.denialReasonsField;
            }
            set {
                this.denialReasonsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class TeaserAdResponse : ePrescribeSvcResponse {
        
        private string contentField;
        
        private int idField;
        
        /// <remarks/>
        public string Content {
            get {
                return this.contentField;
            }
            set {
                this.contentField = value;
            }
        }
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class AuthenticateOtpFormsForSigningResponse : ePrescribeSvcResponse {
        
        private string otpAuthenticatedSecurityTokenField;
        
        private string identitySecurityTokenField;
        
        private bool isUserIdentifiedField;
        
        private bool isUserEpcsAuthorizedField;
        
        private bool isOtpValidatedField;
        
        private string otpValidationUtcField;
        
        private string credentialValidationUtcField;
        
        private string epcsPermValidationUtcField;
        
        /// <remarks/>
        public string OtpAuthenticatedSecurityToken {
            get {
                return this.otpAuthenticatedSecurityTokenField;
            }
            set {
                this.otpAuthenticatedSecurityTokenField = value;
            }
        }
        
        /// <remarks/>
        public string IdentitySecurityToken {
            get {
                return this.identitySecurityTokenField;
            }
            set {
                this.identitySecurityTokenField = value;
            }
        }
        
        /// <remarks/>
        public bool IsUserIdentified {
            get {
                return this.isUserIdentifiedField;
            }
            set {
                this.isUserIdentifiedField = value;
            }
        }
        
        /// <remarks/>
        public bool IsUserEpcsAuthorized {
            get {
                return this.isUserEpcsAuthorizedField;
            }
            set {
                this.isUserEpcsAuthorizedField = value;
            }
        }
        
        /// <remarks/>
        public bool IsOtpValidated {
            get {
                return this.isOtpValidatedField;
            }
            set {
                this.isOtpValidatedField = value;
            }
        }
        
        /// <remarks/>
        public string OtpValidationUtc {
            get {
                return this.otpValidationUtcField;
            }
            set {
                this.otpValidationUtcField = value;
            }
        }
        
        /// <remarks/>
        public string CredentialValidationUtc {
            get {
                return this.credentialValidationUtcField;
            }
            set {
                this.credentialValidationUtcField = value;
            }
        }
        
        /// <remarks/>
        public string EpcsPermValidationUtc {
            get {
                return this.epcsPermValidationUtcField;
            }
            set {
                this.epcsPermValidationUtcField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class LinkExistingShieldUserToeRxUserResponse : ePrescribeSvcResponse {
        
        private ErrorReason errorMessageField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string emailField;
        
        private string accountNameField;
        
        private string eprescribeUserGuidField;
        
        private ConnectionStringPointer dbIdField;
        
        /// <remarks/>
        public ErrorReason ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string AccountName {
            get {
                return this.accountNameField;
            }
            set {
                this.accountNameField = value;
            }
        }
        
        /// <remarks/>
        public string EprescribeUserGuid {
            get {
                return this.eprescribeUserGuidField;
            }
            set {
                this.eprescribeUserGuidField = value;
            }
        }
        
        /// <remarks/>
        public ConnectionStringPointer DbId {
            get {
                return this.dbIdField;
            }
            set {
                this.dbIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public enum ErrorReason {
        
        /// <remarks/>
        NOT_AUTHENTICATED,
        
        /// <remarks/>
        FAILED_TO_LINK_USER,
        
        /// <remarks/>
        ERX_UPDATE_FAILURE,
        
        /// <remarks/>
        FAILED_TO_RETRIEVE_USER_GUID,
        
        /// <remarks/>
        USER_PROFILE_ALREADY_LINKED_INSIDE_THIS_TENANT,
        
        /// <remarks/>
        EXTERNAL_ID_IS_NOT_USER_GUID,
        
        /// <remarks/>
        USERNAME_ALREADY_EXISTS_FOR_LICENSE,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class CreateLicenseForExistingShieldTenantResponse : ePrescribeSvcResponse {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class ActivateAndUpdateUserResponse : ePrescribeSvcResponse {
        
        private string userNameField;
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetShieldAuthenicateOTPFormsResponse : ePrescribeSvcResponse {
        
        private bool isUserAuthenicatedField;
        
        private string otpSecurityTokenField;
        
        private string identitySecurityTokenField;
        
        private bool isFailedShieldReauthorizationField;
        
        private bool isIncorrectShieldPasswordField;
        
        /// <remarks/>
        public bool IsUserAuthenicated {
            get {
                return this.isUserAuthenicatedField;
            }
            set {
                this.isUserAuthenicatedField = value;
            }
        }
        
        /// <remarks/>
        public string OtpSecurityToken {
            get {
                return this.otpSecurityTokenField;
            }
            set {
                this.otpSecurityTokenField = value;
            }
        }
        
        /// <remarks/>
        public string IdentitySecurityToken {
            get {
                return this.identitySecurityTokenField;
            }
            set {
                this.identitySecurityTokenField = value;
            }
        }
        
        /// <remarks/>
        public bool isFailedShieldReauthorization {
            get {
                return this.isFailedShieldReauthorizationField;
            }
            set {
                this.isFailedShieldReauthorizationField = value;
            }
        }
        
        /// <remarks/>
        public bool isIncorrectShieldPassword {
            get {
                return this.isIncorrectShieldPasswordField;
            }
            set {
                this.isIncorrectShieldPasswordField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetShieldSendOTPResponse : ePrescribeSvcResponse {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetShieldOTPFormsResponse : ePrescribeSvcResponse {
        
        private OTPForm[] oTPFormsField;
        
        private string transactionIDField;
        
        private string identityNameField;
        
        /// <remarks/>
        public OTPForm[] OTPForms {
            get {
                return this.oTPFormsField;
            }
            set {
                this.oTPFormsField = value;
            }
        }
        
        /// <remarks/>
        public string TransactionID {
            get {
                return this.transactionIDField;
            }
            set {
                this.transactionIDField = value;
            }
        }
        
        /// <remarks/>
        public string IdentityName {
            get {
                return this.identityNameField;
            }
            set {
                this.identityNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class SearchDiagnosisResponse : ePrescribeSvcResponse {
        
        private DiagnosisModel[] diagnosisModelListField;
        
        /// <remarks/>
        public DiagnosisModel[] DiagnosisModelList {
            get {
                return this.diagnosisModelListField;
            }
            set {
                this.diagnosisModelListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class SavePatientCCDResponse : ePrescribeSvcResponse {
        
        private string patientGUIDField;
        
        private string licenseIDField;
        
        private string cCDField;
        
        private bool isSuccessfulField;
        
        private string responseStatusField;
        
        private Errors errorsField;
        
        /// <remarks/>
        public string PatientGUID {
            get {
                return this.patientGUIDField;
            }
            set {
                this.patientGUIDField = value;
            }
        }
        
        /// <remarks/>
        public string LicenseID {
            get {
                return this.licenseIDField;
            }
            set {
                this.licenseIDField = value;
            }
        }
        
        /// <remarks/>
        public string CCD {
            get {
                return this.cCDField;
            }
            set {
                this.cCDField = value;
            }
        }
        
        /// <remarks/>
        public bool IsSuccessful {
            get {
                return this.isSuccessfulField;
            }
            set {
                this.isSuccessfulField = value;
            }
        }
        
        /// <remarks/>
        public string ResponseStatus {
            get {
                return this.responseStatusField;
            }
            set {
                this.responseStatusField = value;
            }
        }
        
        /// <remarks/>
        public Errors Errors {
            get {
                return this.errorsField;
            }
            set {
                this.errorsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class SavePatientProblemResponse : ePrescribeSvcResponse {
        
        private string patientProblemIDField;
        
        private string patientProblemDescriptionField;
        
        /// <remarks/>
        public string PatientProblemID {
            get {
                return this.patientProblemIDField;
            }
            set {
                this.patientProblemIDField = value;
            }
        }
        
        /// <remarks/>
        public string PatientProblemDescription {
            get {
                return this.patientProblemDescriptionField;
            }
            set {
                this.patientProblemDescriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class UpdatePatientProblemResponse : ePrescribeSvcResponse {
        
        private string patientProblemIDField;
        
        private System.Nullable<PatientProblemStatus> problemStatusField;
        
        private string problemDescriptionField;
        
        /// <remarks/>
        public string PatientProblemID {
            get {
                return this.patientProblemIDField;
            }
            set {
                this.patientProblemIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<PatientProblemStatus> ProblemStatus {
            get {
                return this.problemStatusField;
            }
            set {
                this.problemStatusField = value;
            }
        }
        
        /// <remarks/>
        public string ProblemDescription {
            get {
                return this.problemDescriptionField;
            }
            set {
                this.problemDescriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetRxInfoDetailsLiteByRxIDResponse : ePrescribeSvcResponse {
        
        private RxInfoDetailLiteModel[] rxInfoDetailsField;
        
        /// <remarks/>
        public RxInfoDetailLiteModel[] RxInfoDetails {
            get {
                return this.rxInfoDetailsField;
            }
            set {
                this.rxInfoDetailsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class DXCClientUserResponse : ePrescribeSvcResponse {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetProviderProgramEnrollmentsResponse : ePrescribeSvcResponse {
        
        private RuleAgentID[] dxcProviderEnrollmentListField;
        
        /// <remarks/>
        public RuleAgentID[] DxcProviderEnrollmentList {
            get {
                return this.dxcProviderEnrollmentListField;
            }
            set {
                this.dxcProviderEnrollmentListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class UpdateUserInUMPResponse : ePrescribeSvcResponse {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class AddUserToUMPResponse : ePrescribeSvcResponse {
        
        private string errorDescriptionField;
        
        private string firstTimePasswordField;
        
        private string loginNameField;
        
        /// <remarks/>
        public string ErrorDescription {
            get {
                return this.errorDescriptionField;
            }
            set {
                this.errorDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string FirstTimePassword {
            get {
                return this.firstTimePasswordField;
            }
            set {
                this.firstTimePasswordField = value;
            }
        }
        
        /// <remarks/>
        public string LoginName {
            get {
                return this.loginNameField;
            }
            set {
                this.loginNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class UpdateLicenseInUMPResponse : ePrescribeSvcResponse {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class AddLicenseToUMPResponse : ePrescribeSvcResponse {
        
        private string licenseIDField;
        
        private int uMPClientIDField;
        
        private string uMPAccountNumberField;
        
        private int uMPAccountIDField;
        
        private int uMPOrganizationIDField;
        
        /// <remarks/>
        public string LicenseID {
            get {
                return this.licenseIDField;
            }
            set {
                this.licenseIDField = value;
            }
        }
        
        /// <remarks/>
        public int UMPClientID {
            get {
                return this.uMPClientIDField;
            }
            set {
                this.uMPClientIDField = value;
            }
        }
        
        /// <remarks/>
        public string UMPAccountNumber {
            get {
                return this.uMPAccountNumberField;
            }
            set {
                this.uMPAccountNumberField = value;
            }
        }
        
        /// <remarks/>
        public int UMPAccountID {
            get {
                return this.uMPAccountIDField;
            }
            set {
                this.uMPAccountIDField = value;
            }
        }
        
        /// <remarks/>
        public int UMPOrganizationID {
            get {
                return this.uMPOrganizationIDField;
            }
            set {
                this.uMPOrganizationIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class ProcessHubMailboxHeaderListResponse : ePrescribeSvcResponse {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetRegistrantIdProofingLoaResponse : ePrescribeSvcResponse {
        
        private long registrantIdField;
        
        private string levelOfAssuranceField;
        
        /// <remarks/>
        public long RegistrantId {
            get {
                return this.registrantIdField;
            }
            set {
                this.registrantIdField = value;
            }
        }
        
        /// <remarks/>
        public string LevelOfAssurance {
            get {
                return this.levelOfAssuranceField;
            }
            set {
                this.levelOfAssuranceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class CreateRegistrantUserResponse : ePrescribeSvcResponse {
        
        private long registrantIdField;
        
        private System.Guid shieldObjectIdField;
        
        private string shieldIdentityTokenField;
        
        /// <remarks/>
        public long RegistrantId {
            get {
                return this.registrantIdField;
            }
            set {
                this.registrantIdField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid ShieldObjectId {
            get {
                return this.shieldObjectIdField;
            }
            set {
                this.shieldObjectIdField = value;
            }
        }
        
        /// <remarks/>
        public string ShieldIdentityToken {
            get {
                return this.shieldIdentityTokenField;
            }
            set {
                this.shieldIdentityTokenField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class ShieldAuditEventResponse : ePrescribeSvcResponse {
        
        private SimpleResult resultField;
        
        /// <remarks/>
        public SimpleResult Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetUserShieldCspStatusInfoResponse : ePrescribeSvcResponse {
        
        private bool isTenantShieldCSPAppInstanceAvailableField;
        
        private bool isUserEnrolledToZentryCspField;
        
        private bool isUserEnrolledWithIdMeField;
        
        private string idMeLOAStatusLevelField;
        
        /// <remarks/>
        public bool IsTenantShieldCSPAppInstanceAvailable {
            get {
                return this.isTenantShieldCSPAppInstanceAvailableField;
            }
            set {
                this.isTenantShieldCSPAppInstanceAvailableField = value;
            }
        }
        
        /// <remarks/>
        public bool IsUserEnrolledToZentryCsp {
            get {
                return this.isUserEnrolledToZentryCspField;
            }
            set {
                this.isUserEnrolledToZentryCspField = value;
            }
        }
        
        /// <remarks/>
        public bool IsUserEnrolledWithIdMe {
            get {
                return this.isUserEnrolledWithIdMeField;
            }
            set {
                this.isUserEnrolledWithIdMeField = value;
            }
        }
        
        /// <remarks/>
        public string IdMeLOAStatusLevel {
            get {
                return this.idMeLOAStatusLevelField;
            }
            set {
                this.idMeLOAStatusLevelField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class CreateAndSignMobileAccessTokenResponse : ePrescribeSvcResponse {
        
        private string accessTokenField;
        
        /// <remarks/>
        public string AccessToken {
            get {
                return this.accessTokenField;
            }
            set {
                this.accessTokenField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class ConvertFromHtmlToPdfResponse : ePrescribeSvcResponse {
        
        private string pdfBase64Field;
        
        /// <remarks/>
        public string PdfBase64 {
            get {
                return this.pdfBase64Field;
            }
            set {
                this.pdfBase64Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetMessageTrackingAcksResponse : ePrescribeSvcResponse {
        
        private UserMessageTrackingAck[] userMessageTrackingAckListField;
        
        /// <remarks/>
        public UserMessageTrackingAck[] UserMessageTrackingAckList {
            get {
                return this.userMessageTrackingAckListField;
            }
            set {
                this.userMessageTrackingAckListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class SearchAccountsByNameResponse : ePrescribeSvcResponse {
        
        private System.Data.DataTable accountsFoundField;
        
        /// <remarks/>
        public System.Data.DataTable AccountsFound {
            get {
                return this.accountsFoundField;
            }
            set {
                this.accountsFoundField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetMatchingPharmacyResponse : ePrescribeSvcResponse {
        
        private string pharmacyIDField;
        
        private string nABPField;
        
        private string nPIField;
        
        /// <remarks/>
        public string PharmacyID {
            get {
                return this.pharmacyIDField;
            }
            set {
                this.pharmacyIDField = value;
            }
        }
        
        /// <remarks/>
        public string NABP {
            get {
                return this.nABPField;
            }
            set {
                this.nABPField = value;
            }
        }
        
        /// <remarks/>
        public string NPI {
            get {
                return this.nPIField;
            }
            set {
                this.nPIField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetPdmpEnrollmentFormInfoResponse {
        
        private string accountNameField;
        
        private string accountIDField;
        
        private string address1Field;
        
        private string address2Field;
        
        private string cityField;
        
        private string stateField;
        
        private string zipcodeField;
        
        private string faxAreaCodeField;
        
        private string faxNumberField;
        
        private string phoneAreaCodeField;
        
        private string phoneNumberField;
        
        private string providerCountField;
        
        private int termsAndConditionsIDField;
        
        private string termsAndConditionsField;
        
        /// <remarks/>
        public string AccountName {
            get {
                return this.accountNameField;
            }
            set {
                this.accountNameField = value;
            }
        }
        
        /// <remarks/>
        public string AccountID {
            get {
                return this.accountIDField;
            }
            set {
                this.accountIDField = value;
            }
        }
        
        /// <remarks/>
        public string Address1 {
            get {
                return this.address1Field;
            }
            set {
                this.address1Field = value;
            }
        }
        
        /// <remarks/>
        public string Address2 {
            get {
                return this.address2Field;
            }
            set {
                this.address2Field = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string Zipcode {
            get {
                return this.zipcodeField;
            }
            set {
                this.zipcodeField = value;
            }
        }
        
        /// <remarks/>
        public string FaxAreaCode {
            get {
                return this.faxAreaCodeField;
            }
            set {
                this.faxAreaCodeField = value;
            }
        }
        
        /// <remarks/>
        public string FaxNumber {
            get {
                return this.faxNumberField;
            }
            set {
                this.faxNumberField = value;
            }
        }
        
        /// <remarks/>
        public string PhoneAreaCode {
            get {
                return this.phoneAreaCodeField;
            }
            set {
                this.phoneAreaCodeField = value;
            }
        }
        
        /// <remarks/>
        public string PhoneNumber {
            get {
                return this.phoneNumberField;
            }
            set {
                this.phoneNumberField = value;
            }
        }
        
        /// <remarks/>
        public string ProviderCount {
            get {
                return this.providerCountField;
            }
            set {
                this.providerCountField = value;
            }
        }
        
        /// <remarks/>
        public int TermsAndConditionsID {
            get {
                return this.termsAndConditionsIDField;
            }
            set {
                this.termsAndConditionsIDField = value;
            }
        }
        
        /// <remarks/>
        public string TermsAndConditions {
            get {
                return this.termsAndConditionsField;
            }
            set {
                this.termsAndConditionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetPPTPlusSamlTokenResponse {
        
        private string base64SamlTokenField;
        
        private string rawSamlTokenField;
        
        private System.DateTime tokenRefreshTimeField;
        
        /// <remarks/>
        public string Base64SamlToken {
            get {
                return this.base64SamlTokenField;
            }
            set {
                this.base64SamlTokenField = value;
            }
        }
        
        /// <remarks/>
        public string RawSamlToken {
            get {
                return this.rawSamlTokenField;
            }
            set {
                this.rawSamlTokenField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime TokenRefreshTime {
            get {
                return this.tokenRefreshTimeField;
            }
            set {
                this.tokenRefreshTimeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetPDMPSamlTokenResponse {
        
        private string base64SamlTokenField;
        
        private string rawSamlTokenField;
        
        private System.DateTime tokenRefreshTimeField;
        
        /// <remarks/>
        public string Base64SamlToken {
            get {
                return this.base64SamlTokenField;
            }
            set {
                this.base64SamlTokenField = value;
            }
        }
        
        /// <remarks/>
        public string RawSamlToken {
            get {
                return this.rawSamlTokenField;
            }
            set {
                this.rawSamlTokenField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime TokenRefreshTime {
            get {
                return this.tokenRefreshTimeField;
            }
            set {
                this.tokenRefreshTimeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class RxTask {
        
        private long rxTaskIDField;
        
        private PrescriptionTaskType1 typeField;
        
        private PrescriptionTaskStatus taskStatusField;
        
        private PrescriptionStatus rxStatusField;
        
        private string commentsField;
        
        private string userIDField;
        
        private string relatedUserIDField;
        
        /// <remarks/>
        public long RxTaskID {
            get {
                return this.rxTaskIDField;
            }
            set {
                this.rxTaskIDField = value;
            }
        }
        
        /// <remarks/>
        public PrescriptionTaskType1 Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public PrescriptionTaskStatus TaskStatus {
            get {
                return this.taskStatusField;
            }
            set {
                this.taskStatusField = value;
            }
        }
        
        /// <remarks/>
        public PrescriptionStatus RxStatus {
            get {
                return this.rxStatusField;
            }
            set {
                this.rxStatusField = value;
            }
        }
        
        /// <remarks/>
        public string Comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
            }
        }
        
        /// <remarks/>
        public string UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public string RelatedUserID {
            get {
                return this.relatedUserIDField;
            }
            set {
                this.relatedUserIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public enum PrescriptionTaskStatus {
        
        /// <remarks/>
        NEW,
        
        /// <remarks/>
        PROCESSED,
        
        /// <remarks/>
        DUR_CANCEL,
        
        /// <remarks/>
        REFUSE,
        
        /// <remarks/>
        ONE,
        
        /// <remarks/>
        ADMIN_CANCELED,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public enum PrescriptionStatus {
        
        /// <remarks/>
        NEW,
        
        /// <remarks/>
        PENDING_APPROVAL,
        
        /// <remarks/>
        REJECTED,
        
        /// <remarks/>
        PENDING_TRANSMISSION,
        
        /// <remarks/>
        DISCONTINUED,
        
        /// <remarks/>
        ENTERED_IN_ERROR,
        
        /// <remarks/>
        SCRIPT_PAD,
        
        /// <remarks/>
        COMPLETE,
        
        /// <remarks/>
        REJECTED_FROM_PENDING,
        
        /// <remarks/>
        ADMIN_CANCELED,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class DURDuplicateTherapy {
        
        private Rx[] duplicateTherapyRxsField;
        
        private int dURIDField;
        
        private string rxIDField;
        
        private string rxNumberField;
        
        private string dDIField;
        
        private string medNameField;
        
        private string strengthField;
        
        private string strengthUOMField;
        
        private decimal quantityField;
        
        private string packageDescriptionField;
        
        private int daysSupplyField;
        
        private int refillsField;
        
        private string sigTextField;
        
        private string dosageFormField;
        
        private System.DateTime rxDateField;
        
        private string routeOfAdminDescriptionField;
        
        private string warningTextField;
        
        private string warningDataXMLField;
        
        /// <remarks/>
        public Rx[] DuplicateTherapyRxs {
            get {
                return this.duplicateTherapyRxsField;
            }
            set {
                this.duplicateTherapyRxsField = value;
            }
        }
        
        /// <remarks/>
        public int DURID {
            get {
                return this.dURIDField;
            }
            set {
                this.dURIDField = value;
            }
        }
        
        /// <remarks/>
        public string RxID {
            get {
                return this.rxIDField;
            }
            set {
                this.rxIDField = value;
            }
        }
        
        /// <remarks/>
        public string RxNumber {
            get {
                return this.rxNumberField;
            }
            set {
                this.rxNumberField = value;
            }
        }
        
        /// <remarks/>
        public string DDI {
            get {
                return this.dDIField;
            }
            set {
                this.dDIField = value;
            }
        }
        
        /// <remarks/>
        public string MedName {
            get {
                return this.medNameField;
            }
            set {
                this.medNameField = value;
            }
        }
        
        /// <remarks/>
        public string Strength {
            get {
                return this.strengthField;
            }
            set {
                this.strengthField = value;
            }
        }
        
        /// <remarks/>
        public string StrengthUOM {
            get {
                return this.strengthUOMField;
            }
            set {
                this.strengthUOMField = value;
            }
        }
        
        /// <remarks/>
        public decimal Quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
            }
        }
        
        /// <remarks/>
        public string PackageDescription {
            get {
                return this.packageDescriptionField;
            }
            set {
                this.packageDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public int DaysSupply {
            get {
                return this.daysSupplyField;
            }
            set {
                this.daysSupplyField = value;
            }
        }
        
        /// <remarks/>
        public int Refills {
            get {
                return this.refillsField;
            }
            set {
                this.refillsField = value;
            }
        }
        
        /// <remarks/>
        public string SigText {
            get {
                return this.sigTextField;
            }
            set {
                this.sigTextField = value;
            }
        }
        
        /// <remarks/>
        public string DosageForm {
            get {
                return this.dosageFormField;
            }
            set {
                this.dosageFormField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime RxDate {
            get {
                return this.rxDateField;
            }
            set {
                this.rxDateField = value;
            }
        }
        
        /// <remarks/>
        public string RouteOfAdminDescription {
            get {
                return this.routeOfAdminDescriptionField;
            }
            set {
                this.routeOfAdminDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string WarningText {
            get {
                return this.warningTextField;
            }
            set {
                this.warningTextField = value;
            }
        }
        
        /// <remarks/>
        public string WarningDataXML {
            get {
                return this.warningDataXMLField;
            }
            set {
                this.warningDataXMLField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class Rx {
        
        private string licenseIDField;
        
        private string siteIDField;
        
        private string providerIDField;
        
        private string patientIDField;
        
        private string rxIDField;
        
        private string rxNumberField;
        
        private System.DateTime rxDateField;
        
        private System.DateTime rxEndDateField;
        
        private System.DateTime rxExpirationDateField;
        
        private System.DateTime rxCreateDateField;
        
        private PrescriptionStatus statusField;
        
        private string actionStatusField;
        
        private string originalRxIDField;
        
        private string dDIField;
        
        private string rxNormField;
        
        private string originalDDIField;
        
        private string formularyStatusField;
        
        private int originalFormularyStatusCodeField;
        
        private string originalIsListedField;
        
        private int sourceFormularyStatusField;
        
        private string levelOfPreferednessField;
        
        private string isOTCField;
        
        private string sigIDField;
        
        private string sigTextField;
        
        private string controlledSubstanceCodeField;
        
        private string gPPCField;
        
        private decimal packageSizeField;
        
        private string packageUOMField;
        
        private int packageQuantityField;
        
        private string packageDescriptionField;
        
        private string inventoryXMLField;
        
        private decimal quantityField;
        
        private int refillsField;
        
        private bool dAWField;
        
        private int daysSupplyField;
        
        private string medicationNameField;
        
        private string strengthField;
        
        private string strengthUOMField;
        
        private string routeOfAdminCodeField;
        
        private string routeOfAdminDescriptionField;
        
        private string dosageFormCodeField;
        
        private string dosageFormDescriptionField;
        
        private string notesField;
        
        private string iCD9CodeField;
        
        private string pharmacyIDField;
        
        private string planIDField;
        
        private string groupIDField;
        
        private string formularyIDField;
        
        private int coverageIDField;
        
        private int alternativeIgnoreReasonField;
        
        private string stateControlledSubstanceCodeField;
        
        private RxUser rxUserField;
        
        private Pharmacy pharmacyField;
        
        private string nDCField;
        
        private string registryCheckedField;
        
        private string externalRxIDField;
        
        private string transmissionMethodField;
        
        private string formStatusCodeField;
        
        private System.DateTime updatedDateField;
        
        private System.DateTime startDateField;
        
        /// <remarks/>
        public string LicenseID {
            get {
                return this.licenseIDField;
            }
            set {
                this.licenseIDField = value;
            }
        }
        
        /// <remarks/>
        public string SiteID {
            get {
                return this.siteIDField;
            }
            set {
                this.siteIDField = value;
            }
        }
        
        /// <remarks/>
        public string ProviderID {
            get {
                return this.providerIDField;
            }
            set {
                this.providerIDField = value;
            }
        }
        
        /// <remarks/>
        public string PatientID {
            get {
                return this.patientIDField;
            }
            set {
                this.patientIDField = value;
            }
        }
        
        /// <remarks/>
        public string RxID {
            get {
                return this.rxIDField;
            }
            set {
                this.rxIDField = value;
            }
        }
        
        /// <remarks/>
        public string RxNumber {
            get {
                return this.rxNumberField;
            }
            set {
                this.rxNumberField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime RxDate {
            get {
                return this.rxDateField;
            }
            set {
                this.rxDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime RxEndDate {
            get {
                return this.rxEndDateField;
            }
            set {
                this.rxEndDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime RxExpirationDate {
            get {
                return this.rxExpirationDateField;
            }
            set {
                this.rxExpirationDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime RxCreateDate {
            get {
                return this.rxCreateDateField;
            }
            set {
                this.rxCreateDateField = value;
            }
        }
        
        /// <remarks/>
        public PrescriptionStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string ActionStatus {
            get {
                return this.actionStatusField;
            }
            set {
                this.actionStatusField = value;
            }
        }
        
        /// <remarks/>
        public string OriginalRxID {
            get {
                return this.originalRxIDField;
            }
            set {
                this.originalRxIDField = value;
            }
        }
        
        /// <remarks/>
        public string DDI {
            get {
                return this.dDIField;
            }
            set {
                this.dDIField = value;
            }
        }
        
        /// <remarks/>
        public string RxNorm {
            get {
                return this.rxNormField;
            }
            set {
                this.rxNormField = value;
            }
        }
        
        /// <remarks/>
        public string OriginalDDI {
            get {
                return this.originalDDIField;
            }
            set {
                this.originalDDIField = value;
            }
        }
        
        /// <remarks/>
        public string FormularyStatus {
            get {
                return this.formularyStatusField;
            }
            set {
                this.formularyStatusField = value;
            }
        }
        
        /// <remarks/>
        public int OriginalFormularyStatusCode {
            get {
                return this.originalFormularyStatusCodeField;
            }
            set {
                this.originalFormularyStatusCodeField = value;
            }
        }
        
        /// <remarks/>
        public string OriginalIsListed {
            get {
                return this.originalIsListedField;
            }
            set {
                this.originalIsListedField = value;
            }
        }
        
        /// <remarks/>
        public int SourceFormularyStatus {
            get {
                return this.sourceFormularyStatusField;
            }
            set {
                this.sourceFormularyStatusField = value;
            }
        }
        
        /// <remarks/>
        public string LevelOfPreferedness {
            get {
                return this.levelOfPreferednessField;
            }
            set {
                this.levelOfPreferednessField = value;
            }
        }
        
        /// <remarks/>
        public string IsOTC {
            get {
                return this.isOTCField;
            }
            set {
                this.isOTCField = value;
            }
        }
        
        /// <remarks/>
        public string SigID {
            get {
                return this.sigIDField;
            }
            set {
                this.sigIDField = value;
            }
        }
        
        /// <remarks/>
        public string SigText {
            get {
                return this.sigTextField;
            }
            set {
                this.sigTextField = value;
            }
        }
        
        /// <remarks/>
        public string ControlledSubstanceCode {
            get {
                return this.controlledSubstanceCodeField;
            }
            set {
                this.controlledSubstanceCodeField = value;
            }
        }
        
        /// <remarks/>
        public string GPPC {
            get {
                return this.gPPCField;
            }
            set {
                this.gPPCField = value;
            }
        }
        
        /// <remarks/>
        public decimal PackageSize {
            get {
                return this.packageSizeField;
            }
            set {
                this.packageSizeField = value;
            }
        }
        
        /// <remarks/>
        public string PackageUOM {
            get {
                return this.packageUOMField;
            }
            set {
                this.packageUOMField = value;
            }
        }
        
        /// <remarks/>
        public int PackageQuantity {
            get {
                return this.packageQuantityField;
            }
            set {
                this.packageQuantityField = value;
            }
        }
        
        /// <remarks/>
        public string PackageDescription {
            get {
                return this.packageDescriptionField;
            }
            set {
                this.packageDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string InventoryXML {
            get {
                return this.inventoryXMLField;
            }
            set {
                this.inventoryXMLField = value;
            }
        }
        
        /// <remarks/>
        public decimal Quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
            }
        }
        
        /// <remarks/>
        public int Refills {
            get {
                return this.refillsField;
            }
            set {
                this.refillsField = value;
            }
        }
        
        /// <remarks/>
        public bool DAW {
            get {
                return this.dAWField;
            }
            set {
                this.dAWField = value;
            }
        }
        
        /// <remarks/>
        public int DaysSupply {
            get {
                return this.daysSupplyField;
            }
            set {
                this.daysSupplyField = value;
            }
        }
        
        /// <remarks/>
        public string MedicationName {
            get {
                return this.medicationNameField;
            }
            set {
                this.medicationNameField = value;
            }
        }
        
        /// <remarks/>
        public string Strength {
            get {
                return this.strengthField;
            }
            set {
                this.strengthField = value;
            }
        }
        
        /// <remarks/>
        public string StrengthUOM {
            get {
                return this.strengthUOMField;
            }
            set {
                this.strengthUOMField = value;
            }
        }
        
        /// <remarks/>
        public string RouteOfAdminCode {
            get {
                return this.routeOfAdminCodeField;
            }
            set {
                this.routeOfAdminCodeField = value;
            }
        }
        
        /// <remarks/>
        public string RouteOfAdminDescription {
            get {
                return this.routeOfAdminDescriptionField;
            }
            set {
                this.routeOfAdminDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string DosageFormCode {
            get {
                return this.dosageFormCodeField;
            }
            set {
                this.dosageFormCodeField = value;
            }
        }
        
        /// <remarks/>
        public string DosageFormDescription {
            get {
                return this.dosageFormDescriptionField;
            }
            set {
                this.dosageFormDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Notes {
            get {
                return this.notesField;
            }
            set {
                this.notesField = value;
            }
        }
        
        /// <remarks/>
        public string ICD9Code {
            get {
                return this.iCD9CodeField;
            }
            set {
                this.iCD9CodeField = value;
            }
        }
        
        /// <remarks/>
        public string PharmacyID {
            get {
                return this.pharmacyIDField;
            }
            set {
                this.pharmacyIDField = value;
            }
        }
        
        /// <remarks/>
        public string PlanID {
            get {
                return this.planIDField;
            }
            set {
                this.planIDField = value;
            }
        }
        
        /// <remarks/>
        public string GroupID {
            get {
                return this.groupIDField;
            }
            set {
                this.groupIDField = value;
            }
        }
        
        /// <remarks/>
        public string FormularyID {
            get {
                return this.formularyIDField;
            }
            set {
                this.formularyIDField = value;
            }
        }
        
        /// <remarks/>
        public int CoverageID {
            get {
                return this.coverageIDField;
            }
            set {
                this.coverageIDField = value;
            }
        }
        
        /// <remarks/>
        public int AlternativeIgnoreReason {
            get {
                return this.alternativeIgnoreReasonField;
            }
            set {
                this.alternativeIgnoreReasonField = value;
            }
        }
        
        /// <remarks/>
        public string StateControlledSubstanceCode {
            get {
                return this.stateControlledSubstanceCodeField;
            }
            set {
                this.stateControlledSubstanceCodeField = value;
            }
        }
        
        /// <remarks/>
        public RxUser RxUser {
            get {
                return this.rxUserField;
            }
            set {
                this.rxUserField = value;
            }
        }
        
        /// <remarks/>
        public Pharmacy Pharmacy {
            get {
                return this.pharmacyField;
            }
            set {
                this.pharmacyField = value;
            }
        }
        
        /// <remarks/>
        public string NDC {
            get {
                return this.nDCField;
            }
            set {
                this.nDCField = value;
            }
        }
        
        /// <remarks/>
        public string RegistryChecked {
            get {
                return this.registryCheckedField;
            }
            set {
                this.registryCheckedField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalRxID {
            get {
                return this.externalRxIDField;
            }
            set {
                this.externalRxIDField = value;
            }
        }
        
        /// <remarks/>
        public string TransmissionMethod {
            get {
                return this.transmissionMethodField;
            }
            set {
                this.transmissionMethodField = value;
            }
        }
        
        /// <remarks/>
        public string FormStatusCode {
            get {
                return this.formStatusCodeField;
            }
            set {
                this.formStatusCodeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime UpdatedDate {
            get {
                return this.updatedDateField;
            }
            set {
                this.updatedDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class Pharmacy {
        
        private string pharmacyIDField;
        
        private string nameField;
        
        private string nABPField;
        
        private string address1Field;
        
        private string address2Field;
        
        private string cityField;
        
        private string stateField;
        
        private string zipField;
        
        private string phoneAreaCodeField;
        
        private string phoneNumberField;
        
        private string faxAreaCodeField;
        
        private string faxNumberField;
        
        private bool activeField;
        
        private string typeField;
        
        /// <remarks/>
        public string PharmacyID {
            get {
                return this.pharmacyIDField;
            }
            set {
                this.pharmacyIDField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string NABP {
            get {
                return this.nABPField;
            }
            set {
                this.nABPField = value;
            }
        }
        
        /// <remarks/>
        public string Address1 {
            get {
                return this.address1Field;
            }
            set {
                this.address1Field = value;
            }
        }
        
        /// <remarks/>
        public string Address2 {
            get {
                return this.address2Field;
            }
            set {
                this.address2Field = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string Zip {
            get {
                return this.zipField;
            }
            set {
                this.zipField = value;
            }
        }
        
        /// <remarks/>
        public string PhoneAreaCode {
            get {
                return this.phoneAreaCodeField;
            }
            set {
                this.phoneAreaCodeField = value;
            }
        }
        
        /// <remarks/>
        public string PhoneNumber {
            get {
                return this.phoneNumberField;
            }
            set {
                this.phoneNumberField = value;
            }
        }
        
        /// <remarks/>
        public string FaxAreaCode {
            get {
                return this.faxAreaCodeField;
            }
            set {
                this.faxAreaCodeField = value;
            }
        }
        
        /// <remarks/>
        public string FaxNumber {
            get {
                return this.faxNumberField;
            }
            set {
                this.faxNumberField = value;
            }
        }
        
        /// <remarks/>
        public bool Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class DURInteraction {
        
        private DURDrugInteraction[] drugInteractionsField;
        
        private DURAlcoholInteraction[] alcoholInteractionsField;
        
        private DURFoodInteraction[] foodInteractionsField;
        
        /// <remarks/>
        public DURDrugInteraction[] DrugInteractions {
            get {
                return this.drugInteractionsField;
            }
            set {
                this.drugInteractionsField = value;
            }
        }
        
        /// <remarks/>
        public DURAlcoholInteraction[] AlcoholInteractions {
            get {
                return this.alcoholInteractionsField;
            }
            set {
                this.alcoholInteractionsField = value;
            }
        }
        
        /// <remarks/>
        public DURFoodInteraction[] FoodInteractions {
            get {
                return this.foodInteractionsField;
            }
            set {
                this.foodInteractionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class DURInformation {
        
        private string dURTypeField;
        
        private string rxIDField;
        
        private string rxNumberField;
        
        private string dDIField;
        
        private string medNameField;
        
        private string strengthField;
        
        private string strengthUOMField;
        
        private decimal quantityField;
        
        private int refillsField;
        
        private string routeOfAdminField;
        
        private string dosageFormField;
        
        private DURInteraction interactionField;
        
        private DURPriorAdverseReaction[] priorAdverseReactionsField;
        
        private DURDuplicateTherapy[] duplicateTherapyField;
        
        private DURDosage dosageField;
        
        private DURCustomMed[] customMedsField;
        
        private DURCopyright copyrightField;
        
        private bool hasDURWarningsField;
        
        private string severityField;
        
        private string onsetField;
        
        private string titleField;
        
        private string warningTextField;
        
        private string additionalDataField;
        
        private string errorMsgField;
        
        /// <remarks/>
        public string DURType {
            get {
                return this.dURTypeField;
            }
            set {
                this.dURTypeField = value;
            }
        }
        
        /// <remarks/>
        public string RxID {
            get {
                return this.rxIDField;
            }
            set {
                this.rxIDField = value;
            }
        }
        
        /// <remarks/>
        public string RxNumber {
            get {
                return this.rxNumberField;
            }
            set {
                this.rxNumberField = value;
            }
        }
        
        /// <remarks/>
        public string DDI {
            get {
                return this.dDIField;
            }
            set {
                this.dDIField = value;
            }
        }
        
        /// <remarks/>
        public string MedName {
            get {
                return this.medNameField;
            }
            set {
                this.medNameField = value;
            }
        }
        
        /// <remarks/>
        public string Strength {
            get {
                return this.strengthField;
            }
            set {
                this.strengthField = value;
            }
        }
        
        /// <remarks/>
        public string StrengthUOM {
            get {
                return this.strengthUOMField;
            }
            set {
                this.strengthUOMField = value;
            }
        }
        
        /// <remarks/>
        public decimal Quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
            }
        }
        
        /// <remarks/>
        public int Refills {
            get {
                return this.refillsField;
            }
            set {
                this.refillsField = value;
            }
        }
        
        /// <remarks/>
        public string RouteOfAdmin {
            get {
                return this.routeOfAdminField;
            }
            set {
                this.routeOfAdminField = value;
            }
        }
        
        /// <remarks/>
        public string DosageForm {
            get {
                return this.dosageFormField;
            }
            set {
                this.dosageFormField = value;
            }
        }
        
        /// <remarks/>
        public DURInteraction Interaction {
            get {
                return this.interactionField;
            }
            set {
                this.interactionField = value;
            }
        }
        
        /// <remarks/>
        public DURPriorAdverseReaction[] PriorAdverseReactions {
            get {
                return this.priorAdverseReactionsField;
            }
            set {
                this.priorAdverseReactionsField = value;
            }
        }
        
        /// <remarks/>
        public DURDuplicateTherapy[] DuplicateTherapy {
            get {
                return this.duplicateTherapyField;
            }
            set {
                this.duplicateTherapyField = value;
            }
        }
        
        /// <remarks/>
        public DURDosage Dosage {
            get {
                return this.dosageField;
            }
            set {
                this.dosageField = value;
            }
        }
        
        /// <remarks/>
        public DURCustomMed[] CustomMeds {
            get {
                return this.customMedsField;
            }
            set {
                this.customMedsField = value;
            }
        }
        
        /// <remarks/>
        public DURCopyright Copyright {
            get {
                return this.copyrightField;
            }
            set {
                this.copyrightField = value;
            }
        }
        
        /// <remarks/>
        public bool HasDURWarnings {
            get {
                return this.hasDURWarningsField;
            }
            set {
                this.hasDURWarningsField = value;
            }
        }
        
        /// <remarks/>
        public string Severity {
            get {
                return this.severityField;
            }
            set {
                this.severityField = value;
            }
        }
        
        /// <remarks/>
        public string Onset {
            get {
                return this.onsetField;
            }
            set {
                this.onsetField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string WarningText {
            get {
                return this.warningTextField;
            }
            set {
                this.warningTextField = value;
            }
        }
        
        /// <remarks/>
        public string AdditionalData {
            get {
                return this.additionalDataField;
            }
            set {
                this.additionalDataField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMsg {
            get {
                return this.errorMsgField;
            }
            set {
                this.errorMsgField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class DUROptions {
        
        private DURCheckStatus performDosageChecksField;
        
        private DURCheckStatus performDuplicateTherapyChecksField;
        
        private DURCheckStatus performInteractionChecksField;
        
        private DURCheckStatus performPriorAdverseReactionChecksField;
        
        private DURCheckStatus duplicateTherapyRangeField;
        
        private DURCheckStatus duplicateTherapyWarningField;
        
        private DURCheckStatus screenMaxConsecutiveDosageField;
        
        private DURCheckStatus screenMaxDosageField;
        
        private DURCheckStatus screenMaxDurationField;
        
        private DURCheckStatus screenMaxIndividualDosageField;
        
        private DURCheckStatus screenMinDosageField;
        
        private DURCheckStatus screenMinDurationField;
        
        private DURCheckStatus screenFoodField;
        
        private DURCheckStatus screenAlcoholField;
        
        private int minOnsetField;
        
        private int minSeverityField;
        
        private int minDocumentationField;
        
        private bool requireDURReasonField;
        
        /// <remarks/>
        public DURCheckStatus PerformDosageChecks {
            get {
                return this.performDosageChecksField;
            }
            set {
                this.performDosageChecksField = value;
            }
        }
        
        /// <remarks/>
        public DURCheckStatus PerformDuplicateTherapyChecks {
            get {
                return this.performDuplicateTherapyChecksField;
            }
            set {
                this.performDuplicateTherapyChecksField = value;
            }
        }
        
        /// <remarks/>
        public DURCheckStatus PerformInteractionChecks {
            get {
                return this.performInteractionChecksField;
            }
            set {
                this.performInteractionChecksField = value;
            }
        }
        
        /// <remarks/>
        public DURCheckStatus PerformPriorAdverseReactionChecks {
            get {
                return this.performPriorAdverseReactionChecksField;
            }
            set {
                this.performPriorAdverseReactionChecksField = value;
            }
        }
        
        /// <remarks/>
        public DURCheckStatus DuplicateTherapyRange {
            get {
                return this.duplicateTherapyRangeField;
            }
            set {
                this.duplicateTherapyRangeField = value;
            }
        }
        
        /// <remarks/>
        public DURCheckStatus DuplicateTherapyWarning {
            get {
                return this.duplicateTherapyWarningField;
            }
            set {
                this.duplicateTherapyWarningField = value;
            }
        }
        
        /// <remarks/>
        public DURCheckStatus ScreenMaxConsecutiveDosage {
            get {
                return this.screenMaxConsecutiveDosageField;
            }
            set {
                this.screenMaxConsecutiveDosageField = value;
            }
        }
        
        /// <remarks/>
        public DURCheckStatus ScreenMaxDosage {
            get {
                return this.screenMaxDosageField;
            }
            set {
                this.screenMaxDosageField = value;
            }
        }
        
        /// <remarks/>
        public DURCheckStatus ScreenMaxDuration {
            get {
                return this.screenMaxDurationField;
            }
            set {
                this.screenMaxDurationField = value;
            }
        }
        
        /// <remarks/>
        public DURCheckStatus ScreenMaxIndividualDosage {
            get {
                return this.screenMaxIndividualDosageField;
            }
            set {
                this.screenMaxIndividualDosageField = value;
            }
        }
        
        /// <remarks/>
        public DURCheckStatus ScreenMinDosage {
            get {
                return this.screenMinDosageField;
            }
            set {
                this.screenMinDosageField = value;
            }
        }
        
        /// <remarks/>
        public DURCheckStatus ScreenMinDuration {
            get {
                return this.screenMinDurationField;
            }
            set {
                this.screenMinDurationField = value;
            }
        }
        
        /// <remarks/>
        public DURCheckStatus ScreenFood {
            get {
                return this.screenFoodField;
            }
            set {
                this.screenFoodField = value;
            }
        }
        
        /// <remarks/>
        public DURCheckStatus ScreenAlcohol {
            get {
                return this.screenAlcoholField;
            }
            set {
                this.screenAlcoholField = value;
            }
        }
        
        /// <remarks/>
        public int MinOnset {
            get {
                return this.minOnsetField;
            }
            set {
                this.minOnsetField = value;
            }
        }
        
        /// <remarks/>
        public int MinSeverity {
            get {
                return this.minSeverityField;
            }
            set {
                this.minSeverityField = value;
            }
        }
        
        /// <remarks/>
        public int MinDocumentation {
            get {
                return this.minDocumentationField;
            }
            set {
                this.minDocumentationField = value;
            }
        }
        
        /// <remarks/>
        public bool RequireDURReason {
            get {
                return this.requireDURReasonField;
            }
            set {
                this.requireDURReasonField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public enum DURCheckStatus {
        
        /// <remarks/>
        UNKNOWN,
        
        /// <remarks/>
        Check,
        
        /// <remarks/>
        DoNotCheck,
        
        /// <remarks/>
        UsePreference,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class License {
        
        private string licenseIDField;
        
        private string accountIDField;
        
        private int standingField;
        
        private string enterpriseClientIDField;
        
        private string appInstanceIDField;
        
        private string licenseNameField;
        
        private LicenseSite defaultLicenseSiteField;
        
        private LicenseSite[] licenseSitesField;
        
        private string statusDescriptionField;
        
        private int licenseDeluxeFeatureStatusField;
        
        private int enterpriseDeluxeFeatureStatusField;
        
        private int licenseDeluxeStatusField;
        
        private bool isLicenseShieldEnabledField;
        
        /// <remarks/>
        public string LicenseID {
            get {
                return this.licenseIDField;
            }
            set {
                this.licenseIDField = value;
            }
        }
        
        /// <remarks/>
        public string AccountID {
            get {
                return this.accountIDField;
            }
            set {
                this.accountIDField = value;
            }
        }
        
        /// <remarks/>
        public int Standing {
            get {
                return this.standingField;
            }
            set {
                this.standingField = value;
            }
        }
        
        /// <remarks/>
        public string EnterpriseClientID {
            get {
                return this.enterpriseClientIDField;
            }
            set {
                this.enterpriseClientIDField = value;
            }
        }
        
        /// <remarks/>
        public string AppInstanceID {
            get {
                return this.appInstanceIDField;
            }
            set {
                this.appInstanceIDField = value;
            }
        }
        
        /// <remarks/>
        public string LicenseName {
            get {
                return this.licenseNameField;
            }
            set {
                this.licenseNameField = value;
            }
        }
        
        /// <remarks/>
        public LicenseSite DefaultLicenseSite {
            get {
                return this.defaultLicenseSiteField;
            }
            set {
                this.defaultLicenseSiteField = value;
            }
        }
        
        /// <remarks/>
        public LicenseSite[] LicenseSites {
            get {
                return this.licenseSitesField;
            }
            set {
                this.licenseSitesField = value;
            }
        }
        
        /// <remarks/>
        public string StatusDescription {
            get {
                return this.statusDescriptionField;
            }
            set {
                this.statusDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public int LicenseDeluxeFeatureStatus {
            get {
                return this.licenseDeluxeFeatureStatusField;
            }
            set {
                this.licenseDeluxeFeatureStatusField = value;
            }
        }
        
        /// <remarks/>
        public int EnterpriseDeluxeFeatureStatus {
            get {
                return this.enterpriseDeluxeFeatureStatusField;
            }
            set {
                this.enterpriseDeluxeFeatureStatusField = value;
            }
        }
        
        /// <remarks/>
        public int LicenseDeluxeStatus {
            get {
                return this.licenseDeluxeStatusField;
            }
            set {
                this.licenseDeluxeStatusField = value;
            }
        }
        
        /// <remarks/>
        public bool IsLicenseShieldEnabled {
            get {
                return this.isLicenseShieldEnabledField;
            }
            set {
                this.isLicenseShieldEnabledField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class ShieldContact {
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string phoneField;
        
        private string emailField;
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class Height {
        
        private string cmField;
        
        /// <remarks/>
        public string Cm {
            get {
                return this.cmField;
            }
            set {
                this.cmField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class Weight {
        
        private string kgsField;
        
        /// <remarks/>
        public string Kgs {
            get {
                return this.kgsField;
            }
            set {
                this.kgsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class AllergyReaction {
        
        private string allergyReactionIDField;
        
        private string nameField;
        
        private string noteField;
        
        /// <remarks/>
        public string AllergyReactionID {
            get {
                return this.allergyReactionIDField;
            }
            set {
                this.allergyReactionIDField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Note {
            get {
                return this.noteField;
            }
            set {
                this.noteField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class Allergy {
        
        private string patientIDField;
        
        private string allergyTypeField;
        
        private string allergyIDField;
        
        private string rxNormField;
        
        private string allergyCodeField;
        
        private string activeField;
        
        private System.DateTime startField;
        
        private System.DateTime endField;
        
        private string allergyCategoryField;
        
        private string allergyNameField;
        
        private string statusField;
        
        private string externalIdField;
        
        private AllergyReaction[] allergyReactionField;
        
        /// <remarks/>
        public string PatientID {
            get {
                return this.patientIDField;
            }
            set {
                this.patientIDField = value;
            }
        }
        
        /// <remarks/>
        public string AllergyType {
            get {
                return this.allergyTypeField;
            }
            set {
                this.allergyTypeField = value;
            }
        }
        
        /// <remarks/>
        public string AllergyID {
            get {
                return this.allergyIDField;
            }
            set {
                this.allergyIDField = value;
            }
        }
        
        /// <remarks/>
        public string RxNorm {
            get {
                return this.rxNormField;
            }
            set {
                this.rxNormField = value;
            }
        }
        
        /// <remarks/>
        public string AllergyCode {
            get {
                return this.allergyCodeField;
            }
            set {
                this.allergyCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Start {
            get {
                return this.startField;
            }
            set {
                this.startField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime End {
            get {
                return this.endField;
            }
            set {
                this.endField = value;
            }
        }
        
        /// <remarks/>
        public string AllergyCategory {
            get {
                return this.allergyCategoryField;
            }
            set {
                this.allergyCategoryField = value;
            }
        }
        
        /// <remarks/>
        public string AllergyName {
            get {
                return this.allergyNameField;
            }
            set {
                this.allergyNameField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalId {
            get {
                return this.externalIdField;
            }
            set {
                this.externalIdField = value;
            }
        }
        
        /// <remarks/>
        public AllergyReaction[] AllergyReaction {
            get {
                return this.allergyReactionField;
            }
            set {
                this.allergyReactionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class Problem {
        
        private string patientIDField;
        
        private string patientDiagnosisIDField;
        
        private string activeField;
        
        private System.DateTime startField;
        
        private string icd9CodeField;
        
        private string icd10CodeField;
        
        private string snomedCodeField;
        
        private string descriptionField;
        
        /// <remarks/>
        public string PatientID {
            get {
                return this.patientIDField;
            }
            set {
                this.patientIDField = value;
            }
        }
        
        /// <remarks/>
        public string PatientDiagnosisID {
            get {
                return this.patientDiagnosisIDField;
            }
            set {
                this.patientDiagnosisIDField = value;
            }
        }
        
        /// <remarks/>
        public string Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Start {
            get {
                return this.startField;
            }
            set {
                this.startField = value;
            }
        }
        
        /// <remarks/>
        public string Icd9Code {
            get {
                return this.icd9CodeField;
            }
            set {
                this.icd9CodeField = value;
            }
        }
        
        /// <remarks/>
        public string Icd10Code {
            get {
                return this.icd10CodeField;
            }
            set {
                this.icd10CodeField = value;
            }
        }
        
        /// <remarks/>
        public string SnomedCode {
            get {
                return this.snomedCodeField;
            }
            set {
                this.snomedCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class Gender {
        
        private string genderCodeField;
        
        private string genderDescriptionField;
        
        /// <remarks/>
        public string GenderCode {
            get {
                return this.genderCodeField;
            }
            set {
                this.genderCodeField = value;
            }
        }
        
        /// <remarks/>
        public string GenderDescription {
            get {
                return this.genderDescriptionField;
            }
            set {
                this.genderDescriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class Address {
        
        private string address1Field;
        
        private string address2Field;
        
        private string cityField;
        
        private string stateField;
        
        private string zIPCodeField;
        
        /// <remarks/>
        public string Address1 {
            get {
                return this.address1Field;
            }
            set {
                this.address1Field = value;
            }
        }
        
        /// <remarks/>
        public string Address2 {
            get {
                return this.address2Field;
            }
            set {
                this.address2Field = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string ZIPCode {
            get {
                return this.zIPCodeField;
            }
            set {
                this.zIPCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class Patient {
        
        private string observationDateHeightField;
        
        private string observationDateWeightField;
        
        private string patientIDField;
        
        private string mRNField;
        
        private string licenseIDField;
        
        private string accountField;
        
        private string firstNameField;
        
        private string middleInitialField;
        
        private string lastNameField;
        
        private string paternalNameField;
        
        private string maternalNameField;
        
        private Address addressField;
        
        private Phone homePhoneField;
        
        private Phone mobilePhoneField;
        
        private int ageInYearsField;
        
        private int ageInMonthsField;
        
        private int ageInDaysField;
        
        private System.DateTime dOBField;
        
        private Gender genderField;
        
        private string emailField;
        
        private bool activeField;
        
        private string statusField;
        
        private string pharmNABPField;
        
        private string pharmStateField;
        
        private string notesField;
        
        private Pharmacy[] pharmaciesField;
        
        private Rx[] rXsField;
        
        private Problem[] problemsField;
        
        private Allergy[] allergiesField;
        
        private System.Nullable<bool> isPatientHistoryExcludedField;
        
        private System.Nullable<bool> isHealthPlanDisclosableField;
        
        private string preferredLanguageField;
        
        private Weight weightField;
        
        private Height heightField;
        
        private System.DateTime lastChangedField;
        
        /// <remarks/>
        public string ObservationDateHeight {
            get {
                return this.observationDateHeightField;
            }
            set {
                this.observationDateHeightField = value;
            }
        }
        
        /// <remarks/>
        public string ObservationDateWeight {
            get {
                return this.observationDateWeightField;
            }
            set {
                this.observationDateWeightField = value;
            }
        }
        
        /// <remarks/>
        public string PatientID {
            get {
                return this.patientIDField;
            }
            set {
                this.patientIDField = value;
            }
        }
        
        /// <remarks/>
        public string MRN {
            get {
                return this.mRNField;
            }
            set {
                this.mRNField = value;
            }
        }
        
        /// <remarks/>
        public string LicenseID {
            get {
                return this.licenseIDField;
            }
            set {
                this.licenseIDField = value;
            }
        }
        
        /// <remarks/>
        public string Account {
            get {
                return this.accountField;
            }
            set {
                this.accountField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string MiddleInitial {
            get {
                return this.middleInitialField;
            }
            set {
                this.middleInitialField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string PaternalName {
            get {
                return this.paternalNameField;
            }
            set {
                this.paternalNameField = value;
            }
        }
        
        /// <remarks/>
        public string MaternalName {
            get {
                return this.maternalNameField;
            }
            set {
                this.maternalNameField = value;
            }
        }
        
        /// <remarks/>
        public Address Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        public Phone HomePhone {
            get {
                return this.homePhoneField;
            }
            set {
                this.homePhoneField = value;
            }
        }
        
        /// <remarks/>
        public Phone MobilePhone {
            get {
                return this.mobilePhoneField;
            }
            set {
                this.mobilePhoneField = value;
            }
        }
        
        /// <remarks/>
        public int AgeInYears {
            get {
                return this.ageInYearsField;
            }
            set {
                this.ageInYearsField = value;
            }
        }
        
        /// <remarks/>
        public int AgeInMonths {
            get {
                return this.ageInMonthsField;
            }
            set {
                this.ageInMonthsField = value;
            }
        }
        
        /// <remarks/>
        public int AgeInDays {
            get {
                return this.ageInDaysField;
            }
            set {
                this.ageInDaysField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DOB {
            get {
                return this.dOBField;
            }
            set {
                this.dOBField = value;
            }
        }
        
        /// <remarks/>
        public Gender Gender {
            get {
                return this.genderField;
            }
            set {
                this.genderField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public bool Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string PharmNABP {
            get {
                return this.pharmNABPField;
            }
            set {
                this.pharmNABPField = value;
            }
        }
        
        /// <remarks/>
        public string PharmState {
            get {
                return this.pharmStateField;
            }
            set {
                this.pharmStateField = value;
            }
        }
        
        /// <remarks/>
        public string Notes {
            get {
                return this.notesField;
            }
            set {
                this.notesField = value;
            }
        }
        
        /// <remarks/>
        public Pharmacy[] Pharmacies {
            get {
                return this.pharmaciesField;
            }
            set {
                this.pharmaciesField = value;
            }
        }
        
        /// <remarks/>
        public Rx[] RXs {
            get {
                return this.rXsField;
            }
            set {
                this.rXsField = value;
            }
        }
        
        /// <remarks/>
        public Problem[] Problems {
            get {
                return this.problemsField;
            }
            set {
                this.problemsField = value;
            }
        }
        
        /// <remarks/>
        public Allergy[] Allergies {
            get {
                return this.allergiesField;
            }
            set {
                this.allergiesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> IsPatientHistoryExcluded {
            get {
                return this.isPatientHistoryExcludedField;
            }
            set {
                this.isPatientHistoryExcludedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> IsHealthPlanDisclosable {
            get {
                return this.isHealthPlanDisclosableField;
            }
            set {
                this.isHealthPlanDisclosableField = value;
            }
        }
        
        /// <remarks/>
        public string PreferredLanguage {
            get {
                return this.preferredLanguageField;
            }
            set {
                this.preferredLanguageField = value;
            }
        }
        
        /// <remarks/>
        public Weight Weight {
            get {
                return this.weightField;
            }
            set {
                this.weightField = value;
            }
        }
        
        /// <remarks/>
        public Height Height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastChanged {
            get {
                return this.lastChangedField;
            }
            set {
                this.lastChangedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class CCDPatientChangeQueueItem {
        
        private int queueIDField;
        
        private string patientIDField;
        
        private int queueStatusIDField;
        
        private int retryCountField;
        
        private ConnectionStringPointer patientDBIDField;
        
        /// <remarks/>
        public int QueueID {
            get {
                return this.queueIDField;
            }
            set {
                this.queueIDField = value;
            }
        }
        
        /// <remarks/>
        public string PatientID {
            get {
                return this.patientIDField;
            }
            set {
                this.patientIDField = value;
            }
        }
        
        /// <remarks/>
        public int QueueStatusID {
            get {
                return this.queueStatusIDField;
            }
            set {
                this.queueStatusIDField = value;
            }
        }
        
        /// <remarks/>
        public int RetryCount {
            get {
                return this.retryCountField;
            }
            set {
                this.retryCountField = value;
            }
        }
        
        /// <remarks/>
        public ConnectionStringPointer PatientDBID {
            get {
                return this.patientDBIDField;
            }
            set {
                this.patientDBIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class UserNameWithUserGuidPair {
        
        private string userNameField;
        
        private string userGuidField;
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string UserGuid {
            get {
                return this.userGuidField;
            }
            set {
                this.userGuidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class ExtensionDataObject {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class RecoveryAnswerDto {
        
        private ExtensionDataObject extensionDataField;
        
        private int questionIDField;
        
        private string answerField;
        
        /// <remarks/>
        public ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        /// <remarks/>
        public int QuestionID {
            get {
                return this.questionIDField;
            }
            set {
                this.questionIDField = value;
            }
        }
        
        /// <remarks/>
        public string Answer {
            get {
                return this.answerField;
            }
            set {
                this.answerField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class HubMailboxItem {
        
        private int mailboxIDField;
        
        private System.Guid messageGuidField;
        
        private int accountIDField;
        
        private System.DateTime mailboxTimeField;
        
        /// <remarks/>
        public int MailboxID {
            get {
                return this.mailboxIDField;
            }
            set {
                this.mailboxIDField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid MessageGuid {
            get {
                return this.messageGuidField;
            }
            set {
                this.messageGuidField = value;
            }
        }
        
        /// <remarks/>
        public int AccountID {
            get {
                return this.accountIDField;
            }
            set {
                this.accountIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime MailboxTime {
            get {
                return this.mailboxTimeField;
            }
            set {
                this.mailboxTimeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class RegistrantPractice {
        
        private long registrantIdField;
        
        private string practiceNameField;
        
        private string addressField;
        
        private string address2Field;
        
        private string cityField;
        
        private string stateField;
        
        private string zipcodeField;
        
        private string phoneNumberField;
        
        private string faxNumberField;
        
        /// <remarks/>
        public long RegistrantId {
            get {
                return this.registrantIdField;
            }
            set {
                this.registrantIdField = value;
            }
        }
        
        /// <remarks/>
        public string PracticeName {
            get {
                return this.practiceNameField;
            }
            set {
                this.practiceNameField = value;
            }
        }
        
        /// <remarks/>
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        public string Address2 {
            get {
                return this.address2Field;
            }
            set {
                this.address2Field = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string Zipcode {
            get {
                return this.zipcodeField;
            }
            set {
                this.zipcodeField = value;
            }
        }
        
        /// <remarks/>
        public string PhoneNumber {
            get {
                return this.phoneNumberField;
            }
            set {
                this.phoneNumberField = value;
            }
        }
        
        /// <remarks/>
        public string FaxNumber {
            get {
                return this.faxNumberField;
            }
            set {
                this.faxNumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class SecretAnswer {
        
        private int questionIDField;
        
        private string answerField;
        
        /// <remarks/>
        public int QuestionID {
            get {
                return this.questionIDField;
            }
            set {
                this.questionIDField = value;
            }
        }
        
        /// <remarks/>
        public string Answer {
            get {
                return this.answerField;
            }
            set {
                this.answerField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class RegistrantUser {
        
        private long registrantIdField;
        
        private string titleField;
        
        private string firstNameField;
        
        private string middleNameField;
        
        private string lastNameField;
        
        private string suffixField;
        
        private string personalEmailField;
        
        private string contactPhoneNumberField;
        
        private string homeAddressField;
        
        private string homeAddress2Field;
        
        private string cityField;
        
        private string stateField;
        
        private string zipcodeField;
        
        private string nPIField;
        
        private string speciality1Field;
        
        private string speciality2Field;
        
        private string deaNumberField;
        
        private System.Nullable<System.DateTime> deaExpirationDateField;
        
        private string deaScheduleIIField;
        
        private string deaScheduleIIIField;
        
        private string deaScheduleIVField;
        
        private string deaScheduleVField;
        
        private string stateLicenseNumberField;
        
        private string stateLicenseIssueStateField;
        
        private System.DateTime stateLicenseExpirationDateField;
        
        private System.Guid userGuidField;
        
        private System.Guid enterpriseClientIdField;
        
        private System.Guid shieldObjectIdField;
        
        private string shieldUserNameField;
        
        private string passwordField;
        
        private string pricingStructureField;
        
        /// <remarks/>
        public long RegistrantId {
            get {
                return this.registrantIdField;
            }
            set {
                this.registrantIdField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string MiddleName {
            get {
                return this.middleNameField;
            }
            set {
                this.middleNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string Suffix {
            get {
                return this.suffixField;
            }
            set {
                this.suffixField = value;
            }
        }
        
        /// <remarks/>
        public string PersonalEmail {
            get {
                return this.personalEmailField;
            }
            set {
                this.personalEmailField = value;
            }
        }
        
        /// <remarks/>
        public string ContactPhoneNumber {
            get {
                return this.contactPhoneNumberField;
            }
            set {
                this.contactPhoneNumberField = value;
            }
        }
        
        /// <remarks/>
        public string HomeAddress {
            get {
                return this.homeAddressField;
            }
            set {
                this.homeAddressField = value;
            }
        }
        
        /// <remarks/>
        public string HomeAddress2 {
            get {
                return this.homeAddress2Field;
            }
            set {
                this.homeAddress2Field = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string Zipcode {
            get {
                return this.zipcodeField;
            }
            set {
                this.zipcodeField = value;
            }
        }
        
        /// <remarks/>
        public string NPI {
            get {
                return this.nPIField;
            }
            set {
                this.nPIField = value;
            }
        }
        
        /// <remarks/>
        public string Speciality1 {
            get {
                return this.speciality1Field;
            }
            set {
                this.speciality1Field = value;
            }
        }
        
        /// <remarks/>
        public string Speciality2 {
            get {
                return this.speciality2Field;
            }
            set {
                this.speciality2Field = value;
            }
        }
        
        /// <remarks/>
        public string DeaNumber {
            get {
                return this.deaNumberField;
            }
            set {
                this.deaNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> DeaExpirationDate {
            get {
                return this.deaExpirationDateField;
            }
            set {
                this.deaExpirationDateField = value;
            }
        }
        
        /// <remarks/>
        public string DeaScheduleII {
            get {
                return this.deaScheduleIIField;
            }
            set {
                this.deaScheduleIIField = value;
            }
        }
        
        /// <remarks/>
        public string DeaScheduleIII {
            get {
                return this.deaScheduleIIIField;
            }
            set {
                this.deaScheduleIIIField = value;
            }
        }
        
        /// <remarks/>
        public string DeaScheduleIV {
            get {
                return this.deaScheduleIVField;
            }
            set {
                this.deaScheduleIVField = value;
            }
        }
        
        /// <remarks/>
        public string DeaScheduleV {
            get {
                return this.deaScheduleVField;
            }
            set {
                this.deaScheduleVField = value;
            }
        }
        
        /// <remarks/>
        public string StateLicenseNumber {
            get {
                return this.stateLicenseNumberField;
            }
            set {
                this.stateLicenseNumberField = value;
            }
        }
        
        /// <remarks/>
        public string StateLicenseIssueState {
            get {
                return this.stateLicenseIssueStateField;
            }
            set {
                this.stateLicenseIssueStateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StateLicenseExpirationDate {
            get {
                return this.stateLicenseExpirationDateField;
            }
            set {
                this.stateLicenseExpirationDateField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid UserGuid {
            get {
                return this.userGuidField;
            }
            set {
                this.userGuidField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid EnterpriseClientId {
            get {
                return this.enterpriseClientIdField;
            }
            set {
                this.enterpriseClientIdField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid ShieldObjectId {
            get {
                return this.shieldObjectIdField;
            }
            set {
                this.shieldObjectIdField = value;
            }
        }
        
        /// <remarks/>
        public string ShieldUserName {
            get {
                return this.shieldUserNameField;
            }
            set {
                this.shieldUserNameField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string PricingStructure {
            get {
                return this.pricingStructureField;
            }
            set {
                this.pricingStructureField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class LoggingInfo {
        
        private System.Nullable<System.Guid> callingUserGuidField;
        
        private System.Nullable<System.Guid> patientGuidField;
        
        private System.Nullable<System.Guid> callingUserPartnerGuidField;
        
        private System.Nullable<System.Guid> callingUserLicenseGuidField;
        
        private string aspnetSessionIDField;
        
        private bool enableLoggingField;
        
        private string callingApplicationField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.Guid> CallingUserGuid {
            get {
                return this.callingUserGuidField;
            }
            set {
                this.callingUserGuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.Guid> PatientGuid {
            get {
                return this.patientGuidField;
            }
            set {
                this.patientGuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.Guid> CallingUserPartnerGuid {
            get {
                return this.callingUserPartnerGuidField;
            }
            set {
                this.callingUserPartnerGuidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.Guid> CallingUserLicenseGuid {
            get {
                return this.callingUserLicenseGuidField;
            }
            set {
                this.callingUserLicenseGuidField = value;
            }
        }
        
        /// <remarks/>
        public string AspnetSessionID {
            get {
                return this.aspnetSessionIDField;
            }
            set {
                this.aspnetSessionIDField = value;
            }
        }
        
        /// <remarks/>
        public bool EnableLogging {
            get {
                return this.enableLoggingField;
            }
            set {
                this.enableLoggingField = value;
            }
        }
        
        /// <remarks/>
        public string CallingApplication {
            get {
                return this.callingApplicationField;
            }
            set {
                this.callingApplicationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class SavePatientRequest : ePrescribeSvcRequest {
        
        private Patient patientField;
        
        private string userIDField;
        
        /// <remarks/>
        public Patient Patient {
            get {
                return this.patientField;
            }
            set {
                this.patientField = value;
            }
        }
        
        /// <remarks/>
        public string UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class DurScriptPadRequest : ePrescribeSvcRequest {
        
        private string patientIDField;
        
        private int patientAgeField;
        
        private string patientGenderField;
        
        private DUROptions dUROptionsField;
        
        /// <remarks/>
        public string PatientID {
            get {
                return this.patientIDField;
            }
            set {
                this.patientIDField = value;
            }
        }
        
        /// <remarks/>
        public int PatientAge {
            get {
                return this.patientAgeField;
            }
            set {
                this.patientAgeField = value;
            }
        }
        
        /// <remarks/>
        public string PatientGender {
            get {
                return this.patientGenderField;
            }
            set {
                this.patientGenderField = value;
            }
        }
        
        /// <remarks/>
        public DUROptions DUROptions {
            get {
                return this.dUROptionsField;
            }
            set {
                this.dUROptionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class InsertRxHeaderCanceledRequest : ePrescribeSvcRequest {
        
        private System.Guid rxIdField;
        
        private System.Guid canceledByIdField;
        
        private System.Guid canceledByProviderIdField;
        
        private System.Guid canceledBySupervisingProviderIdField;
        
        private ConnectionStringPointer dbIdField;
        
        /// <remarks/>
        public System.Guid RxId {
            get {
                return this.rxIdField;
            }
            set {
                this.rxIdField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid CanceledById {
            get {
                return this.canceledByIdField;
            }
            set {
                this.canceledByIdField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid CanceledByProviderId {
            get {
                return this.canceledByProviderIdField;
            }
            set {
                this.canceledByProviderIdField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid CanceledBySupervisingProviderId {
            get {
                return this.canceledBySupervisingProviderIdField;
            }
            set {
                this.canceledBySupervisingProviderIdField = value;
            }
        }
        
        /// <remarks/>
        public ConnectionStringPointer DbId {
            get {
                return this.dbIdField;
            }
            set {
                this.dbIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class SaveCSDetailRequest : ePrescribeSvcRequest {
        
        private int scheduleUsedField;
        
        private ControlledSubstanceTypes csTypeField;
        
        private string deaNumberField;
        
        private string rxIDField;
        
        /// <remarks/>
        public int ScheduleUsed {
            get {
                return this.scheduleUsedField;
            }
            set {
                this.scheduleUsedField = value;
            }
        }
        
        /// <remarks/>
        public ControlledSubstanceTypes CsType {
            get {
                return this.csTypeField;
            }
            set {
                this.csTypeField = value;
            }
        }
        
        /// <remarks/>
        public string DeaNumber {
            get {
                return this.deaNumberField;
            }
            set {
                this.deaNumberField = value;
            }
        }
        
        /// <remarks/>
        public string RxID {
            get {
                return this.rxIDField;
            }
            set {
                this.rxIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public enum ControlledSubstanceTypes {
        
        /// <remarks/>
        FEDERAL,
        
        /// <remarks/>
        STATE,
        
        /// <remarks/>
        FREEFORM,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class PrescriptionRequest : ePrescribeSvcRequest {
        
        private int alternativeIgnoreReasonField;
        
        private string authorizeByIDField;
        
        private string commentsField;
        
        private string controlledSubstanceCodeField;
        
        private long coverageIDField;
        
        private System.DateTime createdField;
        
        private string createdByIDField;
        
        private string creationTypeField;
        
        private bool dAWField;
        
        private int daysSupplyField;
        
        private string dDIField;
        
        private string dosageFormCodeField;
        
        private string drugDoseCheckedField;
        
        private string drugDrugCheckedField;
        
        private string duplicateTherapyCheckedField;
        
        private System.DateTime endDateField;
        
        private System.DateTime expirationDateField;
        
        private string extFacilityCodeField;
        
        private string extGroupIDField;
        
        private int formStatusCodeField;
        
        private string formularyCheckedField;
        
        private string formularyIDField;
        
        private string gPPCField;
        
        private string groupIDField;
        
        private bool hasDURWarningsField;
        
        private string iCD9CodeField;
        
        private string idField;
        
        private string isListedField;
        
        private System.DateTime lastFillDateField;
        
        private int lineNumberField;
        
        private string medicationNameField;
        
        private string nDCField;
        
        private string originalDDIField;
        
        private int originalFormStatusCodeField;
        
        private string originalIsListedField;
        
        private int originalLineNumberField;
        
        private string originalRxIDField;
        
        private string packageDescriptionField;
        
        private int packageQuantityField;
        
        private decimal packageSizeField;
        
        private string packageUOMField;
        
        private string pARCheckedField;
        
        private string patientIDField;
        
        private string pharmacyIDField;
        
        private string pharmacyNotesField;
        
        private string planIDField;
        
        private string printedByIDField;
        
        private string printMonographField;
        
        private string providerIdField;
        
        private decimal quantityField;
        
        private int refillQuantityField;
        
        private string routeOfAdminCodeField;
        
        private string rxCloseReasonCodeField;
        
        private string rxCloseReasonTextField;
        
        private string rxFormatField;
        
        private string rxIDField;
        
        private int rxNumberField;
        
        private string rxSourceField;
        
        private string rxSourceIDField;
        
        private int rxWorkFlowTypeField;
        
        private string senderIDField;
        
        private string sIGIDField;
        
        private string sIGTextField;
        
        private int sigTypeField;
        
        private int siteIDField;
        
        private System.DateTime startDateField;
        
        private int statusField;
        
        private string strengthField;
        
        private string strengthUOMField;
        
        private System.DateTime transmissionDateField;
        
        private string transmissionMethodField;
        
        private string typeField;
        
        private System.DateTime updatedField;
        
        private string updatedByIDField;
        
        private FormularyStatus formularyStatusField;
        
        private string stateControlledSubstanceCodeField;
        
        private string formuAltsShownField;
        
        private DUROptions dUROptionsField;
        
        /// <remarks/>
        public int AlternativeIgnoreReason {
            get {
                return this.alternativeIgnoreReasonField;
            }
            set {
                this.alternativeIgnoreReasonField = value;
            }
        }
        
        /// <remarks/>
        public string AuthorizeByID {
            get {
                return this.authorizeByIDField;
            }
            set {
                this.authorizeByIDField = value;
            }
        }
        
        /// <remarks/>
        public string Comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
            }
        }
        
        /// <remarks/>
        public string controlledSubstanceCode {
            get {
                return this.controlledSubstanceCodeField;
            }
            set {
                this.controlledSubstanceCodeField = value;
            }
        }
        
        /// <remarks/>
        public long CoverageID {
            get {
                return this.coverageIDField;
            }
            set {
                this.coverageIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
            }
        }
        
        /// <remarks/>
        public string CreatedByID {
            get {
                return this.createdByIDField;
            }
            set {
                this.createdByIDField = value;
            }
        }
        
        /// <remarks/>
        public string CreationType {
            get {
                return this.creationTypeField;
            }
            set {
                this.creationTypeField = value;
            }
        }
        
        /// <remarks/>
        public bool DAW {
            get {
                return this.dAWField;
            }
            set {
                this.dAWField = value;
            }
        }
        
        /// <remarks/>
        public int DaysSupply {
            get {
                return this.daysSupplyField;
            }
            set {
                this.daysSupplyField = value;
            }
        }
        
        /// <remarks/>
        public string DDI {
            get {
                return this.dDIField;
            }
            set {
                this.dDIField = value;
            }
        }
        
        /// <remarks/>
        public string DosageFormCode {
            get {
                return this.dosageFormCodeField;
            }
            set {
                this.dosageFormCodeField = value;
            }
        }
        
        /// <remarks/>
        public string DrugDoseChecked {
            get {
                return this.drugDoseCheckedField;
            }
            set {
                this.drugDoseCheckedField = value;
            }
        }
        
        /// <remarks/>
        public string DrugDrugChecked {
            get {
                return this.drugDrugCheckedField;
            }
            set {
                this.drugDrugCheckedField = value;
            }
        }
        
        /// <remarks/>
        public string DuplicateTherapyChecked {
            get {
                return this.duplicateTherapyCheckedField;
            }
            set {
                this.duplicateTherapyCheckedField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime EndDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ExpirationDate {
            get {
                return this.expirationDateField;
            }
            set {
                this.expirationDateField = value;
            }
        }
        
        /// <remarks/>
        public string ExtFacilityCode {
            get {
                return this.extFacilityCodeField;
            }
            set {
                this.extFacilityCodeField = value;
            }
        }
        
        /// <remarks/>
        public string ExtGroupID {
            get {
                return this.extGroupIDField;
            }
            set {
                this.extGroupIDField = value;
            }
        }
        
        /// <remarks/>
        public int FormStatusCode {
            get {
                return this.formStatusCodeField;
            }
            set {
                this.formStatusCodeField = value;
            }
        }
        
        /// <remarks/>
        public string FormularyChecked {
            get {
                return this.formularyCheckedField;
            }
            set {
                this.formularyCheckedField = value;
            }
        }
        
        /// <remarks/>
        public string FormularyID {
            get {
                return this.formularyIDField;
            }
            set {
                this.formularyIDField = value;
            }
        }
        
        /// <remarks/>
        public string GPPC {
            get {
                return this.gPPCField;
            }
            set {
                this.gPPCField = value;
            }
        }
        
        /// <remarks/>
        public string GroupID {
            get {
                return this.groupIDField;
            }
            set {
                this.groupIDField = value;
            }
        }
        
        /// <remarks/>
        public bool HasDURWarnings {
            get {
                return this.hasDURWarningsField;
            }
            set {
                this.hasDURWarningsField = value;
            }
        }
        
        /// <remarks/>
        public string ICD9Code {
            get {
                return this.iCD9CodeField;
            }
            set {
                this.iCD9CodeField = value;
            }
        }
        
        /// <remarks/>
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string IsListed {
            get {
                return this.isListedField;
            }
            set {
                this.isListedField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastFillDate {
            get {
                return this.lastFillDateField;
            }
            set {
                this.lastFillDateField = value;
            }
        }
        
        /// <remarks/>
        public int LineNumber {
            get {
                return this.lineNumberField;
            }
            set {
                this.lineNumberField = value;
            }
        }
        
        /// <remarks/>
        public string MedicationName {
            get {
                return this.medicationNameField;
            }
            set {
                this.medicationNameField = value;
            }
        }
        
        /// <remarks/>
        public string NDC {
            get {
                return this.nDCField;
            }
            set {
                this.nDCField = value;
            }
        }
        
        /// <remarks/>
        public string OriginalDDI {
            get {
                return this.originalDDIField;
            }
            set {
                this.originalDDIField = value;
            }
        }
        
        /// <remarks/>
        public int OriginalFormStatusCode {
            get {
                return this.originalFormStatusCodeField;
            }
            set {
                this.originalFormStatusCodeField = value;
            }
        }
        
        /// <remarks/>
        public string OriginalIsListed {
            get {
                return this.originalIsListedField;
            }
            set {
                this.originalIsListedField = value;
            }
        }
        
        /// <remarks/>
        public int OriginalLineNumber {
            get {
                return this.originalLineNumberField;
            }
            set {
                this.originalLineNumberField = value;
            }
        }
        
        /// <remarks/>
        public string OriginalRxID {
            get {
                return this.originalRxIDField;
            }
            set {
                this.originalRxIDField = value;
            }
        }
        
        /// <remarks/>
        public string PackageDescription {
            get {
                return this.packageDescriptionField;
            }
            set {
                this.packageDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public int PackageQuantity {
            get {
                return this.packageQuantityField;
            }
            set {
                this.packageQuantityField = value;
            }
        }
        
        /// <remarks/>
        public decimal PackageSize {
            get {
                return this.packageSizeField;
            }
            set {
                this.packageSizeField = value;
            }
        }
        
        /// <remarks/>
        public string PackageUOM {
            get {
                return this.packageUOMField;
            }
            set {
                this.packageUOMField = value;
            }
        }
        
        /// <remarks/>
        public string PARChecked {
            get {
                return this.pARCheckedField;
            }
            set {
                this.pARCheckedField = value;
            }
        }
        
        /// <remarks/>
        public string PatientID {
            get {
                return this.patientIDField;
            }
            set {
                this.patientIDField = value;
            }
        }
        
        /// <remarks/>
        public string PharmacyID {
            get {
                return this.pharmacyIDField;
            }
            set {
                this.pharmacyIDField = value;
            }
        }
        
        /// <remarks/>
        public string PharmacyNotes {
            get {
                return this.pharmacyNotesField;
            }
            set {
                this.pharmacyNotesField = value;
            }
        }
        
        /// <remarks/>
        public string PlanID {
            get {
                return this.planIDField;
            }
            set {
                this.planIDField = value;
            }
        }
        
        /// <remarks/>
        public string PrintedByID {
            get {
                return this.printedByIDField;
            }
            set {
                this.printedByIDField = value;
            }
        }
        
        /// <remarks/>
        public string PrintMonograph {
            get {
                return this.printMonographField;
            }
            set {
                this.printMonographField = value;
            }
        }
        
        /// <remarks/>
        public string ProviderId {
            get {
                return this.providerIdField;
            }
            set {
                this.providerIdField = value;
            }
        }
        
        /// <remarks/>
        public decimal Quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
            }
        }
        
        /// <remarks/>
        public int RefillQuantity {
            get {
                return this.refillQuantityField;
            }
            set {
                this.refillQuantityField = value;
            }
        }
        
        /// <remarks/>
        public string RouteOfAdminCode {
            get {
                return this.routeOfAdminCodeField;
            }
            set {
                this.routeOfAdminCodeField = value;
            }
        }
        
        /// <remarks/>
        public string RxCloseReasonCode {
            get {
                return this.rxCloseReasonCodeField;
            }
            set {
                this.rxCloseReasonCodeField = value;
            }
        }
        
        /// <remarks/>
        public string RxCloseReasonText {
            get {
                return this.rxCloseReasonTextField;
            }
            set {
                this.rxCloseReasonTextField = value;
            }
        }
        
        /// <remarks/>
        public string RxFormat {
            get {
                return this.rxFormatField;
            }
            set {
                this.rxFormatField = value;
            }
        }
        
        /// <remarks/>
        public string rxID {
            get {
                return this.rxIDField;
            }
            set {
                this.rxIDField = value;
            }
        }
        
        /// <remarks/>
        public int RxNumber {
            get {
                return this.rxNumberField;
            }
            set {
                this.rxNumberField = value;
            }
        }
        
        /// <remarks/>
        public string RxSource {
            get {
                return this.rxSourceField;
            }
            set {
                this.rxSourceField = value;
            }
        }
        
        /// <remarks/>
        public string RxSourceID {
            get {
                return this.rxSourceIDField;
            }
            set {
                this.rxSourceIDField = value;
            }
        }
        
        /// <remarks/>
        public int RxWorkFlowType {
            get {
                return this.rxWorkFlowTypeField;
            }
            set {
                this.rxWorkFlowTypeField = value;
            }
        }
        
        /// <remarks/>
        public string SenderID {
            get {
                return this.senderIDField;
            }
            set {
                this.senderIDField = value;
            }
        }
        
        /// <remarks/>
        public string SIGID {
            get {
                return this.sIGIDField;
            }
            set {
                this.sIGIDField = value;
            }
        }
        
        /// <remarks/>
        public string SIGText {
            get {
                return this.sIGTextField;
            }
            set {
                this.sIGTextField = value;
            }
        }
        
        /// <remarks/>
        public int SigType {
            get {
                return this.sigTypeField;
            }
            set {
                this.sigTypeField = value;
            }
        }
        
        /// <remarks/>
        public int SiteID {
            get {
                return this.siteIDField;
            }
            set {
                this.siteIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        public int status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string Strength {
            get {
                return this.strengthField;
            }
            set {
                this.strengthField = value;
            }
        }
        
        /// <remarks/>
        public string StrengthUOM {
            get {
                return this.strengthUOMField;
            }
            set {
                this.strengthUOMField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime TransmissionDate {
            get {
                return this.transmissionDateField;
            }
            set {
                this.transmissionDateField = value;
            }
        }
        
        /// <remarks/>
        public string TransmissionMethod {
            get {
                return this.transmissionMethodField;
            }
            set {
                this.transmissionMethodField = value;
            }
        }
        
        /// <remarks/>
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Updated {
            get {
                return this.updatedField;
            }
            set {
                this.updatedField = value;
            }
        }
        
        /// <remarks/>
        public string UpdatedByID {
            get {
                return this.updatedByIDField;
            }
            set {
                this.updatedByIDField = value;
            }
        }
        
        /// <remarks/>
        public FormularyStatus FormularyStatus {
            get {
                return this.formularyStatusField;
            }
            set {
                this.formularyStatusField = value;
            }
        }
        
        /// <remarks/>
        public string StateControlledSubstanceCode {
            get {
                return this.stateControlledSubstanceCodeField;
            }
            set {
                this.stateControlledSubstanceCodeField = value;
            }
        }
        
        /// <remarks/>
        public string FormuAltsShown {
            get {
                return this.formuAltsShownField;
            }
            set {
                this.formuAltsShownField = value;
            }
        }
        
        /// <remarks/>
        public DUROptions DUROptions {
            get {
                return this.dUROptionsField;
            }
            set {
                this.dUROptionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public enum FormularyStatus {
        
        /// <remarks/>
        NONE,
        
        /// <remarks/>
        ON,
        
        /// <remarks/>
        ACCEPTED,
        
        /// <remarks/>
        OFF,
        
        /// <remarks/>
        PRIOR_AUTHORIZATION,
        
        /// <remarks/>
        OTC,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetUserRequest : ePrescribeSvcRequest {
        
        private string auditUserIDField;
        
        private string auditLicenseIDField;
        
        private ValueType typeField;
        
        private string valueField;
        
        /// <remarks/>
        public string AuditUserID {
            get {
                return this.auditUserIDField;
            }
            set {
                this.auditUserIDField = value;
            }
        }
        
        /// <remarks/>
        public string AuditLicenseID {
            get {
                return this.auditLicenseIDField;
            }
            set {
                this.auditLicenseIDField = value;
            }
        }
        
        /// <remarks/>
        public ValueType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public enum ValueType {
        
        /// <remarks/>
        UserGUID,
        
        /// <remarks/>
        UserName,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class SearchUsersRequest : ePrescribeSvcRequest {
        
        private string userNameField;
        
        private string shieldUserNameField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string ShieldUserName {
            get {
                return this.shieldUserNameField;
            }
            set {
                this.shieldUserNameField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class MobileServiceSecurityTokenRequest : ePrescribeSvcRequest {
        
        private string sessionTokenField;
        
        private string iPAddressField;
        
        /// <remarks/>
        public string SessionToken {
            get {
                return this.sessionTokenField;
            }
            set {
                this.sessionTokenField = value;
            }
        }
        
        /// <remarks/>
        public string IPAddress {
            get {
                return this.iPAddressField;
            }
            set {
                this.iPAddressField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class UAISecurityTokenRequest : ePrescribeSvcRequest {
        
        private string applicationNameField;
        
        private string sessionTokenField;
        
        private string userNameField;
        
        /// <remarks/>
        public string ApplicationName {
            get {
                return this.applicationNameField;
            }
            set {
                this.applicationNameField = value;
            }
        }
        
        /// <remarks/>
        public string SessionToken {
            get {
                return this.sessionTokenField;
            }
            set {
                this.sessionTokenField = value;
            }
        }
        
        /// <remarks/>
        public string userName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetNewUniqueUserNameRequest : ePrescribeSvcRequest {
        
        private string firstNameField;
        
        private string middleNameField;
        
        private string lastNameField;
        
        private string userNameField;
        
        private string tenantExternalIDField;
        
        private string appInstanceExternalIDField;
        
        private bool createForPartnerField;
        
        private string partnerIDField;
        
        private string registrationGUIDTokenField;
        
        private ConnectionStringPointer dBIDField;
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string MiddleName {
            get {
                return this.middleNameField;
            }
            set {
                this.middleNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string TenantExternalID {
            get {
                return this.tenantExternalIDField;
            }
            set {
                this.tenantExternalIDField = value;
            }
        }
        
        /// <remarks/>
        public string AppInstanceExternalID {
            get {
                return this.appInstanceExternalIDField;
            }
            set {
                this.appInstanceExternalIDField = value;
            }
        }
        
        /// <remarks/>
        public bool CreateForPartner {
            get {
                return this.createForPartnerField;
            }
            set {
                this.createForPartnerField = value;
            }
        }
        
        /// <remarks/>
        public string PartnerID {
            get {
                return this.partnerIDField;
            }
            set {
                this.partnerIDField = value;
            }
        }
        
        /// <remarks/>
        public string RegistrationGUIDToken {
            get {
                return this.registrationGUIDTokenField;
            }
            set {
                this.registrationGUIDTokenField = value;
            }
        }
        
        /// <remarks/>
        public ConnectionStringPointer DBID {
            get {
                return this.dBIDField;
            }
            set {
                this.dBIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class PrescriptionUpdateCreationTypeRequest : ePrescribeSvcRequest {
        
        private string rxIDField;
        
        private string scriptMessageIDField;
        
        private string creationTypeField;
        
        /// <remarks/>
        public string RxID {
            get {
                return this.rxIDField;
            }
            set {
                this.rxIDField = value;
            }
        }
        
        /// <remarks/>
        public string ScriptMessageID {
            get {
                return this.scriptMessageIDField;
            }
            set {
                this.scriptMessageIDField = value;
            }
        }
        
        /// <remarks/>
        public string CreationType {
            get {
                return this.creationTypeField;
            }
            set {
                this.creationTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class RejectScriptMessageRequest : ePrescribeSvcRequest {
        
        private string scriptMessageIDField;
        
        private string reasonCodeField;
        
        private string messageField;
        
        private string prescriberOrderNumberField;
        
        private string shieldSecurityTokenField;
        
        private int siteIDField;
        
        /// <remarks/>
        public string ScriptMessageID {
            get {
                return this.scriptMessageIDField;
            }
            set {
                this.scriptMessageIDField = value;
            }
        }
        
        /// <remarks/>
        public string ReasonCode {
            get {
                return this.reasonCodeField;
            }
            set {
                this.reasonCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public string PrescriberOrderNumber {
            get {
                return this.prescriberOrderNumberField;
            }
            set {
                this.prescriberOrderNumberField = value;
            }
        }
        
        /// <remarks/>
        public string ShieldSecurityToken {
            get {
                return this.shieldSecurityTokenField;
            }
            set {
                this.shieldSecurityTokenField = value;
            }
        }
        
        /// <remarks/>
        public int SiteID {
            get {
                return this.siteIDField;
            }
            set {
                this.siteIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class ApproveScriptMessageRequest : ePrescribeSvcRequest {
        
        private string scriptMessageIDField;
        
        private bool lookupDetailsViaScriptMessageIDField;
        
        private string dDIField;
        
        private int daysSupplyField;
        
        private decimal quantityField;
        
        private int refillsField;
        
        private string sIGField;
        
        private bool dAWField;
        
        private string providerIDField;
        
        private string commentsField;
        
        private string transmitMethodField;
        
        private string shieldSecurityTokenField;
        
        private string delegateProviderIDField;
        
        private string mddValueField;
        
        /// <remarks/>
        public string ScriptMessageID {
            get {
                return this.scriptMessageIDField;
            }
            set {
                this.scriptMessageIDField = value;
            }
        }
        
        /// <remarks/>
        public bool LookupDetailsViaScriptMessageID {
            get {
                return this.lookupDetailsViaScriptMessageIDField;
            }
            set {
                this.lookupDetailsViaScriptMessageIDField = value;
            }
        }
        
        /// <remarks/>
        public string DDI {
            get {
                return this.dDIField;
            }
            set {
                this.dDIField = value;
            }
        }
        
        /// <remarks/>
        public int DaysSupply {
            get {
                return this.daysSupplyField;
            }
            set {
                this.daysSupplyField = value;
            }
        }
        
        /// <remarks/>
        public decimal Quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
            }
        }
        
        /// <remarks/>
        public int Refills {
            get {
                return this.refillsField;
            }
            set {
                this.refillsField = value;
            }
        }
        
        /// <remarks/>
        public string SIG {
            get {
                return this.sIGField;
            }
            set {
                this.sIGField = value;
            }
        }
        
        /// <remarks/>
        public bool DAW {
            get {
                return this.dAWField;
            }
            set {
                this.dAWField = value;
            }
        }
        
        /// <remarks/>
        public string ProviderID {
            get {
                return this.providerIDField;
            }
            set {
                this.providerIDField = value;
            }
        }
        
        /// <remarks/>
        public string Comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
            }
        }
        
        /// <remarks/>
        public string TransmitMethod {
            get {
                return this.transmitMethodField;
            }
            set {
                this.transmitMethodField = value;
            }
        }
        
        /// <remarks/>
        public string ShieldSecurityToken {
            get {
                return this.shieldSecurityTokenField;
            }
            set {
                this.shieldSecurityTokenField = value;
            }
        }
        
        /// <remarks/>
        public string DelegateProviderID {
            get {
                return this.delegateProviderIDField;
            }
            set {
                this.delegateProviderIDField = value;
            }
        }
        
        /// <remarks/>
        public string MddValue {
            get {
                return this.mddValueField;
            }
            set {
                this.mddValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class OutboundInfoScriptMessageRequest : ePrescribeSvcRequest {
        
        private string scriptMessageIDField;
        
        /// <remarks/>
        public string ScriptMessageID {
            get {
                return this.scriptMessageIDField;
            }
            set {
                this.scriptMessageIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class ScriptMessageRequest : ePrescribeSvcRequest {
        
        private string scriptMessageIDField;
        
        /// <remarks/>
        public string ScriptMessageID {
            get {
                return this.scriptMessageIDField;
            }
            set {
                this.scriptMessageIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class DeleteScriptMessagesRequest : ePrescribeSvcRequest {
        
        private string[] scriptMessageIDsField;
        
        private ConnectionStringPointer dBIDField;
        
        /// <remarks/>
        public string[] ScriptMessageIDs {
            get {
                return this.scriptMessageIDsField;
            }
            set {
                this.scriptMessageIDsField = value;
            }
        }
        
        /// <remarks/>
        public ConnectionStringPointer DBID {
            get {
                return this.dBIDField;
            }
            set {
                this.dBIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class CreateScriptMessageRequest : ePrescribeSvcRequest {
        
        private string rxIDField;
        
        private int lineNumberField;
        
        private string messageTypeField;
        
        private string shieldSecurityTokenField;
        
        private int siteIDField;
        
        /// <remarks/>
        public string RxID {
            get {
                return this.rxIDField;
            }
            set {
                this.rxIDField = value;
            }
        }
        
        /// <remarks/>
        public int LineNumber {
            get {
                return this.lineNumberField;
            }
            set {
                this.lineNumberField = value;
            }
        }
        
        /// <remarks/>
        public string MessageType {
            get {
                return this.messageTypeField;
            }
            set {
                this.messageTypeField = value;
            }
        }
        
        /// <remarks/>
        public string ShieldSecurityToken {
            get {
                return this.shieldSecurityTokenField;
            }
            set {
                this.shieldSecurityTokenField = value;
            }
        }
        
        /// <remarks/>
        public int SiteID {
            get {
                return this.siteIDField;
            }
            set {
                this.siteIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class RxTaskRequest : ePrescribeSvcRequest {
        
        private RxTask rxTaskField;
        
        /// <remarks/>
        public RxTask RxTask {
            get {
                return this.rxTaskField;
            }
            set {
                this.rxTaskField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class SendRxToAssistantRequest : ePrescribeSvcRequest {
        
        private string rxIDField;
        
        /// <remarks/>
        public string RxID {
            get {
                return this.rxIDField;
            }
            set {
                this.rxIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class SaveRxDURRequest : ePrescribeSvcRequest {
        
        private DURInformation dURInformationField;
        
        /// <remarks/>
        public DURInformation DURInformation {
            get {
                return this.dURInformationField;
            }
            set {
                this.dURInformationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class DURCheckSingleRxRequest : ePrescribeSvcRequest {
        
        private string patientIDField;
        
        private string rxIDField;
        
        private string dDIField;
        
        private decimal quantityField;
        
        private int daysSupplyField;
        
        private string sIGIDField;
        
        private int patientAgeField;
        
        private string patientGenderField;
        
        private string rxDataField;
        
        private string dURTypeField;
        
        private DUROptions dUROptionsField;
        
        private int refillQuantityField;
        
        /// <remarks/>
        public string PatientID {
            get {
                return this.patientIDField;
            }
            set {
                this.patientIDField = value;
            }
        }
        
        /// <remarks/>
        public string RxID {
            get {
                return this.rxIDField;
            }
            set {
                this.rxIDField = value;
            }
        }
        
        /// <remarks/>
        public string DDI {
            get {
                return this.dDIField;
            }
            set {
                this.dDIField = value;
            }
        }
        
        /// <remarks/>
        public decimal Quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
            }
        }
        
        /// <remarks/>
        public int DaysSupply {
            get {
                return this.daysSupplyField;
            }
            set {
                this.daysSupplyField = value;
            }
        }
        
        /// <remarks/>
        public string SIGID {
            get {
                return this.sIGIDField;
            }
            set {
                this.sIGIDField = value;
            }
        }
        
        /// <remarks/>
        public int PatientAge {
            get {
                return this.patientAgeField;
            }
            set {
                this.patientAgeField = value;
            }
        }
        
        /// <remarks/>
        public string PatientGender {
            get {
                return this.patientGenderField;
            }
            set {
                this.patientGenderField = value;
            }
        }
        
        /// <remarks/>
        public string RxData {
            get {
                return this.rxDataField;
            }
            set {
                this.rxDataField = value;
            }
        }
        
        /// <remarks/>
        public string DURType {
            get {
                return this.dURTypeField;
            }
            set {
                this.dURTypeField = value;
            }
        }
        
        /// <remarks/>
        public DUROptions DUROptions {
            get {
                return this.dUROptionsField;
            }
            set {
                this.dUROptionsField = value;
            }
        }
        
        /// <remarks/>
        public int RefillQuantity {
            get {
                return this.refillQuantityField;
            }
            set {
                this.refillQuantityField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class LicenseSiteRequest : ePrescribeSvcRequest {
        
        private string licenseIDField;
        
        private int licenseSiteIDField;
        
        /// <remarks/>
        public string LicenseID {
            get {
                return this.licenseIDField;
            }
            set {
                this.licenseIDField = value;
            }
        }
        
        /// <remarks/>
        public int LicenseSiteID {
            get {
                return this.licenseSiteIDField;
            }
            set {
                this.licenseSiteIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class PatientGuidRequest : ePrescribeSvcRequest {
        
        private string patientGUIDField;
        
        private string userIDField;
        
        /// <remarks/>
        public string PatientGUID {
            get {
                return this.patientGUIDField;
            }
            set {
                this.patientGUIDField = value;
            }
        }
        
        /// <remarks/>
        public string UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class SignPrescriptionsRequest : ePrescribeSvcRequest {
        
        private string[] scriptMessageIDsField;
        
        private string otpSecurityTokenField;
        
        private string shieldUserNameField;
        
        private string eprescribeUserNameField;
        
        private string appInstanceIdField;
        
        private string identitySecurityTokenField;
        
        private System.Guid correlationIdField;
        
        /// <remarks/>
        public string[] ScriptMessageIDs {
            get {
                return this.scriptMessageIDsField;
            }
            set {
                this.scriptMessageIDsField = value;
            }
        }
        
        /// <remarks/>
        public string OtpSecurityToken {
            get {
                return this.otpSecurityTokenField;
            }
            set {
                this.otpSecurityTokenField = value;
            }
        }
        
        /// <remarks/>
        public string ShieldUserName {
            get {
                return this.shieldUserNameField;
            }
            set {
                this.shieldUserNameField = value;
            }
        }
        
        /// <remarks/>
        public string EprescribeUserName {
            get {
                return this.eprescribeUserNameField;
            }
            set {
                this.eprescribeUserNameField = value;
            }
        }
        
        /// <remarks/>
        public string appInstanceId {
            get {
                return this.appInstanceIdField;
            }
            set {
                this.appInstanceIdField = value;
            }
        }
        
        /// <remarks/>
        public string IdentitySecurityToken {
            get {
                return this.identitySecurityTokenField;
            }
            set {
                this.identitySecurityTokenField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid CorrelationId {
            get {
                return this.correlationIdField;
            }
            set {
                this.correlationIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class SaveDEALicenseRequest : ePrescribeSvcRequest {
        
        private DEALicense deaLicenseField;
        
        private string userIdField;
        
        private string shieldUserNameField;
        
        private string appInstanceIdField;
        
        private string securityTokenField;
        
        /// <remarks/>
        public DEALicense deaLicense {
            get {
                return this.deaLicenseField;
            }
            set {
                this.deaLicenseField = value;
            }
        }
        
        /// <remarks/>
        public string userId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public string ShieldUserName {
            get {
                return this.shieldUserNameField;
            }
            set {
                this.shieldUserNameField = value;
            }
        }
        
        /// <remarks/>
        public string AppInstanceId {
            get {
                return this.appInstanceIdField;
            }
            set {
                this.appInstanceIdField = value;
            }
        }
        
        /// <remarks/>
        public string SecurityToken {
            get {
                return this.securityTokenField;
            }
            set {
                this.securityTokenField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class RxOptionsUsedRequest : ePrescribeSvcRequest {
        
        private string rxIDField;
        
        private RxOptions rxOptionField;
        
        /// <remarks/>
        public string RxID {
            get {
                return this.rxIDField;
            }
            set {
                this.rxIDField = value;
            }
        }
        
        /// <remarks/>
        public RxOptions RxOption {
            get {
                return this.rxOptionField;
            }
            set {
                this.rxOptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public enum RxOptions {
        
        /// <remarks/>
        UNKNOWN,
        
        /// <remarks/>
        EPA_HAPPY_PATH,
        
        /// <remarks/>
        EPA_UNHAPPY_PATH,
        
        /// <remarks/>
        EPA_TASK_CREATED,
        
        /// <remarks/>
        EPA_TASK_CREATION_DECLINED,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class RxRequest : ePrescribeSvcRequest {
        
        private string rxStatusField;
        
        private Rx rxField;
        
        private bool isMailOrderField;
        
        /// <remarks/>
        public string rxStatus {
            get {
                return this.rxStatusField;
            }
            set {
                this.rxStatusField = value;
            }
        }
        
        /// <remarks/>
        public Rx Rx {
            get {
                return this.rxField;
            }
            set {
                this.rxField = value;
            }
        }
        
        /// <remarks/>
        public bool isMailOrder {
            get {
                return this.isMailOrderField;
            }
            set {
                this.isMailOrderField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class SetDEARegistrantStatusRequest : ePrescribeSvcRequest {
        
        private string shieldLoginIDField;
        
        private bool isDEARegistrantField;
        
        /// <remarks/>
        public string ShieldLoginID {
            get {
                return this.shieldLoginIDField;
            }
            set {
                this.shieldLoginIDField = value;
            }
        }
        
        /// <remarks/>
        public bool IsDEARegistrant {
            get {
                return this.isDEARegistrantField;
            }
            set {
                this.isDEARegistrantField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class UpdateShieldUserRequest : ePrescribeSvcRequest {
        
        private string userIDField;
        
        private string auditUserIDField;
        
        private string userNameField;
        
        private string emailField;
        
        private string firstNameField;
        
        private string middleInitialField;
        
        private string lastNameField;
        
        private string shieldLoginIDField;
        
        private int shieldInternalUserProfileIDField;
        
        private string eprescribeExternalAppInstanceIDField;
        
        private string eprescribeExternalTenantIDField;
        
        private bool activeField;
        
        private string[] appRolesField;
        
        private string sAMLTokenStringField;
        
        private string shieldADUserIDField;
        
        private ApplicationEnum applicationField;
        
        /// <remarks/>
        public string UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public string AuditUserID {
            get {
                return this.auditUserIDField;
            }
            set {
                this.auditUserIDField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string MiddleInitial {
            get {
                return this.middleInitialField;
            }
            set {
                this.middleInitialField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string ShieldLoginID {
            get {
                return this.shieldLoginIDField;
            }
            set {
                this.shieldLoginIDField = value;
            }
        }
        
        /// <remarks/>
        public int ShieldInternalUserProfileID {
            get {
                return this.shieldInternalUserProfileIDField;
            }
            set {
                this.shieldInternalUserProfileIDField = value;
            }
        }
        
        /// <remarks/>
        public string EprescribeExternalAppInstanceID {
            get {
                return this.eprescribeExternalAppInstanceIDField;
            }
            set {
                this.eprescribeExternalAppInstanceIDField = value;
            }
        }
        
        /// <remarks/>
        public string EprescribeExternalTenantID {
            get {
                return this.eprescribeExternalTenantIDField;
            }
            set {
                this.eprescribeExternalTenantIDField = value;
            }
        }
        
        /// <remarks/>
        public bool Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
        
        /// <remarks/>
        public string[] AppRoles {
            get {
                return this.appRolesField;
            }
            set {
                this.appRolesField = value;
            }
        }
        
        /// <remarks/>
        public string SAMLTokenString {
            get {
                return this.sAMLTokenStringField;
            }
            set {
                this.sAMLTokenStringField = value;
            }
        }
        
        /// <remarks/>
        public string ShieldADUserID {
            get {
                return this.shieldADUserIDField;
            }
            set {
                this.shieldADUserIDField = value;
            }
        }
        
        /// <remarks/>
        public ApplicationEnum Application {
            get {
                return this.applicationField;
            }
            set {
                this.applicationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class CreateShieldUserRequest : ePrescribeSvcRequest {
        
        private string userIDField;
        
        private string userNameField;
        
        private string emailField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string eprescribeExternalAppInstanceIDField;
        
        private int shieldInternalUserIdField;
        
        private int shieldInternalAppIDField;
        
        private int shieldInternalEnvironmentIDField;
        
        private string[] appRolesField;
        
        private string partnerGUIDField;
        
        private int shieldInternalTenantIdField;
        
        /// <remarks/>
        public string UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string EprescribeExternalAppInstanceID {
            get {
                return this.eprescribeExternalAppInstanceIDField;
            }
            set {
                this.eprescribeExternalAppInstanceIDField = value;
            }
        }
        
        /// <remarks/>
        public int ShieldInternalUserId {
            get {
                return this.shieldInternalUserIdField;
            }
            set {
                this.shieldInternalUserIdField = value;
            }
        }
        
        /// <remarks/>
        public int ShieldInternalAppID {
            get {
                return this.shieldInternalAppIDField;
            }
            set {
                this.shieldInternalAppIDField = value;
            }
        }
        
        /// <remarks/>
        public int ShieldInternalEnvironmentID {
            get {
                return this.shieldInternalEnvironmentIDField;
            }
            set {
                this.shieldInternalEnvironmentIDField = value;
            }
        }
        
        /// <remarks/>
        public string[] AppRoles {
            get {
                return this.appRolesField;
            }
            set {
                this.appRolesField = value;
            }
        }
        
        /// <remarks/>
        public string PartnerGUID {
            get {
                return this.partnerGUIDField;
            }
            set {
                this.partnerGUIDField = value;
            }
        }
        
        /// <remarks/>
        public int ShieldInternalTenantId {
            get {
                return this.shieldInternalTenantIdField;
            }
            set {
                this.shieldInternalTenantIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class UpdateSecUsersInfoFromShieldRequest : ePrescribeSvcRequest {
        
        private string ePrescribeUserNameField;
        
        private string shieldUserNameField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string emailField;
        
        private ShieldUserStatus shieldStatusField;
        
        private string ePrescribeUserIDField;
        
        private Role[] appRolesField;
        
        private Permission[] appPermissionsField;
        
        private Property[] appPropertiesField;
        
        private bool forceAppRoleUpdateField;
        
        private bool forceAppPermissionUpdateField;
        
        private bool forceAppPropertyUpdateField;
        
        private bool isFederatedUserField;
        
        /// <remarks/>
        public string ePrescribeUserName {
            get {
                return this.ePrescribeUserNameField;
            }
            set {
                this.ePrescribeUserNameField = value;
            }
        }
        
        /// <remarks/>
        public string ShieldUserName {
            get {
                return this.shieldUserNameField;
            }
            set {
                this.shieldUserNameField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public ShieldUserStatus ShieldStatus {
            get {
                return this.shieldStatusField;
            }
            set {
                this.shieldStatusField = value;
            }
        }
        
        /// <remarks/>
        public string ePrescribeUserID {
            get {
                return this.ePrescribeUserIDField;
            }
            set {
                this.ePrescribeUserIDField = value;
            }
        }
        
        /// <remarks/>
        public Role[] AppRoles {
            get {
                return this.appRolesField;
            }
            set {
                this.appRolesField = value;
            }
        }
        
        /// <remarks/>
        public Permission[] AppPermissions {
            get {
                return this.appPermissionsField;
            }
            set {
                this.appPermissionsField = value;
            }
        }
        
        /// <remarks/>
        public Property[] AppProperties {
            get {
                return this.appPropertiesField;
            }
            set {
                this.appPropertiesField = value;
            }
        }
        
        /// <remarks/>
        public bool ForceAppRoleUpdate {
            get {
                return this.forceAppRoleUpdateField;
            }
            set {
                this.forceAppRoleUpdateField = value;
            }
        }
        
        /// <remarks/>
        public bool ForceAppPermissionUpdate {
            get {
                return this.forceAppPermissionUpdateField;
            }
            set {
                this.forceAppPermissionUpdateField = value;
            }
        }
        
        /// <remarks/>
        public bool ForceAppPropertyUpdate {
            get {
                return this.forceAppPropertyUpdateField;
            }
            set {
                this.forceAppPropertyUpdateField = value;
            }
        }
        
        /// <remarks/>
        public bool IsFederatedUser {
            get {
                return this.isFederatedUserField;
            }
            set {
                this.isFederatedUserField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public enum ShieldUserStatus {
        
        /// <remarks/>
        NOT_IMPORTED,
        
        /// <remarks/>
        PENDING_MIGRATION,
        
        /// <remarks/>
        PENDING_ACTIVATION,
        
        /// <remarks/>
        ACTIVATION_COMPLETE,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetePAStatusRequest : ePrescribeSvcRequest {
        
        private string enterpriseClientIDField;
        
        /// <remarks/>
        public string EnterpriseClientID {
            get {
                return this.enterpriseClientIDField;
            }
            set {
                this.enterpriseClientIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetEnterpriseePAStatusRequest : ePrescribeSvcRequest {
        
        private string partnerIDField;
        
        /// <remarks/>
        public string PartnerID {
            get {
                return this.partnerIDField;
            }
            set {
                this.partnerIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class ResetForgottenPasswordRequest : ePrescribeSvcRequest {
        
        private string newPasswordField;
        
        private SecretAnswer[] secretAnswersField;
        
        private string userNameField;
        
        /// <remarks/>
        public string NewPassword {
            get {
                return this.newPasswordField;
            }
            set {
                this.newPasswordField = value;
            }
        }
        
        /// <remarks/>
        public SecretAnswer[] SecretAnswers {
            get {
                return this.secretAnswersField;
            }
            set {
                this.secretAnswersField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class EnrollProviderRequest : ePrescribeSvcRequest {
        
        private string firstNameField;
        
        private string lastNameField;
        
        private HubServiceLevel[] serviceLevelsField;
        
        private string address1Field;
        
        private string address2Field;
        
        private string cityField;
        
        private string stateField;
        
        private string zipCodeField;
        
        private string emailField;
        
        private string sitePhoneField;
        
        private string siteFaxField;
        
        private string siteNameField;
        
        private string dEAField;
        
        private string nPIField;
        
        private string userIDField;
        
        private string accountIDField;
        
        private ePrescribeApplication sourceField;
        
        private string licenseIDField;
        
        private ConnectionStringPointer dBIDField;
        
        private bool isActiveField;
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public HubServiceLevel[] ServiceLevels {
            get {
                return this.serviceLevelsField;
            }
            set {
                this.serviceLevelsField = value;
            }
        }
        
        /// <remarks/>
        public string Address1 {
            get {
                return this.address1Field;
            }
            set {
                this.address1Field = value;
            }
        }
        
        /// <remarks/>
        public string Address2 {
            get {
                return this.address2Field;
            }
            set {
                this.address2Field = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string ZipCode {
            get {
                return this.zipCodeField;
            }
            set {
                this.zipCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string SitePhone {
            get {
                return this.sitePhoneField;
            }
            set {
                this.sitePhoneField = value;
            }
        }
        
        /// <remarks/>
        public string SiteFax {
            get {
                return this.siteFaxField;
            }
            set {
                this.siteFaxField = value;
            }
        }
        
        /// <remarks/>
        public string SiteName {
            get {
                return this.siteNameField;
            }
            set {
                this.siteNameField = value;
            }
        }
        
        /// <remarks/>
        public string DEA {
            get {
                return this.dEAField;
            }
            set {
                this.dEAField = value;
            }
        }
        
        /// <remarks/>
        public string NPI {
            get {
                return this.nPIField;
            }
            set {
                this.nPIField = value;
            }
        }
        
        /// <remarks/>
        public string UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public string AccountID {
            get {
                return this.accountIDField;
            }
            set {
                this.accountIDField = value;
            }
        }
        
        /// <remarks/>
        public ePrescribeApplication Source {
            get {
                return this.sourceField;
            }
            set {
                this.sourceField = value;
            }
        }
        
        /// <remarks/>
        public string LicenseID {
            get {
                return this.licenseIDField;
            }
            set {
                this.licenseIDField = value;
            }
        }
        
        /// <remarks/>
        public ConnectionStringPointer DBID {
            get {
                return this.dBIDField;
            }
            set {
                this.dBIDField = value;
            }
        }
        
        /// <remarks/>
        public bool isActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public enum HubServiceLevel {
        
        /// <remarks/>
        RENEWALS,
        
        /// <remarks/>
        EPCS,
        
        /// <remarks/>
        EPA,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class LicenseRequest : ePrescribeSvcRequest {
        
        private License licenseField;
        
        private PreferenceCategory prefCategoryField;
        
        /// <remarks/>
        public License License {
            get {
                return this.licenseField;
            }
            set {
                this.licenseField = value;
            }
        }
        
        /// <remarks/>
        public PreferenceCategory PrefCategory {
            get {
                return this.prefCategoryField;
            }
            set {
                this.prefCategoryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class LinkAndAuthorizedFederatedUserRequest : ePrescribeSvcRequest {
        
        private string userGUIDField;
        
        private string userNameField;
        
        private string accountIDField;
        
        private string iPAddressField;
        
        /// <remarks/>
        public string UserGUID {
            get {
                return this.userGUIDField;
            }
            set {
                this.userGUIDField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string AccountID {
            get {
                return this.accountIDField;
            }
            set {
                this.accountIDField = value;
            }
        }
        
        /// <remarks/>
        public string IPAddress {
            get {
                return this.iPAddressField;
            }
            set {
                this.iPAddressField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class UpdateShieldTenantRequest : ePrescribeSvcRequest {
        
        private int shieldInternalTenantIDField;
        
        private string licenseNameField;
        
        /// <remarks/>
        public int ShieldInternalTenantID {
            get {
                return this.shieldInternalTenantIDField;
            }
            set {
                this.shieldInternalTenantIDField = value;
            }
        }
        
        /// <remarks/>
        public string LicenseName {
            get {
                return this.licenseNameField;
            }
            set {
                this.licenseNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class CreateShieldTenantRequest : ePrescribeSvcRequest {
        
        private string licenseIDField;
        
        private string licenseNameField;
        
        private string accountIDField;
        
        private ShieldContact shieldContactField;
        
        private int shieldApplicationIDField;
        
        /// <remarks/>
        public string LicenseID {
            get {
                return this.licenseIDField;
            }
            set {
                this.licenseIDField = value;
            }
        }
        
        /// <remarks/>
        public string LicenseName {
            get {
                return this.licenseNameField;
            }
            set {
                this.licenseNameField = value;
            }
        }
        
        /// <remarks/>
        public string AccountID {
            get {
                return this.accountIDField;
            }
            set {
                this.accountIDField = value;
            }
        }
        
        /// <remarks/>
        public ShieldContact ShieldContact {
            get {
                return this.shieldContactField;
            }
            set {
                this.shieldContactField = value;
            }
        }
        
        /// <remarks/>
        public int ShieldApplicationID {
            get {
                return this.shieldApplicationIDField;
            }
            set {
                this.shieldApplicationIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class SaveUserAppPropertyRequest : ePrescribeSvcRequest {
        
        private string userGUIDField;
        
        private string propertyNameField;
        
        private string propertyValueField;
        
        private ConnectionStringPointer dBIDField;
        
        /// <remarks/>
        public string UserGUID {
            get {
                return this.userGUIDField;
            }
            set {
                this.userGUIDField = value;
            }
        }
        
        /// <remarks/>
        public string PropertyName {
            get {
                return this.propertyNameField;
            }
            set {
                this.propertyNameField = value;
            }
        }
        
        /// <remarks/>
        public string PropertyValue {
            get {
                return this.propertyValueField;
            }
            set {
                this.propertyValueField = value;
            }
        }
        
        /// <remarks/>
        public ConnectionStringPointer DBID {
            get {
                return this.dBIDField;
            }
            set {
                this.dBIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class AuditShieldInsertRequest : ePrescribeSvcRequest {
        
        private string appNameField;
        
        private string hostIPField;
        
        private string moduleNameField;
        
        private string messageField;
        
        private string userNameField;
        
        /// <remarks/>
        public string AppName {
            get {
                return this.appNameField;
            }
            set {
                this.appNameField = value;
            }
        }
        
        /// <remarks/>
        public string HostIP {
            get {
                return this.hostIPField;
            }
            set {
                this.hostIPField = value;
            }
        }
        
        /// <remarks/>
        public string ModuleName {
            get {
                return this.moduleNameField;
            }
            set {
                this.moduleNameField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class CreateTenantAndUserRequest : ePrescribeSvcRequest {
        
        private string guidTokenField;
        
        private CallingApplication callingApplicationField;
        
        /// <remarks/>
        public string GuidToken {
            get {
                return this.guidTokenField;
            }
            set {
                this.guidTokenField = value;
            }
        }
        
        /// <remarks/>
        public CallingApplication CallingApplication {
            get {
                return this.callingApplicationField;
            }
            set {
                this.callingApplicationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/DataManagerService")]
    public enum CallingApplication {
        
        /// <remarks/>
        FullRegistration,
        
        /// <remarks/>
        PartnerRegistration,
        
        /// <remarks/>
        RegWebService,
        
        /// <remarks/>
        Utilities,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class RefreshSamlTokenRequest : ePrescribeSvcRequest {
        
        private string securityTokenField;
        
        private string iPAddressField;
        
        private string appInstanceIDField;
        
        private ConnectionStringPointer dBIDField;
        
        private bool compareClaimCollectionsField;
        
        /// <remarks/>
        public string SecurityToken {
            get {
                return this.securityTokenField;
            }
            set {
                this.securityTokenField = value;
            }
        }
        
        /// <remarks/>
        public string IPAddress {
            get {
                return this.iPAddressField;
            }
            set {
                this.iPAddressField = value;
            }
        }
        
        /// <remarks/>
        public string AppInstanceID {
            get {
                return this.appInstanceIDField;
            }
            set {
                this.appInstanceIDField = value;
            }
        }
        
        /// <remarks/>
        public ConnectionStringPointer DBID {
            get {
                return this.dBIDField;
            }
            set {
                this.dBIDField = value;
            }
        }
        
        /// <remarks/>
        public bool CompareClaimCollections {
            get {
                return this.compareClaimCollectionsField;
            }
            set {
                this.compareClaimCollectionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class AuthenticateSsoRequest : ePrescribeSvcRequest {
        
        private string base64SamlTokenField;
        
        private string ipAddressField;
        
        private bool checkTimeField;
        
        /// <remarks/>
        public string Base64SamlToken {
            get {
                return this.base64SamlTokenField;
            }
            set {
                this.base64SamlTokenField = value;
            }
        }
        
        /// <remarks/>
        public string IpAddress {
            get {
                return this.ipAddressField;
            }
            set {
                this.ipAddressField = value;
            }
        }
        
        /// <remarks/>
        public bool CheckTime {
            get {
                return this.checkTimeField;
            }
            set {
                this.checkTimeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class AuthenticateAndAuthorizeUserRequest : ePrescribeSvcRequest {
        
        private string userNameField;
        
        private string passwordField;
        
        private ePrescribeApplication callingApplicationField;
        
        private string iPAddressField;
        
        private string shieldIdentityTokenField;
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public ePrescribeApplication CallingApplication {
            get {
                return this.callingApplicationField;
            }
            set {
                this.callingApplicationField = value;
            }
        }
        
        /// <remarks/>
        public string IPAddress {
            get {
                return this.iPAddressField;
            }
            set {
                this.iPAddressField = value;
            }
        }
        
        /// <remarks/>
        public string ShieldIdentityToken {
            get {
                return this.shieldIdentityTokenField;
            }
            set {
                this.shieldIdentityTokenField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetShieldUserRequest : ePrescribeSvcRequest {
        
        private string userIDField;
        
        private string legacyUserNameFilterValueField;
        
        private int shieldInternalTenantIDField;
        
        private ApplicationEnum applicationField;
        
        /// <remarks/>
        public string UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public string LegacyUserNameFilterValue {
            get {
                return this.legacyUserNameFilterValueField;
            }
            set {
                this.legacyUserNameFilterValueField = value;
            }
        }
        
        /// <remarks/>
        public int ShieldInternalTenantID {
            get {
                return this.shieldInternalTenantIDField;
            }
            set {
                this.shieldInternalTenantIDField = value;
            }
        }
        
        /// <remarks/>
        public ApplicationEnum Application {
            get {
                return this.applicationField;
            }
            set {
                this.applicationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetShieldInternalAppInstanceIDRequest : ePrescribeSvcRequest {
        
        private ApplicationEnum applicationEnumField;
        
        private string accountIDField;
        
        /// <remarks/>
        public ApplicationEnum ApplicationEnum {
            get {
                return this.applicationEnumField;
            }
            set {
                this.applicationEnumField = value;
            }
        }
        
        /// <remarks/>
        public string AccountID {
            get {
                return this.accountIDField;
            }
            set {
                this.accountIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetShieldInternalTenantIDRequest : ePrescribeSvcRequest {
        
        private ApplicationEnum applicationEnumField;
        
        private string accountIDField;
        
        /// <remarks/>
        public ApplicationEnum ApplicationEnum {
            get {
                return this.applicationEnumField;
            }
            set {
                this.applicationEnumField = value;
            }
        }
        
        /// <remarks/>
        public string AccountID {
            get {
                return this.accountIDField;
            }
            set {
                this.accountIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetShieldInternalEnvironmentIDRequest : ePrescribeSvcRequest {
        
        private ApplicationEnum applicationEnumField;
        
        private string accountIDField;
        
        /// <remarks/>
        public ApplicationEnum ApplicationEnum {
            get {
                return this.applicationEnumField;
            }
            set {
                this.applicationEnumField = value;
            }
        }
        
        /// <remarks/>
        public string AccountID {
            get {
                return this.accountIDField;
            }
            set {
                this.accountIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetUsersFromePrescribeRequest : ePrescribeSvcRequest {
        
        private string accountIDField;
        
        private string licenseIDField;
        
        private System.Nullable<ConnectionStringPointer> dBIDField;
        
        private bool isRolesRequiredField;
        
        private bool retrieveFullUserDetailsField;
        
        /// <remarks/>
        public string AccountID {
            get {
                return this.accountIDField;
            }
            set {
                this.accountIDField = value;
            }
        }
        
        /// <remarks/>
        public string LicenseID {
            get {
                return this.licenseIDField;
            }
            set {
                this.licenseIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<ConnectionStringPointer> DBID {
            get {
                return this.dBIDField;
            }
            set {
                this.dBIDField = value;
            }
        }
        
        /// <remarks/>
        public bool IsRolesRequired {
            get {
                return this.isRolesRequiredField;
            }
            set {
                this.isRolesRequiredField = value;
            }
        }
        
        /// <remarks/>
        public bool RetrieveFullUserDetails {
            get {
                return this.retrieveFullUserDetailsField;
            }
            set {
                this.retrieveFullUserDetailsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class SearchShieldUsersRequest : ePrescribeSvcRequest {
        
        private string accountIDField;
        
        private System.Nullable<ConnectionStringPointer> accountDBIDField;
        
        private ApplicationEnum applicationField;
        
        private FilterTypeEnumSearchUsers filterTypeSearchUserField;
        
        private string legacyUserNameFilterValueField;
        
        private int pageSizeField;
        
        private int pageIndexField;
        
        private string tenantFilterValueField;
        
        private bool isRolesRequiredField;
        
        private string licenseIDField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private Status userStatusField;
        
        /// <remarks/>
        public string AccountID {
            get {
                return this.accountIDField;
            }
            set {
                this.accountIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<ConnectionStringPointer> AccountDBID {
            get {
                return this.accountDBIDField;
            }
            set {
                this.accountDBIDField = value;
            }
        }
        
        /// <remarks/>
        public ApplicationEnum Application {
            get {
                return this.applicationField;
            }
            set {
                this.applicationField = value;
            }
        }
        
        /// <remarks/>
        public FilterTypeEnumSearchUsers FilterTypeSearchUser {
            get {
                return this.filterTypeSearchUserField;
            }
            set {
                this.filterTypeSearchUserField = value;
            }
        }
        
        /// <remarks/>
        public string LegacyUserNameFilterValue {
            get {
                return this.legacyUserNameFilterValueField;
            }
            set {
                this.legacyUserNameFilterValueField = value;
            }
        }
        
        /// <remarks/>
        public int PageSize {
            get {
                return this.pageSizeField;
            }
            set {
                this.pageSizeField = value;
            }
        }
        
        /// <remarks/>
        public int PageIndex {
            get {
                return this.pageIndexField;
            }
            set {
                this.pageIndexField = value;
            }
        }
        
        /// <remarks/>
        public string TenantFilterValue {
            get {
                return this.tenantFilterValueField;
            }
            set {
                this.tenantFilterValueField = value;
            }
        }
        
        /// <remarks/>
        public bool IsRolesRequired {
            get {
                return this.isRolesRequiredField;
            }
            set {
                this.isRolesRequiredField = value;
            }
        }
        
        /// <remarks/>
        public string LicenseID {
            get {
                return this.licenseIDField;
            }
            set {
                this.licenseIDField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public Status userStatus {
            get {
                return this.userStatusField;
            }
            set {
                this.userStatusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public enum FilterTypeEnumSearchUsers {
        
        /// <remarks/>
        TenantID,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public enum Status {
        
        /// <remarks/>
        Active,
        
        /// <remarks/>
        Inactive,
        
        /// <remarks/>
        All,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetUsersRequest : ePrescribeSvcRequest {
        
        private string accountIDField;
        
        private System.Nullable<ConnectionStringPointer> accountDBIDField;
        
        private ApplicationEnum applicationField;
        
        private FilterTypeEnum filterTypeField;
        
        private string legacyUserNameFilterValueField;
        
        private int pageSizeField;
        
        private int pageIndexField;
        
        private string tenantFilterValueField;
        
        private bool isRolesRequiredField;
        
        private string licenseIDField;
        
        /// <remarks/>
        public string AccountID {
            get {
                return this.accountIDField;
            }
            set {
                this.accountIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<ConnectionStringPointer> AccountDBID {
            get {
                return this.accountDBIDField;
            }
            set {
                this.accountDBIDField = value;
            }
        }
        
        /// <remarks/>
        public ApplicationEnum Application {
            get {
                return this.applicationField;
            }
            set {
                this.applicationField = value;
            }
        }
        
        /// <remarks/>
        public FilterTypeEnum FilterType {
            get {
                return this.filterTypeField;
            }
            set {
                this.filterTypeField = value;
            }
        }
        
        /// <remarks/>
        public string LegacyUserNameFilterValue {
            get {
                return this.legacyUserNameFilterValueField;
            }
            set {
                this.legacyUserNameFilterValueField = value;
            }
        }
        
        /// <remarks/>
        public int PageSize {
            get {
                return this.pageSizeField;
            }
            set {
                this.pageSizeField = value;
            }
        }
        
        /// <remarks/>
        public int PageIndex {
            get {
                return this.pageIndexField;
            }
            set {
                this.pageIndexField = value;
            }
        }
        
        /// <remarks/>
        public string TenantFilterValue {
            get {
                return this.tenantFilterValueField;
            }
            set {
                this.tenantFilterValueField = value;
            }
        }
        
        /// <remarks/>
        public bool IsRolesRequired {
            get {
                return this.isRolesRequiredField;
            }
            set {
                this.isRolesRequiredField = value;
            }
        }
        
        /// <remarks/>
        public string LicenseID {
            get {
                return this.licenseIDField;
            }
            set {
                this.licenseIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public enum FilterTypeEnum {
        
        /// <remarks/>
        TenantID,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AuditLicenseInsertRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AuditUserInsertRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AuditPatientInsertRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AuditPatientRxCSInsertRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AuditPatientRxInsertRequest))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class AuditInsertRequest : ePrescribeSvcRequest {
        
        private AuditAction auditActionField;
        
        private ePrescribeApplication applicationIDField;
        
        private string licenseIDField;
        
        private string accountIDField;
        
        private string userIDField;
        
        private string iPAddressField;
        
        /// <remarks/>
        public AuditAction AuditAction {
            get {
                return this.auditActionField;
            }
            set {
                this.auditActionField = value;
            }
        }
        
        /// <remarks/>
        public ePrescribeApplication ApplicationID {
            get {
                return this.applicationIDField;
            }
            set {
                this.applicationIDField = value;
            }
        }
        
        /// <remarks/>
        public string LicenseID {
            get {
                return this.licenseIDField;
            }
            set {
                this.licenseIDField = value;
            }
        }
        
        /// <remarks/>
        public string AccountID {
            get {
                return this.accountIDField;
            }
            set {
                this.accountIDField = value;
            }
        }
        
        /// <remarks/>
        public string UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public string IPAddress {
            get {
                return this.iPAddressField;
            }
            set {
                this.iPAddressField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public enum AuditAction {
        
        /// <remarks/>
        PATIENT_HEADER_VIEW,
        
        /// <remarks/>
        PATIENT_ADD,
        
        /// <remarks/>
        PATIENT_DEMO_MODIFY,
        
        /// <remarks/>
        PATIENT_DEMO_VIEW,
        
        /// <remarks/>
        PATIENT_ALLERGY_VIEW,
        
        /// <remarks/>
        PATIENT_ALLERGY_CREATED,
        
        /// <remarks/>
        PATIENT_ALLERGY_MODIFY,
        
        /// <remarks/>
        PATIENT_DX_VIEW,
        
        /// <remarks/>
        PATIENT_DX_CREATED,
        
        /// <remarks/>
        PATIENT_DX_MODIFY,
        
        /// <remarks/>
        PATIENT_RX_VIEW,
        
        /// <remarks/>
        PATIENT_RX_CREATED,
        
        /// <remarks/>
        PATIENT_RX_MODIFY,
        
        /// <remarks/>
        PATIENT_RETAIL_PHARMACY_MODIFY,
        
        /// <remarks/>
        PATIENT_RETAIL_PHARMACY_DELETE,
        
        /// <remarks/>
        PATIENT_MAIL_PHARMACY_MODIFY,
        
        /// <remarks/>
        PATIENT_MAIL_PHARMACY_DELETE,
        
        /// <remarks/>
        PATIENT_MERGE,
        
        /// <remarks/>
        PATIENT_TASK_VIEW,
        
        /// <remarks/>
        PATIENT_TASK_PROCESS,
        
        /// <remarks/>
        PATIENT_TASK_PATIENT_RECONCILE,
        
        /// <remarks/>
        PATIENT_MERGE_CANCELLED,
        
        /// <remarks/>
        PATIENT_RX_VIEW_VIA_MSG_QUEUE,
        
        /// <remarks/>
        PATIENT_RX_CS_READY_TO_SIGN,
        
        /// <remarks/>
        PATIENT_RX_CS_VALIDATE_CREDENTIALS,
        
        /// <remarks/>
        PATIENT_RX_CS_VALIDATE_EPCS_PERM,
        
        /// <remarks/>
        PATIENT_RX_CS_VALIDATE_2ND_FACTOR,
        
        /// <remarks/>
        PATIENT_RX_CS_INSERT_SCRIPT_MESSAGE,
        
        /// <remarks/>
        PATIENT_RX_CS_SIGN_EPCS_RX,
        
        /// <remarks/>
        PATIENT_RX_CS_INSERT_SIGNED_SCRIPT_MESSAGE,
        
        /// <remarks/>
        PATIENT_RX_CS_SEND_TO_HUB,
        
        /// <remarks/>
        PATIENT_CLINICAL_VIEWER_VIEWED,
        
        /// <remarks/>
        PATIENT_RESTRICTION_OVERRIDDEN,
        
        /// <remarks/>
        PATIENT_WEIGHT_MODIFIED,
        
        /// <remarks/>
        PATIENT_RX_PRINTED,
        
        /// <remarks/>
        PATIENT_ALIAS_CREATED,
        
        /// <remarks/>
        PATIENT_ALIAS_MODIFIED,
        
        /// <remarks/>
        PATIENT_ALIAS_REMOVED,
        
        /// <remarks/>
        PATIENT_CONSENT_MODIFIED_ALLOW_MEDICATION_HISTORY,
        
        /// <remarks/>
        PATIENT_CONSENT_MODIFIED_DO_NOT_ALLOW_MEDICATION_HISTORY,
        
        /// <remarks/>
        PATIENT_CONSENT_MODIFIED_ALLOW_DISCLOSURES_TO_HEALTH_PLAN,
        
        /// <remarks/>
        PATIENT_CONSENT_MODIFIED_DO_NOT_ALLOW_DISCLOSURES_TO_HEALTH_PLAN,
        
        /// <remarks/>
        PATIENT_HEIGHT_MODIFIED,
        
        /// <remarks/>
        USER_ADD,
        
        /// <remarks/>
        USER_MODIFY,
        
        /// <remarks/>
        USER_VIEW,
        
        /// <remarks/>
        USER_PASSWORD_RESET,
        
        /// <remarks/>
        USER_LOGIN,
        
        /// <remarks/>
        USER_LOGOUT,
        
        /// <remarks/>
        USER_SSO_LOGIN,
        
        /// <remarks/>
        USER_TOKEN_REFRESH,
        
        /// <remarks/>
        USER_FORGOT_PASSWORD,
        
        /// <remarks/>
        USER_PRIVACY_RESTRICTION_ADDED,
        
        /// <remarks/>
        USER_PRIVACY_RESTRICTION_REMOVED,
        
        /// <remarks/>
        REPORT_VIEWED,
        
        /// <remarks/>
        REPORT_TO_EXCEL,
        
        /// <remarks/>
        REPORT_TO_PDF,
        
        /// <remarks/>
        REPORT_TO_WORD,
        
        /// <remarks/>
        REPORT_PRINTED,
        
        /// <remarks/>
        DEMOGRAPHICS_EXTRACT_DOWNLOADED,
        
        /// <remarks/>
        PRESCRIPTION_EXTRACT_DOWNLOADED,
        
        /// <remarks/>
        PATIENT_EXTRACT_UNDEFINED,
        
        /// <remarks/>
        ACCESSING_PROTECTED_STORE_EPCS_REPORTS,
        
        /// <remarks/>
        LICENSE_DUR_VIEW,
        
        /// <remarks/>
        LICENSE_DUR_MODIFY,
        
        /// <remarks/>
        LICENSE_PHARMACY_RENEWALS_VIEW,
        
        /// <remarks/>
        LICENSE_SITE_DEMO_VIEW,
        
        /// <remarks/>
        LICENSE_SITE_DEMO_MODIFY,
        
        /// <remarks/>
        LICENSE_SITE_PHARMACY_FAVORITE_EDIT,
        
        /// <remarks/>
        LICENSE_SITES_DEMO_VIEW_ALL,
        
        /// <remarks/>
        CS_PRESCRIPTION_SIGN_AND_SEND_BUTTON_CLICKED,
        
        /// <remarks/>
        CS_PRESCRIPTION_CREDENTIALS_VALIDATED,
        
        /// <remarks/>
        CS_PRESCRIPTION_EPCS_PERMISSION_VALIDATED,
        
        /// <remarks/>
        CS_PRESCRIPTION_2ND_FACTOR_VALIDATED,
        
        /// <remarks/>
        CS_PRESCRIPTION_SCRIPT_MESSAGE_INSERTED,
        
        /// <remarks/>
        CS_PRESCRIPTION_SIGNED,
        
        /// <remarks/>
        CS_PRESCRIPTION_SIGNED_SCRIPT_MESSAGE_INSERTED,
        
        /// <remarks/>
        CS_PRESCRIPTION_SENT_TO_TXHUB,
        
        /// <remarks/>
        DUE_DILIGENCE_BOXES_CHECKED,
        
        /// <remarks/>
        DUE_DILIGENCE_CREDENTIALS_VERIFIED,
        
        /// <remarks/>
        DUE_DILIGENCE_2ND_FACTOR_VALIDATED,
        
        /// <remarks/>
        DUE_DILIGENCE_CAN_PRESCRIBE_GRANTED,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class AuditLicenseInsertRequest : AuditInsertRequest {
        
        private int siteIDActionPerformedOnField;
        
        /// <remarks/>
        public int SiteIDActionPerformedOn {
            get {
                return this.siteIDActionPerformedOnField;
            }
            set {
                this.siteIDActionPerformedOnField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class AuditUserInsertRequest : AuditInsertRequest {
        
        private string userIDActionPerformedOnField;
        
        /// <remarks/>
        public string UserIDActionPerformedOn {
            get {
                return this.userIDActionPerformedOnField;
            }
            set {
                this.userIDActionPerformedOnField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AuditPatientRxCSInsertRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AuditPatientRxInsertRequest))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class AuditPatientInsertRequest : AuditInsertRequest {
        
        private string patientIDField;
        
        /// <remarks/>
        public string PatientID {
            get {
                return this.patientIDField;
            }
            set {
                this.patientIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class AuditPatientRxCSInsertRequest : AuditPatientInsertRequest {
        
        private long auditLogPatientRxIDField;
        
        private bool isSuccessfulField;
        
        private string createdUTCField;
        
        /// <remarks/>
        public long AuditLogPatientRxID {
            get {
                return this.auditLogPatientRxIDField;
            }
            set {
                this.auditLogPatientRxIDField = value;
            }
        }
        
        /// <remarks/>
        public bool IsSuccessful {
            get {
                return this.isSuccessfulField;
            }
            set {
                this.isSuccessfulField = value;
            }
        }
        
        /// <remarks/>
        public string CreatedUTC {
            get {
                return this.createdUTCField;
            }
            set {
                this.createdUTCField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class AuditPatientRxInsertRequest : AuditPatientInsertRequest {
        
        private string rxIDField;
        
        private AuditAction auditActionIDField;
        
        private string auditLogPatientIDField;
        
        private string createdUTCField;
        
        /// <remarks/>
        public string RxID {
            get {
                return this.rxIDField;
            }
            set {
                this.rxIDField = value;
            }
        }
        
        /// <remarks/>
        public AuditAction AuditActionID {
            get {
                return this.auditActionIDField;
            }
            set {
                this.auditActionIDField = value;
            }
        }
        
        /// <remarks/>
        public string AuditLogPatientID {
            get {
                return this.auditLogPatientIDField;
            }
            set {
                this.auditLogPatientIDField = value;
            }
        }
        
        /// <remarks/>
        public string CreatedUTC {
            get {
                return this.createdUTCField;
            }
            set {
                this.createdUTCField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetEligAndMedHxStatusRequest : ePrescribeSvcRequest {
        
        private string patientGUIDField;
        
        private string licenseIDField;
        
        private int siteIDField;
        
        /// <remarks/>
        public string PatientGUID {
            get {
                return this.patientGUIDField;
            }
            set {
                this.patientGUIDField = value;
            }
        }
        
        /// <remarks/>
        public string LicenseID {
            get {
                return this.licenseIDField;
            }
            set {
                this.licenseIDField = value;
            }
        }
        
        /// <remarks/>
        public int SiteID {
            get {
                return this.siteIDField;
            }
            set {
                this.siteIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class CacheResetRequest : ePrescribeSvcRequest {
        
        private string itemResetIDField;
        
        /// <remarks/>
        public string ItemResetID {
            get {
                return this.itemResetIDField;
            }
            set {
                this.itemResetIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class ApplicationVersionRequest : ePrescribeSvcRequest {
        
        private ePrescribeApplication applicationIDField;
        
        /// <remarks/>
        public ePrescribeApplication ApplicationID {
            get {
                return this.applicationIDField;
            }
            set {
                this.applicationIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class CreateBackdoorUserAuditLogEntryRequest : ePrescribeSvcRequest {
        
        private string userIDField;
        
        private string selectedLicenseIDField;
        
        private int selectedSiteIDField;
        
        private string sessionIDField;
        
        private string appField;
        
        /// <remarks/>
        public string UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public string SelectedLicenseID {
            get {
                return this.selectedLicenseIDField;
            }
            set {
                this.selectedLicenseIDField = value;
            }
        }
        
        /// <remarks/>
        public int SelectedSiteID {
            get {
                return this.selectedSiteIDField;
            }
            set {
                this.selectedSiteIDField = value;
            }
        }
        
        /// <remarks/>
        public string SessionID {
            get {
                return this.sessionIDField;
            }
            set {
                this.sessionIDField = value;
            }
        }
        
        /// <remarks/>
        public string App {
            get {
                return this.appField;
            }
            set {
                this.appField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class EPARequest : ePrescribeSvcRequest {
        
        private string ePATaskIDField;
        
        private ePATransPriority ePATransPriorityIDField;
        
        private ePARequestType ePARequestTypeIDField;
        
        /// <remarks/>
        public string EPATaskID {
            get {
                return this.ePATaskIDField;
            }
            set {
                this.ePATaskIDField = value;
            }
        }
        
        /// <remarks/>
        public ePATransPriority EPATransPriorityID {
            get {
                return this.ePATransPriorityIDField;
            }
            set {
                this.ePATransPriorityIDField = value;
            }
        }
        
        /// <remarks/>
        public ePARequestType EPARequestTypeID {
            get {
                return this.ePARequestTypeIDField;
            }
            set {
                this.ePARequestTypeIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public enum ePATransPriority {
        
        /// <remarks/>
        NOT_URGENT,
        
        /// <remarks/>
        URGENT,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public enum ePARequestType {
        
        /// <remarks/>
        UNKNOWN,
        
        /// <remarks/>
        EPAINITIATION_REQUEST,
        
        /// <remarks/>
        EPA_REQUEST,
        
        /// <remarks/>
        EAPPEAL_REQUEST,
        
        /// <remarks/>
        EPACANCEL_REQUEST,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class EPARequestsAdditionalInfoRequest : ePrescribeSvcRequest {
        
        private string ePARequestIDField;
        
        private Patient patientField;
        
        private int pBMIDField;
        
        private string healthPlanField;
        
        private string memberIDField;
        
        /// <remarks/>
        public string EPARequestID {
            get {
                return this.ePARequestIDField;
            }
            set {
                this.ePARequestIDField = value;
            }
        }
        
        /// <remarks/>
        public Patient Patient {
            get {
                return this.patientField;
            }
            set {
                this.patientField = value;
            }
        }
        
        /// <remarks/>
        public int PBMID {
            get {
                return this.pBMIDField;
            }
            set {
                this.pBMIDField = value;
            }
        }
        
        /// <remarks/>
        public string HealthPlan {
            get {
                return this.healthPlanField;
            }
            set {
                this.healthPlanField = value;
            }
        }
        
        /// <remarks/>
        public string MemberID {
            get {
                return this.memberIDField;
            }
            set {
                this.memberIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class EPATaskRequest : ePrescribeSvcRequest {
        
        private string ePATaskIDField;
        
        private string patientIDField;
        
        private string rxIDField;
        
        private string pharmacyIDField;
        
        private ePATaskType ePATaskTypeField;
        
        private ePATaskStatus ePATaskStatusField;
        
        private ePANCPDPTaskType ePANCPDPTaskTypeField;
        
        private string providerIDField;
        
        private EPAType ePATypeField;
        
        private bool updateRxStatusField;
        
        /// <remarks/>
        public string EPATaskID {
            get {
                return this.ePATaskIDField;
            }
            set {
                this.ePATaskIDField = value;
            }
        }
        
        /// <remarks/>
        public string PatientID {
            get {
                return this.patientIDField;
            }
            set {
                this.patientIDField = value;
            }
        }
        
        /// <remarks/>
        public string RxID {
            get {
                return this.rxIDField;
            }
            set {
                this.rxIDField = value;
            }
        }
        
        /// <remarks/>
        public string PharmacyID {
            get {
                return this.pharmacyIDField;
            }
            set {
                this.pharmacyIDField = value;
            }
        }
        
        /// <remarks/>
        public ePATaskType EPATaskType {
            get {
                return this.ePATaskTypeField;
            }
            set {
                this.ePATaskTypeField = value;
            }
        }
        
        /// <remarks/>
        public ePATaskStatus EPATaskStatus {
            get {
                return this.ePATaskStatusField;
            }
            set {
                this.ePATaskStatusField = value;
            }
        }
        
        /// <remarks/>
        public ePANCPDPTaskType EPANCPDPTaskType {
            get {
                return this.ePANCPDPTaskTypeField;
            }
            set {
                this.ePANCPDPTaskTypeField = value;
            }
        }
        
        /// <remarks/>
        public string ProviderID {
            get {
                return this.providerIDField;
            }
            set {
                this.providerIDField = value;
            }
        }
        
        /// <remarks/>
        public EPAType EPAType {
            get {
                return this.ePATypeField;
            }
            set {
                this.ePATypeField = value;
            }
        }
        
        /// <remarks/>
        public bool UpdateRxStatus {
            get {
                return this.updateRxStatusField;
            }
            set {
                this.updateRxStatusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public enum ePATaskType {
        
        /// <remarks/>
        UNKNOWN,
        
        /// <remarks/>
        PRIOR_AUTH_INITIATED,
        
        /// <remarks/>
        NON_PRIOR_AUTH_INITIATED,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public enum ePATaskStatus {
        
        /// <remarks/>
        UNKNOWN,
        
        /// <remarks/>
        EPA_REQUESTED,
        
        /// <remarks/>
        REQUEST_EPA,
        
        /// <remarks/>
        EPA_READY,
        
        /// <remarks/>
        EPA_SAVED_NOT_SUBMITTED,
        
        /// <remarks/>
        EPA_SUBMITTED,
        
        /// <remarks/>
        EPA_APPROVED,
        
        /// <remarks/>
        EPA_DENIED,
        
        /// <remarks/>
        EPA_NOT_AVAILABLE,
        
        /// <remarks/>
        EPA_CLOSED,
        
        /// <remarks/>
        EPA_FAILED,
        
        /// <remarks/>
        EPA_REMOVED_PROCESSED,
        
        /// <remarks/>
        EPA_APPEAL_REQUESTED,
        
        /// <remarks/>
        EPA_CANCEL_REQUESTED,
        
        /// <remarks/>
        EPA_CANCEL_APPROVED,
        
        /// <remarks/>
        EPA_CANCEL_DENIED,
        
        /// <remarks/>
        EPA_CANCEL_FAILED,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public enum ePANCPDPTaskType {
        
        /// <remarks/>
        NON_NCPDP,
        
        /// <remarks/>
        NCPDP,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public enum EPAType {
        
        /// <remarks/>
        PROSPECTIVE_EPA,
        
        /// <remarks/>
        RETROSPECTIVE_EPA,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class InfoScriptsRequest : ePrescribeSvcRequest {
        
        private InfoScriptsMessage infoScriptsMessageField;
        
        /// <remarks/>
        public InfoScriptsMessage InfoScriptsMessage {
            get {
                return this.infoScriptsMessageField;
            }
            set {
                this.infoScriptsMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class ToggleActiveStatusRequest : ePrescribeSvcRequest {
        
        private System.Guid userIdField;
        
        /// <remarks/>
        public System.Guid UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class UserLoggingEnabledRequest : ePrescribeSvcRequest {
        
        private System.Guid userGuidField;
        
        private string userNameField;
        
        /// <remarks/>
        public System.Guid UserGuid {
            get {
                return this.userGuidField;
            }
            set {
                this.userGuidField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class ExportCCDToDBMotionRequest : ePrescribeSvcRequest {
        
        private CCDPatientChangeQueueItem[] cCDPatientChangeQueueItemsField;
        
        /// <remarks/>
        public CCDPatientChangeQueueItem[] CCDPatientChangeQueueItems {
            get {
                return this.cCDPatientChangeQueueItemsField;
            }
            set {
                this.cCDPatientChangeQueueItemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetPatientCCDRequest : ePrescribeSvcRequest {
        
        private string patientIDField;
        
        private bool extractAllField;
        
        private string extractStartDateField;
        
        private string extractEndDateField;
        
        private string licenseIDField;
        
        /// <remarks/>
        public string PatientID {
            get {
                return this.patientIDField;
            }
            set {
                this.patientIDField = value;
            }
        }
        
        /// <remarks/>
        public bool ExtractAll {
            get {
                return this.extractAllField;
            }
            set {
                this.extractAllField = value;
            }
        }
        
        /// <remarks/>
        public string ExtractStartDate {
            get {
                return this.extractStartDateField;
            }
            set {
                this.extractStartDateField = value;
            }
        }
        
        /// <remarks/>
        public string ExtractEndDate {
            get {
                return this.extractEndDateField;
            }
            set {
                this.extractEndDateField = value;
            }
        }
        
        /// <remarks/>
        public string LicenseID {
            get {
                return this.licenseIDField;
            }
            set {
                this.licenseIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class ACRSubmitPixFeedRequest : ePrescribeSvcRequest {
        
        private string patientIDField;
        
        private ConnectionStringPointer dBIDField;
        
        private string systemOIDField;
        
        private string communityNameField;
        
        private string userIdField;
        
        /// <remarks/>
        public string PatientID {
            get {
                return this.patientIDField;
            }
            set {
                this.patientIDField = value;
            }
        }
        
        /// <remarks/>
        public ConnectionStringPointer DBID {
            get {
                return this.dBIDField;
            }
            set {
                this.dBIDField = value;
            }
        }
        
        /// <remarks/>
        public string SystemOID {
            get {
                return this.systemOIDField;
            }
            set {
                this.systemOIDField = value;
            }
        }
        
        /// <remarks/>
        public string CommunityName {
            get {
                return this.communityNameField;
            }
            set {
                this.communityNameField = value;
            }
        }
        
        /// <remarks/>
        public string UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class ClinicalViewerLaunchRequest : ePrescribeSvcRequest {
        
        private string patientIDField;
        
        private string userNameField;
        
        private string userFirstNameField;
        
        private string userLastNameField;
        
        private string userRoleField;
        
        private string systemOIDField;
        
        private string communityURLField;
        
        /// <remarks/>
        public string PatientID {
            get {
                return this.patientIDField;
            }
            set {
                this.patientIDField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string UserFirstName {
            get {
                return this.userFirstNameField;
            }
            set {
                this.userFirstNameField = value;
            }
        }
        
        /// <remarks/>
        public string UserLastName {
            get {
                return this.userLastNameField;
            }
            set {
                this.userLastNameField = value;
            }
        }
        
        /// <remarks/>
        public string UserRole {
            get {
                return this.userRoleField;
            }
            set {
                this.userRoleField = value;
            }
        }
        
        /// <remarks/>
        public string SystemOID {
            get {
                return this.systemOIDField;
            }
            set {
                this.systemOIDField = value;
            }
        }
        
        /// <remarks/>
        public string CommunityURL {
            get {
                return this.communityURLField;
            }
            set {
                this.communityURLField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetEnterpriseInfoRequest : ePrescribeSvcRequest {
        
        private string partnerIDField;
        
        /// <remarks/>
        public string PartnerID {
            get {
                return this.partnerIDField;
            }
            set {
                this.partnerIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetStateLicenseAndDeaExpiryDateForUserRequest : ePrescribeSvcRequest {
        
        private System.Guid userGuidField;
        
        private string practiseStateField;
        
        /// <remarks/>
        public System.Guid UserGuid {
            get {
                return this.userGuidField;
            }
            set {
                this.userGuidField = value;
            }
        }
        
        /// <remarks/>
        public string PractiseState {
            get {
                return this.practiseStateField;
            }
            set {
                this.practiseStateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class IsValidPasswordRequest : ePrescribeSvcRequest {
        
        private string passwordField;
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetFailedScriptsRequest : ePrescribeSvcRequest {
        
        private System.Guid licenseIDField;
        
        private System.DateTime fromDateTimeUTCField;
        
        /// <remarks/>
        public System.Guid LicenseID {
            get {
                return this.licenseIDField;
            }
            set {
                this.licenseIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime FromDateTimeUTC {
            get {
                return this.fromDateTimeUTCField;
            }
            set {
                this.fromDateTimeUTCField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetPendingScriptsRequest : ePrescribeSvcRequest {
        
        private System.Guid licenseIDField;
        
        /// <remarks/>
        public System.Guid LicenseID {
            get {
                return this.licenseIDField;
            }
            set {
                this.licenseIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class LoadMessageQueueTxRequest : ePrescribeSvcRequest {
        
        private string licenseIDField;
        
        private int siteIDField;
        
        private int statusIDField;
        
        private System.DateTime startDateField;
        
        private System.DateTime endDateField;
        
        private string authorizerIDField;
        
        private string originatorIDField;
        
        private string patientIDField;
        
        private ConnectionStringPointer dbIDField;
        
        private string userIDField;
        
        private int userTypeField;
        
        /// <remarks/>
        public string LicenseID {
            get {
                return this.licenseIDField;
            }
            set {
                this.licenseIDField = value;
            }
        }
        
        /// <remarks/>
        public int SiteID {
            get {
                return this.siteIDField;
            }
            set {
                this.siteIDField = value;
            }
        }
        
        /// <remarks/>
        public int StatusID {
            get {
                return this.statusIDField;
            }
            set {
                this.statusIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime EndDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        public string AuthorizerID {
            get {
                return this.authorizerIDField;
            }
            set {
                this.authorizerIDField = value;
            }
        }
        
        /// <remarks/>
        public string OriginatorID {
            get {
                return this.originatorIDField;
            }
            set {
                this.originatorIDField = value;
            }
        }
        
        /// <remarks/>
        public string PatientID {
            get {
                return this.patientIDField;
            }
            set {
                this.patientIDField = value;
            }
        }
        
        /// <remarks/>
        public ConnectionStringPointer dbID {
            get {
                return this.dbIDField;
            }
            set {
                this.dbIDField = value;
            }
        }
        
        /// <remarks/>
        public string userID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public int userType {
            get {
                return this.userTypeField;
            }
            set {
                this.userTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class UpdateMessageQueueRequest : ePrescribeSvcRequest {
        
        private string scriptMessageIDField;
        
        private int statusIDField;
        
        private ConnectionStringPointer dbIDField;
        
        /// <remarks/>
        public string ScriptMessageID {
            get {
                return this.scriptMessageIDField;
            }
            set {
                this.scriptMessageIDField = value;
            }
        }
        
        /// <remarks/>
        public int StatusID {
            get {
                return this.statusIDField;
            }
            set {
                this.statusIDField = value;
            }
        }
        
        /// <remarks/>
        public ConnectionStringPointer dbID {
            get {
                return this.dbIDField;
            }
            set {
                this.dbIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class InsertMessageQueueRequest : ePrescribeSvcRequest {
        
        private string licenseIDField;
        
        private int siteIDField;
        
        private string scriptMessageIDField;
        
        private int statusIDField;
        
        private string authorizerIDField;
        
        private string originatorIDField;
        
        private string patientIDField;
        
        private string patientNameField;
        
        private string rxIDField;
        
        private int messageTypeIDField;
        
        private ConnectionStringPointer dbIDField;
        
        /// <remarks/>
        public string LicenseID {
            get {
                return this.licenseIDField;
            }
            set {
                this.licenseIDField = value;
            }
        }
        
        /// <remarks/>
        public int SiteID {
            get {
                return this.siteIDField;
            }
            set {
                this.siteIDField = value;
            }
        }
        
        /// <remarks/>
        public string ScriptMessageID {
            get {
                return this.scriptMessageIDField;
            }
            set {
                this.scriptMessageIDField = value;
            }
        }
        
        /// <remarks/>
        public int StatusID {
            get {
                return this.statusIDField;
            }
            set {
                this.statusIDField = value;
            }
        }
        
        /// <remarks/>
        public string AuthorizerID {
            get {
                return this.authorizerIDField;
            }
            set {
                this.authorizerIDField = value;
            }
        }
        
        /// <remarks/>
        public string OriginatorID {
            get {
                return this.originatorIDField;
            }
            set {
                this.originatorIDField = value;
            }
        }
        
        /// <remarks/>
        public string PatientID {
            get {
                return this.patientIDField;
            }
            set {
                this.patientIDField = value;
            }
        }
        
        /// <remarks/>
        public string PatientName {
            get {
                return this.patientNameField;
            }
            set {
                this.patientNameField = value;
            }
        }
        
        /// <remarks/>
        public string RxID {
            get {
                return this.rxIDField;
            }
            set {
                this.rxIDField = value;
            }
        }
        
        /// <remarks/>
        public int MessageTypeID {
            get {
                return this.messageTypeIDField;
            }
            set {
                this.messageTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public ConnectionStringPointer dbID {
            get {
                return this.dbIDField;
            }
            set {
                this.dbIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class SaveRxErrorRequest : ePrescribeSvcRequest {
        
        private int messageQueueTxIDField;
        
        private string scriptMessageIDField;
        
        private string errorTextField;
        
        private string confirmedByUserIDField;
        
        private ConnectionStringPointer dbIDField;
        
        /// <remarks/>
        public int MessageQueueTxID {
            get {
                return this.messageQueueTxIDField;
            }
            set {
                this.messageQueueTxIDField = value;
            }
        }
        
        /// <remarks/>
        public string ScriptMessageID {
            get {
                return this.scriptMessageIDField;
            }
            set {
                this.scriptMessageIDField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorText {
            get {
                return this.errorTextField;
            }
            set {
                this.errorTextField = value;
            }
        }
        
        /// <remarks/>
        public string ConfirmedByUserID {
            get {
                return this.confirmedByUserIDField;
            }
            set {
                this.confirmedByUserIDField = value;
            }
        }
        
        /// <remarks/>
        public ConnectionStringPointer dbID {
            get {
                return this.dbIDField;
            }
            set {
                this.dbIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class ECouponRefillRequest : ePrescribeSvcRequest {
        
        private string dDIDField;
        
        private string rxIDField;
        
        private bool canApplyFinancialOffersField;
        
        private long eCouponDetailIDField;
        
        private string eCouponPharmacyNotesField;
        
        private AutoSendCoupons autoSendCouponsField;
        
        /// <remarks/>
        public string DDID {
            get {
                return this.dDIDField;
            }
            set {
                this.dDIDField = value;
            }
        }
        
        /// <remarks/>
        public string RxID {
            get {
                return this.rxIDField;
            }
            set {
                this.rxIDField = value;
            }
        }
        
        /// <remarks/>
        public bool CanApplyFinancialOffers {
            get {
                return this.canApplyFinancialOffersField;
            }
            set {
                this.canApplyFinancialOffersField = value;
            }
        }
        
        /// <remarks/>
        public long ECouponDetailID {
            get {
                return this.eCouponDetailIDField;
            }
            set {
                this.eCouponDetailIDField = value;
            }
        }
        
        /// <remarks/>
        public string ECouponPharmacyNotes {
            get {
                return this.eCouponPharmacyNotesField;
            }
            set {
                this.eCouponPharmacyNotesField = value;
            }
        }
        
        /// <remarks/>
        public AutoSendCoupons AutoSendCoupons {
            get {
                return this.autoSendCouponsField;
            }
            set {
                this.autoSendCouponsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public enum AutoSendCoupons {
        
        /// <remarks/>
        OFF,
        
        /// <remarks/>
        ON,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class SMSAlertsRequest : ePrescribeSvcRequest {
        
        private string toPhoneNumberField;
        
        private string messageField;
        
        /// <remarks/>
        public string ToPhoneNumber {
            get {
                return this.toPhoneNumberField;
            }
            set {
                this.toPhoneNumberField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetECouponTransactionDetailRequest : ePrescribeSvcRequest {
        
        private int includeAllRxField;
        
        private string patientIDField;
        
        private string userIDField;
        
        /// <remarks/>
        public int IncludeAllRx {
            get {
                return this.includeAllRxField;
            }
            set {
                this.includeAllRxField = value;
            }
        }
        
        /// <remarks/>
        public string PatientID {
            get {
                return this.patientIDField;
            }
            set {
                this.patientIDField = value;
            }
        }
        
        /// <remarks/>
        public string UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class ECouponRequest : ePrescribeSvcRequest {
        
        private string rxIDField;
        
        private long eCouponDetailIDField;
        
        private int eCouponDeliveryTypeIDField;
        
        private string eCouponPharmacyNotesField;
        
        private int eCouponWorkFlowTypeField;
        
        /// <remarks/>
        public string RxID {
            get {
                return this.rxIDField;
            }
            set {
                this.rxIDField = value;
            }
        }
        
        /// <remarks/>
        public long ECouponDetailID {
            get {
                return this.eCouponDetailIDField;
            }
            set {
                this.eCouponDetailIDField = value;
            }
        }
        
        /// <remarks/>
        public int ECouponDeliveryTypeID {
            get {
                return this.eCouponDeliveryTypeIDField;
            }
            set {
                this.eCouponDeliveryTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public string ECouponPharmacyNotes {
            get {
                return this.eCouponPharmacyNotesField;
            }
            set {
                this.eCouponPharmacyNotesField = value;
            }
        }
        
        /// <remarks/>
        public int ECouponWorkFlowType {
            get {
                return this.eCouponWorkFlowTypeField;
            }
            set {
                this.eCouponWorkFlowTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class LoadMedicationRequest : ePrescribeSvcRequest {
        
        private string nameField;
        
        private ConnectionStringPointer dbIDField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public ConnectionStringPointer dbID {
            get {
                return this.dbIDField;
            }
            set {
                this.dbIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetIdProofingUrlRequest : ePrescribeSvcRequest {
        
        private ShieldTenantIDProofingModel idProofingModeField;
        
        /// <remarks/>
        public ShieldTenantIDProofingModel IdProofingMode {
            get {
                return this.idProofingModeField;
            }
            set {
                this.idProofingModeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetShieldUserTraitsRequest : ePrescribeSvcRequest {
        
        private ShieldTraitName[] shieldTraitsField;
        
        private System.Guid shieldUserObjectIdField;
        
        private string appInstanceIdField;
        
        private string shieldUserNameField;
        
        private string securityTokenField;
        
        private string identityNameValueField;
        
        /// <remarks/>
        public ShieldTraitName[] ShieldTraits {
            get {
                return this.shieldTraitsField;
            }
            set {
                this.shieldTraitsField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid ShieldUserObjectId {
            get {
                return this.shieldUserObjectIdField;
            }
            set {
                this.shieldUserObjectIdField = value;
            }
        }
        
        /// <remarks/>
        public string AppInstanceId {
            get {
                return this.appInstanceIdField;
            }
            set {
                this.appInstanceIdField = value;
            }
        }
        
        /// <remarks/>
        public string ShieldUserName {
            get {
                return this.shieldUserNameField;
            }
            set {
                this.shieldUserNameField = value;
            }
        }
        
        /// <remarks/>
        public string SecurityToken {
            get {
                return this.securityTokenField;
            }
            set {
                this.securityTokenField = value;
            }
        }
        
        /// <remarks/>
        public string IdentityNameValue {
            get {
                return this.identityNameValueField;
            }
            set {
                this.identityNameValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class SetProviderTraitsRequest : ePrescribeSvcRequest {
        
        private ShieldTraitName shieldTraitNameField;
        
        private ShieldTraitValue shieldTraitValueField;
        
        private UserNameWithUserGuidPair[] usersField;
        
        private string appInstanceIdField;
        
        private string identitySecurityTokenField;
        
        private string otpTokenField;
        
        private string securityTokenField;
        
        private bool isInstitutionalField;
        
        /// <remarks/>
        public ShieldTraitName ShieldTraitName {
            get {
                return this.shieldTraitNameField;
            }
            set {
                this.shieldTraitNameField = value;
            }
        }
        
        /// <remarks/>
        public ShieldTraitValue ShieldTraitValue {
            get {
                return this.shieldTraitValueField;
            }
            set {
                this.shieldTraitValueField = value;
            }
        }
        
        /// <remarks/>
        public UserNameWithUserGuidPair[] Users {
            get {
                return this.usersField;
            }
            set {
                this.usersField = value;
            }
        }
        
        /// <remarks/>
        public string AppInstanceId {
            get {
                return this.appInstanceIdField;
            }
            set {
                this.appInstanceIdField = value;
            }
        }
        
        /// <remarks/>
        public string IdentitySecurityToken {
            get {
                return this.identitySecurityTokenField;
            }
            set {
                this.identitySecurityTokenField = value;
            }
        }
        
        /// <remarks/>
        public string OtpToken {
            get {
                return this.otpTokenField;
            }
            set {
                this.otpTokenField = value;
            }
        }
        
        /// <remarks/>
        public string SecurityToken {
            get {
                return this.securityTokenField;
            }
            set {
                this.securityTokenField = value;
            }
        }
        
        /// <remarks/>
        public bool IsInstitutional {
            get {
                return this.isInstitutionalField;
            }
            set {
                this.isInstitutionalField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class SetShieldUserTraitRequest : ePrescribeSvcRequest {
        
        private ShieldTraitName traitNameField;
        
        private ShieldTraitValue traitValueField;
        
        private System.Guid shieldUserObjectIdField;
        
        private string appInstanceIdField;
        
        private string securityTokenField;
        
        private string shieldUserNameField;
        
        private string otpTokenField;
        
        private string identityTokenField;
        
        private string userGuidOfUserGettingTraitField;
        
        private bool isInstitutionalField;
        
        /// <remarks/>
        public ShieldTraitName TraitName {
            get {
                return this.traitNameField;
            }
            set {
                this.traitNameField = value;
            }
        }
        
        /// <remarks/>
        public ShieldTraitValue TraitValue {
            get {
                return this.traitValueField;
            }
            set {
                this.traitValueField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid ShieldUserObjectId {
            get {
                return this.shieldUserObjectIdField;
            }
            set {
                this.shieldUserObjectIdField = value;
            }
        }
        
        /// <remarks/>
        public string AppInstanceId {
            get {
                return this.appInstanceIdField;
            }
            set {
                this.appInstanceIdField = value;
            }
        }
        
        /// <remarks/>
        public string SecurityToken {
            get {
                return this.securityTokenField;
            }
            set {
                this.securityTokenField = value;
            }
        }
        
        /// <remarks/>
        public string ShieldUserName {
            get {
                return this.shieldUserNameField;
            }
            set {
                this.shieldUserNameField = value;
            }
        }
        
        /// <remarks/>
        public string OtpToken {
            get {
                return this.otpTokenField;
            }
            set {
                this.otpTokenField = value;
            }
        }
        
        /// <remarks/>
        public string IdentityToken {
            get {
                return this.identityTokenField;
            }
            set {
                this.identityTokenField = value;
            }
        }
        
        /// <remarks/>
        public string UserGuidOfUserGettingTrait {
            get {
                return this.userGuidOfUserGettingTraitField;
            }
            set {
                this.userGuidOfUserGettingTraitField = value;
            }
        }
        
        /// <remarks/>
        public bool IsInstitutional {
            get {
                return this.isInstitutionalField;
            }
            set {
                this.isInstitutionalField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CreateUserRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetUserSecretQuestionsRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SaveSecretQuestionAnswersRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ChangePasswordRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetNewPasswordRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateUserRequest))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class AccountManagementServiceRequestBase : ePrescribeSvcRequest {
        
        private string externalTenantIDField;
        
        private string sAMLTokenStringField;
        
        /// <remarks/>
        public string ExternalTenantID {
            get {
                return this.externalTenantIDField;
            }
            set {
                this.externalTenantIDField = value;
            }
        }
        
        /// <remarks/>
        public string SAMLTokenString {
            get {
                return this.sAMLTokenStringField;
            }
            set {
                this.sAMLTokenStringField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class CreateUserRequest : AccountManagementServiceRequestBase {
        
        private string auditUserIDField;
        
        private RxUser rxUserField;
        
        private ApplicationEnum applicationField;
        
        private int shieldInternalAppIDField;
        
        private int shieldInternalEnvironmentIDField;
        
        private string eprescribeExternalAppInstanceIDField;
        
        private int shieldInternalUserProfileIDField;
        
        private bool isAppIdentityEnabledField;
        
        private string forcePasswordChangeField;
        
        private string passwordField;
        
        private bool lockedOutField;
        
        private string partnerGUIDField;
        
        /// <remarks/>
        public string AuditUserID {
            get {
                return this.auditUserIDField;
            }
            set {
                this.auditUserIDField = value;
            }
        }
        
        /// <remarks/>
        public RxUser RxUser {
            get {
                return this.rxUserField;
            }
            set {
                this.rxUserField = value;
            }
        }
        
        /// <remarks/>
        public ApplicationEnum Application {
            get {
                return this.applicationField;
            }
            set {
                this.applicationField = value;
            }
        }
        
        /// <remarks/>
        public int ShieldInternalAppID {
            get {
                return this.shieldInternalAppIDField;
            }
            set {
                this.shieldInternalAppIDField = value;
            }
        }
        
        /// <remarks/>
        public int ShieldInternalEnvironmentID {
            get {
                return this.shieldInternalEnvironmentIDField;
            }
            set {
                this.shieldInternalEnvironmentIDField = value;
            }
        }
        
        /// <remarks/>
        public string EprescribeExternalAppInstanceID {
            get {
                return this.eprescribeExternalAppInstanceIDField;
            }
            set {
                this.eprescribeExternalAppInstanceIDField = value;
            }
        }
        
        /// <remarks/>
        public int ShieldInternalUserProfileID {
            get {
                return this.shieldInternalUserProfileIDField;
            }
            set {
                this.shieldInternalUserProfileIDField = value;
            }
        }
        
        /// <remarks/>
        public bool IsAppIdentityEnabled {
            get {
                return this.isAppIdentityEnabledField;
            }
            set {
                this.isAppIdentityEnabledField = value;
            }
        }
        
        /// <remarks/>
        public string ForcePasswordChange {
            get {
                return this.forcePasswordChangeField;
            }
            set {
                this.forcePasswordChangeField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public bool LockedOut {
            get {
                return this.lockedOutField;
            }
            set {
                this.lockedOutField = value;
            }
        }
        
        /// <remarks/>
        public string PartnerGUID {
            get {
                return this.partnerGUIDField;
            }
            set {
                this.partnerGUIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetUserSecretQuestionsRequest : AccountManagementServiceRequestBase {
        
        private string shieldUsernameField;
        
        /// <remarks/>
        public string ShieldUsername {
            get {
                return this.shieldUsernameField;
            }
            set {
                this.shieldUsernameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class SaveSecretQuestionAnswersRequest : AccountManagementServiceRequestBase {
        
        private string userNameField;
        
        private string passwordField;
        
        private SecretAnswer[] secretAnswersField;
        
        private string iPAddressField;
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public SecretAnswer[] SecretAnswers {
            get {
                return this.secretAnswersField;
            }
            set {
                this.secretAnswersField = value;
            }
        }
        
        /// <remarks/>
        public string IPAddress {
            get {
                return this.iPAddressField;
            }
            set {
                this.iPAddressField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class ChangePasswordRequest : AccountManagementServiceRequestBase {
        
        private string userNameField;
        
        private string oldPasswordField;
        
        private string newPasswordField;
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string OldPassword {
            get {
                return this.oldPasswordField;
            }
            set {
                this.oldPasswordField = value;
            }
        }
        
        /// <remarks/>
        public string NewPassword {
            get {
                return this.newPasswordField;
            }
            set {
                this.newPasswordField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetNewPasswordRequest : AccountManagementServiceRequestBase {
        
        private int tenantIDField;
        
        private int shieldUserProfileIDField;
        
        /// <remarks/>
        public int TenantID {
            get {
                return this.tenantIDField;
            }
            set {
                this.tenantIDField = value;
            }
        }
        
        /// <remarks/>
        public int ShieldUserProfileID {
            get {
                return this.shieldUserProfileIDField;
            }
            set {
                this.shieldUserProfileIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class UpdateUserRequest : AccountManagementServiceRequestBase {
        
        private string auditUserIDField;
        
        private RxUser rxUserField;
        
        private ApplicationEnum applicationField;
        
        private int shieldInternalAppIDField;
        
        private int shieldInternalEnvironmentIDField;
        
        private int shieldInternalAppInstanceIDField;
        
        private string eprescribeExternalAppInstanceIDField;
        
        private int shieldInternalUserProfileIDField;
        
        private string shieldLoginIDField;
        
        private string shieldADUserIDField;
        
        private string forcePasswordChangeField;
        
        private string passwordField;
        
        private bool lockedOutField;
        
        private bool isLegacyRegistrationFormatField;
        
        private string partnerGUIDField;
        
        private bool isDEALicenseUpdatedField;
        
        private bool isStateLicenseUpdatedField;
        
        /// <remarks/>
        public string AuditUserID {
            get {
                return this.auditUserIDField;
            }
            set {
                this.auditUserIDField = value;
            }
        }
        
        /// <remarks/>
        public RxUser RxUser {
            get {
                return this.rxUserField;
            }
            set {
                this.rxUserField = value;
            }
        }
        
        /// <remarks/>
        public ApplicationEnum Application {
            get {
                return this.applicationField;
            }
            set {
                this.applicationField = value;
            }
        }
        
        /// <remarks/>
        public int ShieldInternalAppID {
            get {
                return this.shieldInternalAppIDField;
            }
            set {
                this.shieldInternalAppIDField = value;
            }
        }
        
        /// <remarks/>
        public int ShieldInternalEnvironmentID {
            get {
                return this.shieldInternalEnvironmentIDField;
            }
            set {
                this.shieldInternalEnvironmentIDField = value;
            }
        }
        
        /// <remarks/>
        public int ShieldInternalAppInstanceID {
            get {
                return this.shieldInternalAppInstanceIDField;
            }
            set {
                this.shieldInternalAppInstanceIDField = value;
            }
        }
        
        /// <remarks/>
        public string EprescribeExternalAppInstanceID {
            get {
                return this.eprescribeExternalAppInstanceIDField;
            }
            set {
                this.eprescribeExternalAppInstanceIDField = value;
            }
        }
        
        /// <remarks/>
        public int ShieldInternalUserProfileID {
            get {
                return this.shieldInternalUserProfileIDField;
            }
            set {
                this.shieldInternalUserProfileIDField = value;
            }
        }
        
        /// <remarks/>
        public string ShieldLoginID {
            get {
                return this.shieldLoginIDField;
            }
            set {
                this.shieldLoginIDField = value;
            }
        }
        
        /// <remarks/>
        public string ShieldADUserID {
            get {
                return this.shieldADUserIDField;
            }
            set {
                this.shieldADUserIDField = value;
            }
        }
        
        /// <remarks/>
        public string ForcePasswordChange {
            get {
                return this.forcePasswordChangeField;
            }
            set {
                this.forcePasswordChangeField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public bool LockedOut {
            get {
                return this.lockedOutField;
            }
            set {
                this.lockedOutField = value;
            }
        }
        
        /// <remarks/>
        public bool IsLegacyRegistrationFormat {
            get {
                return this.isLegacyRegistrationFormatField;
            }
            set {
                this.isLegacyRegistrationFormatField = value;
            }
        }
        
        /// <remarks/>
        public string PartnerGUID {
            get {
                return this.partnerGUIDField;
            }
            set {
                this.partnerGUIDField = value;
            }
        }
        
        /// <remarks/>
        public bool IsDEALicenseUpdated {
            get {
                return this.isDEALicenseUpdatedField;
            }
            set {
                this.isDEALicenseUpdatedField = value;
            }
        }
        
        /// <remarks/>
        public bool IsStateLicenseUpdated {
            get {
                return this.isStateLicenseUpdatedField;
            }
            set {
                this.isStateLicenseUpdatedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetDenialReasonsRequest : ePrescribeSvcRequest {
        
        private PrescriptionTaskType taskTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="TaskType")]
        public PrescriptionTaskType TaskType {
            get {
                return this.taskTypeField;
            }
            set {
                this.taskTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="TaskType")]
    public enum PrescriptionTaskType {
        
        /// <remarks/>
        APPROVAL_REQUEST,
        
        /// <remarks/>
        REJECTION_NOTIFICATION,
        
        /// <remarks/>
        RENEWAL_REQUEST,
        
        /// <remarks/>
        SCRIPT_ERROR,
        
        /// <remarks/>
        SEND_TO_ADMIN,
        
        /// <remarks/>
        REFREQ,
        
        /// <remarks/>
        EPA,
        
        /// <remarks/>
        RXCHG,
        
        /// <remarks/>
        RXCHG_PRIORAUTH,
        
        /// <remarks/>
        SPECIALTY_MED_ASSIST_RX,
        
        /// <remarks/>
        DEFAULT,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetiAssistSamlTokenRequest : ePrescribeSvcRequest {
        
        private string identityTokenField;
        
        private string shieldTenantIdField;
        
        /// <remarks/>
        public string IdentityToken {
            get {
                return this.identityTokenField;
            }
            set {
                this.identityTokenField = value;
            }
        }
        
        /// <remarks/>
        public string ShieldTenantId {
            get {
                return this.shieldTenantIdField;
            }
            set {
                this.shieldTenantIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class ILearnRequest : ePrescribeSvcRequest {
        
        private string userNameField;
        
        private string clientIdField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string ClientId {
            get {
                return this.clientIdField;
            }
            set {
                this.clientIdField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class InsertAllUsersInLicenseForHubEnrollmentRequest : ePrescribeSvcRequest {
        
        private int taskTypeField;
        
        /// <remarks/>
        public int TaskType {
            get {
                return this.taskTypeField;
            }
            set {
                this.taskTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class TeaserAdRequest : ePrescribeSvcRequest {
        
        private System.DateTime currentDateField;
        
        private string practiceStateField;
        
        private int pricingStructureField;
        
        private string licenseIDField;
        
        private string enterpriseClientIDField;
        
        private bool isFirstBusinessDayField;
        
        private bool isAdminField;
        
        /// <remarks/>
        public System.DateTime CurrentDate {
            get {
                return this.currentDateField;
            }
            set {
                this.currentDateField = value;
            }
        }
        
        /// <remarks/>
        public string PracticeState {
            get {
                return this.practiceStateField;
            }
            set {
                this.practiceStateField = value;
            }
        }
        
        /// <remarks/>
        public int PricingStructure {
            get {
                return this.pricingStructureField;
            }
            set {
                this.pricingStructureField = value;
            }
        }
        
        /// <remarks/>
        public string LicenseID {
            get {
                return this.licenseIDField;
            }
            set {
                this.licenseIDField = value;
            }
        }
        
        /// <remarks/>
        public string EnterpriseClientID {
            get {
                return this.enterpriseClientIDField;
            }
            set {
                this.enterpriseClientIDField = value;
            }
        }
        
        /// <remarks/>
        public bool IsFirstBusinessDay {
            get {
                return this.isFirstBusinessDayField;
            }
            set {
                this.isFirstBusinessDayField = value;
            }
        }
        
        /// <remarks/>
        public bool IsAdmin {
            get {
                return this.isAdminField;
            }
            set {
                this.isAdminField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class LinkExistingShieldUserToeRxUserRequest : ePrescribeSvcRequest {
        
        private string activationCodeField;
        
        private string shieldUserNameField;
        
        private string passwordField;
        
        private string ipAddressField;
        
        /// <remarks/>
        public string ActivationCode {
            get {
                return this.activationCodeField;
            }
            set {
                this.activationCodeField = value;
            }
        }
        
        /// <remarks/>
        public string ShieldUserName {
            get {
                return this.shieldUserNameField;
            }
            set {
                this.shieldUserNameField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string IpAddress {
            get {
                return this.ipAddressField;
            }
            set {
                this.ipAddressField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class ActivateAndUpdateUserRequest : ePrescribeSvcRequest {
        
        private string emailAddressField;
        
        private string firstNameField;
        
        private string middleNameField;
        
        private string lastNameField;
        
        private string passwordField;
        
        private string userNameField;
        
        private RecoveryAnswerDto[] secretQuestionsField;
        
        private string activationCodeField;
        
        /// <remarks/>
        public string EmailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string MiddleName {
            get {
                return this.middleNameField;
            }
            set {
                this.middleNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public RecoveryAnswerDto[] SecretQuestions {
            get {
                return this.secretQuestionsField;
            }
            set {
                this.secretQuestionsField = value;
            }
        }
        
        /// <remarks/>
        public string ActivationCode {
            get {
                return this.activationCodeField;
            }
            set {
                this.activationCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetShieldAuthenicateOTPRequest : ePrescribeSvcRequest {
        
        private string identityNameField;
        
        private string transactionIdField;
        
        private string deviceTypeField;
        
        private string formIdField;
        
        private string subTypeField;
        
        private string oTPField;
        
        private string userNameField;
        
        private string passwordField;
        
        private string iPAddressField;
        
        private string appInstanceIdField;
        
        private System.Guid correlationIdField;
        
        /// <remarks/>
        public string IdentityName {
            get {
                return this.identityNameField;
            }
            set {
                this.identityNameField = value;
            }
        }
        
        /// <remarks/>
        public string TransactionId {
            get {
                return this.transactionIdField;
            }
            set {
                this.transactionIdField = value;
            }
        }
        
        /// <remarks/>
        public string DeviceType {
            get {
                return this.deviceTypeField;
            }
            set {
                this.deviceTypeField = value;
            }
        }
        
        /// <remarks/>
        public string FormId {
            get {
                return this.formIdField;
            }
            set {
                this.formIdField = value;
            }
        }
        
        /// <remarks/>
        public string SubType {
            get {
                return this.subTypeField;
            }
            set {
                this.subTypeField = value;
            }
        }
        
        /// <remarks/>
        public string OTP {
            get {
                return this.oTPField;
            }
            set {
                this.oTPField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string IPAddress {
            get {
                return this.iPAddressField;
            }
            set {
                this.iPAddressField = value;
            }
        }
        
        /// <remarks/>
        public string AppInstanceId {
            get {
                return this.appInstanceIdField;
            }
            set {
                this.appInstanceIdField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid CorrelationId {
            get {
                return this.correlationIdField;
            }
            set {
                this.correlationIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetShieldSendOTPRequest : ePrescribeSvcRequest {
        
        private string securityTokenField;
        
        private string appInstanceIdField;
        
        private string transactionIdField;
        
        private string shieldUserNameField;
        
        private string iPAddressField;
        
        private bool allowsRequestField;
        
        private string descriptionField;
        
        private string deviceTypeField;
        
        private string displayNameField;
        
        private string formIdField;
        
        private string subTypeField;
        
        private string typeField;
        
        /// <remarks/>
        public string SecurityToken {
            get {
                return this.securityTokenField;
            }
            set {
                this.securityTokenField = value;
            }
        }
        
        /// <remarks/>
        public string AppInstanceId {
            get {
                return this.appInstanceIdField;
            }
            set {
                this.appInstanceIdField = value;
            }
        }
        
        /// <remarks/>
        public string TransactionId {
            get {
                return this.transactionIdField;
            }
            set {
                this.transactionIdField = value;
            }
        }
        
        /// <remarks/>
        public string ShieldUserName {
            get {
                return this.shieldUserNameField;
            }
            set {
                this.shieldUserNameField = value;
            }
        }
        
        /// <remarks/>
        public string IPAddress {
            get {
                return this.iPAddressField;
            }
            set {
                this.iPAddressField = value;
            }
        }
        
        /// <remarks/>
        public bool AllowsRequest {
            get {
                return this.allowsRequestField;
            }
            set {
                this.allowsRequestField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string DeviceType {
            get {
                return this.deviceTypeField;
            }
            set {
                this.deviceTypeField = value;
            }
        }
        
        /// <remarks/>
        public string DisplayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
            }
        }
        
        /// <remarks/>
        public string FormId {
            get {
                return this.formIdField;
            }
            set {
                this.formIdField = value;
            }
        }
        
        /// <remarks/>
        public string SubType {
            get {
                return this.subTypeField;
            }
            set {
                this.subTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetShieldOTPFormsRequest : ePrescribeSvcRequest {
        
        private string securityTokenField;
        
        private string appInstanceIdField;
        
        private string iPAddressField;
        
        private string userNameField;
        
        /// <remarks/>
        public string SecurityToken {
            get {
                return this.securityTokenField;
            }
            set {
                this.securityTokenField = value;
            }
        }
        
        /// <remarks/>
        public string AppInstanceId {
            get {
                return this.appInstanceIdField;
            }
            set {
                this.appInstanceIdField = value;
            }
        }
        
        /// <remarks/>
        public string IPAddress {
            get {
                return this.iPAddressField;
            }
            set {
                this.iPAddressField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetAllProvidersAndTraitsForLicenseRequest : ePrescribeSvcRequest {
        
        private string appInstanceIdField;
        
        private string securityTokenField;
        
        private string deaNumberField;
        
        /// <remarks/>
        public string AppInstanceId {
            get {
                return this.appInstanceIdField;
            }
            set {
                this.appInstanceIdField = value;
            }
        }
        
        /// <remarks/>
        public string SecurityToken {
            get {
                return this.securityTokenField;
            }
            set {
                this.securityTokenField = value;
            }
        }
        
        /// <remarks/>
        public string DeaNumber {
            get {
                return this.deaNumberField;
            }
            set {
                this.deaNumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class DiagnosisSearchRequest : ePrescribeSvcRequest {
        
        private string searchTextField;
        
        /// <remarks/>
        public string SearchText {
            get {
                return this.searchTextField;
            }
            set {
                this.searchTextField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class SavePatientCCDRequest : ePrescribeSvcRequest {
        
        private string patientGUIDField;
        
        private string licenseIDField;
        
        private string cCDField;
        
        /// <remarks/>
        public string PatientGUID {
            get {
                return this.patientGUIDField;
            }
            set {
                this.patientGUIDField = value;
            }
        }
        
        /// <remarks/>
        public string LicenseID {
            get {
                return this.licenseIDField;
            }
            set {
                this.licenseIDField = value;
            }
        }
        
        /// <remarks/>
        public string CCD {
            get {
                return this.cCDField;
            }
            set {
                this.cCDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class SavePatientProblemRequest : ePrescribeSvcRequest {
        
        private System.Guid patientGuidField;
        
        private System.Guid licenseGuidField;
        
        private string createdByField;
        
        private string snowMedCodeField;
        
        private string problemReportedDateTimeField;
        
        private PatientProblemStatus statusField;
        
        private string dxResolutionDateField;
        
        /// <remarks/>
        public System.Guid PatientGuid {
            get {
                return this.patientGuidField;
            }
            set {
                this.patientGuidField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid LicenseGuid {
            get {
                return this.licenseGuidField;
            }
            set {
                this.licenseGuidField = value;
            }
        }
        
        /// <remarks/>
        public string CreatedBy {
            get {
                return this.createdByField;
            }
            set {
                this.createdByField = value;
            }
        }
        
        /// <remarks/>
        public string SnowMedCode {
            get {
                return this.snowMedCodeField;
            }
            set {
                this.snowMedCodeField = value;
            }
        }
        
        /// <remarks/>
        public string ProblemReportedDateTime {
            get {
                return this.problemReportedDateTimeField;
            }
            set {
                this.problemReportedDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public PatientProblemStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string DxResolutionDate {
            get {
                return this.dxResolutionDateField;
            }
            set {
                this.dxResolutionDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class UpdatePatientProblemRequest : ePrescribeSvcRequest {
        
        private System.Guid patientGuidField;
        
        private System.Guid licenseGuidField;
        
        private string patientProblemIDField;
        
        private PatientProblemStatus problemStatusField;
        
        private string dxResolutionDateField;
        
        private string updatedByIDField;
        
        /// <remarks/>
        public System.Guid PatientGuid {
            get {
                return this.patientGuidField;
            }
            set {
                this.patientGuidField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid LicenseGuid {
            get {
                return this.licenseGuidField;
            }
            set {
                this.licenseGuidField = value;
            }
        }
        
        /// <remarks/>
        public string PatientProblemID {
            get {
                return this.patientProblemIDField;
            }
            set {
                this.patientProblemIDField = value;
            }
        }
        
        /// <remarks/>
        public PatientProblemStatus ProblemStatus {
            get {
                return this.problemStatusField;
            }
            set {
                this.problemStatusField = value;
            }
        }
        
        /// <remarks/>
        public string DxResolutionDate {
            get {
                return this.dxResolutionDateField;
            }
            set {
                this.dxResolutionDateField = value;
            }
        }
        
        /// <remarks/>
        public string UpdatedByID {
            get {
                return this.updatedByIDField;
            }
            set {
                this.updatedByIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetOfficeLocationRequest : ePrescribeSvcRequest {
        
        private string partnerIDField;
        
        private string licenseIDField;
        
        /// <remarks/>
        public string PartnerID {
            get {
                return this.partnerIDField;
            }
            set {
                this.partnerIDField = value;
            }
        }
        
        /// <remarks/>
        public string LicenseID {
            get {
                return this.licenseIDField;
            }
            set {
                this.licenseIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class UpdateOfficeLocationRequest : ePrescribeSvcRequest {
        
        private string licenseIDField;
        
        private string partnerIDField;
        
        private Errors[] errorsField;
        
        private int officeIDField;
        
        private string officeNameField;
        
        private string address1Field;
        
        private string address2Field;
        
        private string cityField;
        
        private string stateField;
        
        private string zipCodeField;
        
        private string phoneAreaCodeField;
        
        private string phoneNumberField;
        
        private string faxAreaCodeField;
        
        private string faxNumberField;
        
        private string timeZoneField;
        
        private bool allowAdminField;
        
        private Preferences[] preferencesField;
        
        private bool activeField;
        
        /// <remarks/>
        public string LicenseID {
            get {
                return this.licenseIDField;
            }
            set {
                this.licenseIDField = value;
            }
        }
        
        /// <remarks/>
        public string PartnerID {
            get {
                return this.partnerIDField;
            }
            set {
                this.partnerIDField = value;
            }
        }
        
        /// <remarks/>
        public Errors[] Errors {
            get {
                return this.errorsField;
            }
            set {
                this.errorsField = value;
            }
        }
        
        /// <remarks/>
        public int OfficeID {
            get {
                return this.officeIDField;
            }
            set {
                this.officeIDField = value;
            }
        }
        
        /// <remarks/>
        public string OfficeName {
            get {
                return this.officeNameField;
            }
            set {
                this.officeNameField = value;
            }
        }
        
        /// <remarks/>
        public string Address1 {
            get {
                return this.address1Field;
            }
            set {
                this.address1Field = value;
            }
        }
        
        /// <remarks/>
        public string Address2 {
            get {
                return this.address2Field;
            }
            set {
                this.address2Field = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string ZipCode {
            get {
                return this.zipCodeField;
            }
            set {
                this.zipCodeField = value;
            }
        }
        
        /// <remarks/>
        public string PhoneAreaCode {
            get {
                return this.phoneAreaCodeField;
            }
            set {
                this.phoneAreaCodeField = value;
            }
        }
        
        /// <remarks/>
        public string PhoneNumber {
            get {
                return this.phoneNumberField;
            }
            set {
                this.phoneNumberField = value;
            }
        }
        
        /// <remarks/>
        public string FaxAreaCode {
            get {
                return this.faxAreaCodeField;
            }
            set {
                this.faxAreaCodeField = value;
            }
        }
        
        /// <remarks/>
        public string FaxNumber {
            get {
                return this.faxNumberField;
            }
            set {
                this.faxNumberField = value;
            }
        }
        
        /// <remarks/>
        public string TimeZone {
            get {
                return this.timeZoneField;
            }
            set {
                this.timeZoneField = value;
            }
        }
        
        /// <remarks/>
        public bool AllowAdmin {
            get {
                return this.allowAdminField;
            }
            set {
                this.allowAdminField = value;
            }
        }
        
        /// <remarks/>
        public Preferences[] Preferences {
            get {
                return this.preferencesField;
            }
            set {
                this.preferencesField = value;
            }
        }
        
        /// <remarks/>
        public bool Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class AddOfficeLocationRequest : ePrescribeSvcRequest {
        
        private string licenseIDField;
        
        private string partnerIDField;
        
        private string officeNameField;
        
        private string address1Field;
        
        private string address2Field;
        
        private string cityField;
        
        private string stateField;
        
        private string zipCodeField;
        
        private string phoneAreaCodeField;
        
        private string phoneNumberField;
        
        private string faxAreaCodeField;
        
        private string faxNumberField;
        
        private string timeZoneField;
        
        private bool allowAdminField;
        
        private Preferences[] preferencesField;
        
        /// <remarks/>
        public string LicenseID {
            get {
                return this.licenseIDField;
            }
            set {
                this.licenseIDField = value;
            }
        }
        
        /// <remarks/>
        public string PartnerID {
            get {
                return this.partnerIDField;
            }
            set {
                this.partnerIDField = value;
            }
        }
        
        /// <remarks/>
        public string OfficeName {
            get {
                return this.officeNameField;
            }
            set {
                this.officeNameField = value;
            }
        }
        
        /// <remarks/>
        public string Address1 {
            get {
                return this.address1Field;
            }
            set {
                this.address1Field = value;
            }
        }
        
        /// <remarks/>
        public string Address2 {
            get {
                return this.address2Field;
            }
            set {
                this.address2Field = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string ZipCode {
            get {
                return this.zipCodeField;
            }
            set {
                this.zipCodeField = value;
            }
        }
        
        /// <remarks/>
        public string PhoneAreaCode {
            get {
                return this.phoneAreaCodeField;
            }
            set {
                this.phoneAreaCodeField = value;
            }
        }
        
        /// <remarks/>
        public string PhoneNumber {
            get {
                return this.phoneNumberField;
            }
            set {
                this.phoneNumberField = value;
            }
        }
        
        /// <remarks/>
        public string FaxAreaCode {
            get {
                return this.faxAreaCodeField;
            }
            set {
                this.faxAreaCodeField = value;
            }
        }
        
        /// <remarks/>
        public string FaxNumber {
            get {
                return this.faxNumberField;
            }
            set {
                this.faxNumberField = value;
            }
        }
        
        /// <remarks/>
        public string TimeZone {
            get {
                return this.timeZoneField;
            }
            set {
                this.timeZoneField = value;
            }
        }
        
        /// <remarks/>
        public bool AllowAdmin {
            get {
                return this.allowAdminField;
            }
            set {
                this.allowAdminField = value;
            }
        }
        
        /// <remarks/>
        public Preferences[] Preferences {
            get {
                return this.preferencesField;
            }
            set {
                this.preferencesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetRxInfoHtmlContentRequest : ePrescribeSvcRequest {
        
        private string rxInfoDetailIdField;
        
        /// <remarks/>
        public string RxInfoDetailId {
            get {
                return this.rxInfoDetailIdField;
            }
            set {
                this.rxInfoDetailIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetRxInfoDetailsLiteByRxIDRequest : ePrescribeSvcRequest {
        
        private string rxIdField;
        
        /// <remarks/>
        public string RxId {
            get {
                return this.rxIdField;
            }
            set {
                this.rxIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class DXCSyncWhitelistRequest : ePrescribeSvcRequest {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class DXCConfirmOfferRequest : ePrescribeSvcRequest {
        
        private int activityIDField;
        
        private bool confirmOfferField;
        
        private string patientEmailField;
        
        private string patientMobilePhoneField;
        
        private System.DateTime timeStampField;
        
        /// <remarks/>
        public int ActivityID {
            get {
                return this.activityIDField;
            }
            set {
                this.activityIDField = value;
            }
        }
        
        /// <remarks/>
        public bool ConfirmOffer {
            get {
                return this.confirmOfferField;
            }
            set {
                this.confirmOfferField = value;
            }
        }
        
        /// <remarks/>
        public string PatientEmail {
            get {
                return this.patientEmailField;
            }
            set {
                this.patientEmailField = value;
            }
        }
        
        /// <remarks/>
        public string PatientMobilePhone {
            get {
                return this.patientMobilePhoneField;
            }
            set {
                this.patientMobilePhoneField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime TimeStamp {
            get {
                return this.timeStampField;
            }
            set {
                this.timeStampField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class DXCConfirmOfferCombinedRequest : ePrescribeSvcRequest {
        
        private DXCRecommendationContextRequest dXCRecommendationContextRequestField;
        
        private DXCConfirmOfferRequest dXCConfirmOfferRequestField;
        
        /// <remarks/>
        public DXCRecommendationContextRequest DXCRecommendationContextRequest {
            get {
                return this.dXCRecommendationContextRequestField;
            }
            set {
                this.dXCRecommendationContextRequestField = value;
            }
        }
        
        /// <remarks/>
        public DXCConfirmOfferRequest DXCConfirmOfferRequest {
            get {
                return this.dXCConfirmOfferRequestField;
            }
            set {
                this.dXCConfirmOfferRequestField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class DXCRecommendationContextRequest : ePrescribeSvcRequest {
        
        private string licenseIDField;
        
        private System.Guid userIDField;
        
        private System.DateTime patientDOBField;
        
        private string patientFirstNameField;
        
        private string patientLastNameField;
        
        private string patientGenderField;
        
        private string patientIDField;
        
        private string patientMRNField;
        
        private string patientStreetAddress1Field;
        
        private string patientStreetAddress2Field;
        
        private string patientCityField;
        
        private string patientStateField;
        
        private string patientPostalCodeField;
        
        private string patientTelephoneField;
        
        private string patientMobileField;
        
        private string patientEmailField;
        
        private string providerFirstNameField;
        
        private string providerLastNameField;
        
        private string providerDegreeField;
        
        private string providerIDField;
        
        private string dEANumberField;
        
        private string organizationNameField;
        
        private string organizationStreetAddress1Field;
        
        private string organizationStreetAddress2Field;
        
        private string organizationCityField;
        
        private string organizationStateField;
        
        private string organizationPostalCodeField;
        
        private string organizationPhoneField;
        
        /// <remarks/>
        public string LicenseID {
            get {
                return this.licenseIDField;
            }
            set {
                this.licenseIDField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime PatientDOB {
            get {
                return this.patientDOBField;
            }
            set {
                this.patientDOBField = value;
            }
        }
        
        /// <remarks/>
        public string PatientFirstName {
            get {
                return this.patientFirstNameField;
            }
            set {
                this.patientFirstNameField = value;
            }
        }
        
        /// <remarks/>
        public string PatientLastName {
            get {
                return this.patientLastNameField;
            }
            set {
                this.patientLastNameField = value;
            }
        }
        
        /// <remarks/>
        public string PatientGender {
            get {
                return this.patientGenderField;
            }
            set {
                this.patientGenderField = value;
            }
        }
        
        /// <remarks/>
        public string PatientID {
            get {
                return this.patientIDField;
            }
            set {
                this.patientIDField = value;
            }
        }
        
        /// <remarks/>
        public string PatientMRN {
            get {
                return this.patientMRNField;
            }
            set {
                this.patientMRNField = value;
            }
        }
        
        /// <remarks/>
        public string PatientStreetAddress1 {
            get {
                return this.patientStreetAddress1Field;
            }
            set {
                this.patientStreetAddress1Field = value;
            }
        }
        
        /// <remarks/>
        public string PatientStreetAddress2 {
            get {
                return this.patientStreetAddress2Field;
            }
            set {
                this.patientStreetAddress2Field = value;
            }
        }
        
        /// <remarks/>
        public string PatientCity {
            get {
                return this.patientCityField;
            }
            set {
                this.patientCityField = value;
            }
        }
        
        /// <remarks/>
        public string PatientState {
            get {
                return this.patientStateField;
            }
            set {
                this.patientStateField = value;
            }
        }
        
        /// <remarks/>
        public string PatientPostalCode {
            get {
                return this.patientPostalCodeField;
            }
            set {
                this.patientPostalCodeField = value;
            }
        }
        
        /// <remarks/>
        public string PatientTelephone {
            get {
                return this.patientTelephoneField;
            }
            set {
                this.patientTelephoneField = value;
            }
        }
        
        /// <remarks/>
        public string PatientMobile {
            get {
                return this.patientMobileField;
            }
            set {
                this.patientMobileField = value;
            }
        }
        
        /// <remarks/>
        public string PatientEmail {
            get {
                return this.patientEmailField;
            }
            set {
                this.patientEmailField = value;
            }
        }
        
        /// <remarks/>
        public string ProviderFirstName {
            get {
                return this.providerFirstNameField;
            }
            set {
                this.providerFirstNameField = value;
            }
        }
        
        /// <remarks/>
        public string ProviderLastName {
            get {
                return this.providerLastNameField;
            }
            set {
                this.providerLastNameField = value;
            }
        }
        
        /// <remarks/>
        public string ProviderDegree {
            get {
                return this.providerDegreeField;
            }
            set {
                this.providerDegreeField = value;
            }
        }
        
        /// <remarks/>
        public string ProviderID {
            get {
                return this.providerIDField;
            }
            set {
                this.providerIDField = value;
            }
        }
        
        /// <remarks/>
        public string DEANumber {
            get {
                return this.dEANumberField;
            }
            set {
                this.dEANumberField = value;
            }
        }
        
        /// <remarks/>
        public string OrganizationName {
            get {
                return this.organizationNameField;
            }
            set {
                this.organizationNameField = value;
            }
        }
        
        /// <remarks/>
        public string OrganizationStreetAddress1 {
            get {
                return this.organizationStreetAddress1Field;
            }
            set {
                this.organizationStreetAddress1Field = value;
            }
        }
        
        /// <remarks/>
        public string OrganizationStreetAddress2 {
            get {
                return this.organizationStreetAddress2Field;
            }
            set {
                this.organizationStreetAddress2Field = value;
            }
        }
        
        /// <remarks/>
        public string OrganizationCity {
            get {
                return this.organizationCityField;
            }
            set {
                this.organizationCityField = value;
            }
        }
        
        /// <remarks/>
        public string OrganizationState {
            get {
                return this.organizationStateField;
            }
            set {
                this.organizationStateField = value;
            }
        }
        
        /// <remarks/>
        public string OrganizationPostalCode {
            get {
                return this.organizationPostalCodeField;
            }
            set {
                this.organizationPostalCodeField = value;
            }
        }
        
        /// <remarks/>
        public string OrganizationPhone {
            get {
                return this.organizationPhoneField;
            }
            set {
                this.organizationPhoneField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class DXCGetStatusUpdateByActivityIDRequest : ePrescribeSvcRequest {
        
        private DXCRecommendationContextRequest dXCRecommendationContextRequestField;
        
        private int activityIDField;
        
        private System.Guid licenseIdField;
        
        /// <remarks/>
        public DXCRecommendationContextRequest DXCRecommendationContextRequest {
            get {
                return this.dXCRecommendationContextRequestField;
            }
            set {
                this.dXCRecommendationContextRequestField = value;
            }
        }
        
        /// <remarks/>
        public int ActivityID {
            get {
                return this.activityIDField;
            }
            set {
                this.activityIDField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid LicenseId {
            get {
                return this.licenseIdField;
            }
            set {
                this.licenseIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class DXCPatientQueryResultRequest : ePrescribeSvcRequest {
        
        private bool isEndDateSpecified1Field;
        
        private string medicationCodeValueField;
        
        private string brandNameField;
        
        private string prescriptionIDField;
        
        private string medicationNameField;
        
        private int quantityField;
        
        private int daysSupplyField;
        
        private bool dAWField;
        
        private string productConcentrationField;
        
        private int refillsTotalField;
        
        private string deliveryMethodField;
        
        private bool administeredField;
        
        private string frequencyField;
        
        private string doseField;
        
        private string freeSigTextField;
        
        private string pharmacyIDField;
        
        private string pharmacyNameField;
        
        private System.DateTime orderDateTimeField;
        
        private System.DateTime startDateTimeField;
        
        private string insuranceTypeField;
        
        private string insuranceInformationSourceIDField;
        
        private string insuranceCodeValueField;
        
        private string insuranceInformationSourceNameField;
        
        private string insuranceRelationToSubscriberField;
        
        private string diagnosisCodingSystemField;
        
        private string diagnosisCodingValueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("IsEndDateSpecified")]
        public bool IsEndDateSpecified1 {
            get {
                return this.isEndDateSpecified1Field;
            }
            set {
                this.isEndDateSpecified1Field = value;
            }
        }
        
        /// <remarks/>
        public string MedicationCodeValue {
            get {
                return this.medicationCodeValueField;
            }
            set {
                this.medicationCodeValueField = value;
            }
        }
        
        /// <remarks/>
        public string BrandName {
            get {
                return this.brandNameField;
            }
            set {
                this.brandNameField = value;
            }
        }
        
        /// <remarks/>
        public string PrescriptionID {
            get {
                return this.prescriptionIDField;
            }
            set {
                this.prescriptionIDField = value;
            }
        }
        
        /// <remarks/>
        public string MedicationName {
            get {
                return this.medicationNameField;
            }
            set {
                this.medicationNameField = value;
            }
        }
        
        /// <remarks/>
        public int Quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
            }
        }
        
        /// <remarks/>
        public int DaysSupply {
            get {
                return this.daysSupplyField;
            }
            set {
                this.daysSupplyField = value;
            }
        }
        
        /// <remarks/>
        public bool DAW {
            get {
                return this.dAWField;
            }
            set {
                this.dAWField = value;
            }
        }
        
        /// <remarks/>
        public string ProductConcentration {
            get {
                return this.productConcentrationField;
            }
            set {
                this.productConcentrationField = value;
            }
        }
        
        /// <remarks/>
        public int RefillsTotal {
            get {
                return this.refillsTotalField;
            }
            set {
                this.refillsTotalField = value;
            }
        }
        
        /// <remarks/>
        public string DeliveryMethod {
            get {
                return this.deliveryMethodField;
            }
            set {
                this.deliveryMethodField = value;
            }
        }
        
        /// <remarks/>
        public bool Administered {
            get {
                return this.administeredField;
            }
            set {
                this.administeredField = value;
            }
        }
        
        /// <remarks/>
        public string Frequency {
            get {
                return this.frequencyField;
            }
            set {
                this.frequencyField = value;
            }
        }
        
        /// <remarks/>
        public string Dose {
            get {
                return this.doseField;
            }
            set {
                this.doseField = value;
            }
        }
        
        /// <remarks/>
        public string FreeSigText {
            get {
                return this.freeSigTextField;
            }
            set {
                this.freeSigTextField = value;
            }
        }
        
        /// <remarks/>
        public string PharmacyID {
            get {
                return this.pharmacyIDField;
            }
            set {
                this.pharmacyIDField = value;
            }
        }
        
        /// <remarks/>
        public string PharmacyName {
            get {
                return this.pharmacyNameField;
            }
            set {
                this.pharmacyNameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime OrderDateTime {
            get {
                return this.orderDateTimeField;
            }
            set {
                this.orderDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StartDateTime {
            get {
                return this.startDateTimeField;
            }
            set {
                this.startDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public string InsuranceType {
            get {
                return this.insuranceTypeField;
            }
            set {
                this.insuranceTypeField = value;
            }
        }
        
        /// <remarks/>
        public string InsuranceInformationSourceID {
            get {
                return this.insuranceInformationSourceIDField;
            }
            set {
                this.insuranceInformationSourceIDField = value;
            }
        }
        
        /// <remarks/>
        public string InsuranceCodeValue {
            get {
                return this.insuranceCodeValueField;
            }
            set {
                this.insuranceCodeValueField = value;
            }
        }
        
        /// <remarks/>
        public string InsuranceInformationSourceName {
            get {
                return this.insuranceInformationSourceNameField;
            }
            set {
                this.insuranceInformationSourceNameField = value;
            }
        }
        
        /// <remarks/>
        public string InsuranceRelationToSubscriber {
            get {
                return this.insuranceRelationToSubscriberField;
            }
            set {
                this.insuranceRelationToSubscriberField = value;
            }
        }
        
        /// <remarks/>
        public string DiagnosisCodingSystem {
            get {
                return this.diagnosisCodingSystemField;
            }
            set {
                this.diagnosisCodingSystemField = value;
            }
        }
        
        /// <remarks/>
        public string DiagnosisCodingValue {
            get {
                return this.diagnosisCodingValueField;
            }
            set {
                this.diagnosisCodingValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class DXCProcessInitiationRequest : ePrescribeSvcRequest {
        
        private DXCRecommendationContextRequest dXCRecommendationContextRequestField;
        
        private DXCPatientQueryResultRequest dXCPatientQueryResultRequestField;
        
        /// <remarks/>
        public DXCRecommendationContextRequest DXCRecommendationContextRequest {
            get {
                return this.dXCRecommendationContextRequestField;
            }
            set {
                this.dXCRecommendationContextRequestField = value;
            }
        }
        
        /// <remarks/>
        public DXCPatientQueryResultRequest DXCPatientQueryResultRequest {
            get {
                return this.dXCPatientQueryResultRequestField;
            }
            set {
                this.dXCPatientQueryResultRequestField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetSpecialtyMedRequest : ePrescribeSvcRequest {
        
        private string licenseIdField;
        
        private string nPIForSpecialtyMedField;
        
        /// <remarks/>
        public string LicenseId {
            get {
                return this.licenseIdField;
            }
            set {
                this.licenseIdField = value;
            }
        }
        
        /// <remarks/>
        public string NPIForSpecialtyMed {
            get {
                return this.nPIForSpecialtyMedField;
            }
            set {
                this.nPIForSpecialtyMedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class RxInfoRequest : ePrescribeSvcRequest {
        
        private string rxIDField;
        
        private long rxInfoDetailsIDField;
        
        private int rxInfoDeliveryTypeIDField;
        
        /// <remarks/>
        public string rxID {
            get {
                return this.rxIDField;
            }
            set {
                this.rxIDField = value;
            }
        }
        
        /// <remarks/>
        public long rxInfoDetailsID {
            get {
                return this.rxInfoDetailsIDField;
            }
            set {
                this.rxInfoDetailsIDField = value;
            }
        }
        
        /// <remarks/>
        public int rxInfoDeliveryTypeID {
            get {
                return this.rxInfoDeliveryTypeIDField;
            }
            set {
                this.rxInfoDeliveryTypeIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetProviderProgramEnrollmentsRequest : ePrescribeSvcRequest {
        
        private string licenseIdField;
        
        private string npiField;
        
        private string programIdField;
        
        /// <remarks/>
        public string LicenseId {
            get {
                return this.licenseIdField;
            }
            set {
                this.licenseIdField = value;
            }
        }
        
        /// <remarks/>
        public string Npi {
            get {
                return this.npiField;
            }
            set {
                this.npiField = value;
            }
        }
        
        /// <remarks/>
        public string ProgramId {
            get {
                return this.programIdField;
            }
            set {
                this.programIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class UpdateUserInUMPRequest : ePrescribeSvcRequest {
        
        private string licenseIDField;
        
        private string userNameField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string emailAddressField;
        
        private bool isActiveField;
        
        private string userGUIDField;
        
        private ImportType importTypeField;
        
        private bool isAdminField;
        
        private string newNpiField;
        
        private string currentNpiField;
        
        /// <remarks/>
        public string LicenseID {
            get {
                return this.licenseIDField;
            }
            set {
                this.licenseIDField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string EmailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
            }
        }
        
        /// <remarks/>
        public bool IsActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
            }
        }
        
        /// <remarks/>
        public string UserGUID {
            get {
                return this.userGUIDField;
            }
            set {
                this.userGUIDField = value;
            }
        }
        
        /// <remarks/>
        public ImportType ImportType {
            get {
                return this.importTypeField;
            }
            set {
                this.importTypeField = value;
            }
        }
        
        /// <remarks/>
        public bool IsAdmin {
            get {
                return this.isAdminField;
            }
            set {
                this.isAdminField = value;
            }
        }
        
        /// <remarks/>
        public string NewNpi {
            get {
                return this.newNpiField;
            }
            set {
                this.newNpiField = value;
            }
        }
        
        /// <remarks/>
        public string CurrentNpi {
            get {
                return this.currentNpiField;
            }
            set {
                this.currentNpiField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public enum ImportType {
        
        /// <remarks/>
        AUTOMATED,
        
        /// <remarks/>
        BULK,
        
        /// <remarks/>
        MANUAL,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class AddUserToUMPRequest : ePrescribeSvcRequest {
        
        private string licenseIDField;
        
        private string userNameField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string emailAddressField;
        
        private string nPIField;
        
        private string userGUIDField;
        
        private ImportType importTypeField;
        
        private bool isAdminField;
        
        /// <remarks/>
        public string LicenseID {
            get {
                return this.licenseIDField;
            }
            set {
                this.licenseIDField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string EmailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
            }
        }
        
        /// <remarks/>
        public string NPI {
            get {
                return this.nPIField;
            }
            set {
                this.nPIField = value;
            }
        }
        
        /// <remarks/>
        public string UserGUID {
            get {
                return this.userGUIDField;
            }
            set {
                this.userGUIDField = value;
            }
        }
        
        /// <remarks/>
        public ImportType ImportType {
            get {
                return this.importTypeField;
            }
            set {
                this.importTypeField = value;
            }
        }
        
        /// <remarks/>
        public bool IsAdmin {
            get {
                return this.isAdminField;
            }
            set {
                this.isAdminField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class UpdateLicenseInUMPRequest : ePrescribeSvcRequest {
        
        private string licenseIDField;
        
        private string accountIDField;
        
        private string siteNameField;
        
        private string addressLine1Field;
        
        private string addressLine2Field;
        
        private string cityField;
        
        private string zipCodeField;
        
        private string stateField;
        
        private string timeZoneField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string areaCodeField;
        
        private string phoneNumberField;
        
        private string emailAddressField;
        
        private ImportType importTypeField;
        
        /// <remarks/>
        public string LicenseID {
            get {
                return this.licenseIDField;
            }
            set {
                this.licenseIDField = value;
            }
        }
        
        /// <remarks/>
        public string AccountID {
            get {
                return this.accountIDField;
            }
            set {
                this.accountIDField = value;
            }
        }
        
        /// <remarks/>
        public string SiteName {
            get {
                return this.siteNameField;
            }
            set {
                this.siteNameField = value;
            }
        }
        
        /// <remarks/>
        public string AddressLine1 {
            get {
                return this.addressLine1Field;
            }
            set {
                this.addressLine1Field = value;
            }
        }
        
        /// <remarks/>
        public string AddressLine2 {
            get {
                return this.addressLine2Field;
            }
            set {
                this.addressLine2Field = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string ZipCode {
            get {
                return this.zipCodeField;
            }
            set {
                this.zipCodeField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string TimeZone {
            get {
                return this.timeZoneField;
            }
            set {
                this.timeZoneField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string AreaCode {
            get {
                return this.areaCodeField;
            }
            set {
                this.areaCodeField = value;
            }
        }
        
        /// <remarks/>
        public string PhoneNumber {
            get {
                return this.phoneNumberField;
            }
            set {
                this.phoneNumberField = value;
            }
        }
        
        /// <remarks/>
        public string EmailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
            }
        }
        
        /// <remarks/>
        public ImportType ImportType {
            get {
                return this.importTypeField;
            }
            set {
                this.importTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class AddLicenseToUMPRequest : ePrescribeSvcRequest {
        
        private string licenseIDField;
        
        private string accountIDField;
        
        private ImportType importTypeField;
        
        /// <remarks/>
        public string LicenseID {
            get {
                return this.licenseIDField;
            }
            set {
                this.licenseIDField = value;
            }
        }
        
        /// <remarks/>
        public string AccountID {
            get {
                return this.accountIDField;
            }
            set {
                this.accountIDField = value;
            }
        }
        
        /// <remarks/>
        public ImportType ImportType {
            get {
                return this.importTypeField;
            }
            set {
                this.importTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class EPAMsgRequest : ePrescribeSvcRequest {
        
        private string ePATaskIDField;
        
        private string ePARequestIDField;
        
        private string shieldSecurityTokenField;
        
        /// <remarks/>
        public string EPATaskID {
            get {
                return this.ePATaskIDField;
            }
            set {
                this.ePATaskIDField = value;
            }
        }
        
        /// <remarks/>
        public string EPARequestID {
            get {
                return this.ePARequestIDField;
            }
            set {
                this.ePARequestIDField = value;
            }
        }
        
        /// <remarks/>
        public string ShieldSecurityToken {
            get {
                return this.shieldSecurityTokenField;
            }
            set {
                this.shieldSecurityTokenField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class ProcessHubMailboxHeaderListRequest : ePrescribeSvcRequest {
        
        private HubMessageAuditType hubAuditTypeField;
        
        private HubMailboxItem[] itemsField;
        
        /// <remarks/>
        public HubMessageAuditType HubAuditType {
            get {
                return this.hubAuditTypeField;
            }
            set {
                this.hubAuditTypeField = value;
            }
        }
        
        /// <remarks/>
        public HubMailboxItem[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public enum HubMessageAuditType {
        
        /// <remarks/>
        DRUG_HISTORY_HEADER,
        
        /// <remarks/>
        ELIG_RESPONSE_HEADER,
        
        /// <remarks/>
        EPA_RESPONSE_HEADER,
        
        /// <remarks/>
        ERX_INBOUND_HEADER,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class InsertTestPatientsRequest : ePrescribeSvcRequest {
        
        private System.Guid licenseIdField;
        
        /// <remarks/>
        public System.Guid LicenseId {
            get {
                return this.licenseIdField;
            }
            set {
                this.licenseIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class PassUserIdProofingAndNpiCheckRequest : ePrescribeSvcRequest {
        
        private string usernameField;
        
        private string address1Field;
        
        private string cityField;
        
        private string stateField;
        
        private string zipField;
        
        private string userGuidField;
        
        /// <remarks/>
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        public string Address1 {
            get {
                return this.address1Field;
            }
            set {
                this.address1Field = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string Zip {
            get {
                return this.zipField;
            }
            set {
                this.zipField = value;
            }
        }
        
        /// <remarks/>
        public string UserGuid {
            get {
                return this.userGuidField;
            }
            set {
                this.userGuidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class LogRegistrationStepRequest : ePrescribeSvcRequest {
        
        private long registrantIdField;
        
        private string registrationStepDescriptionField;
        
        private bool isSuccessfulField;
        
        private RegistrationStep registrationStepField;
        
        /// <remarks/>
        public long RegistrantId {
            get {
                return this.registrantIdField;
            }
            set {
                this.registrantIdField = value;
            }
        }
        
        /// <remarks/>
        public string RegistrationStepDescription {
            get {
                return this.registrationStepDescriptionField;
            }
            set {
                this.registrationStepDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public bool IsSuccessful {
            get {
                return this.isSuccessfulField;
            }
            set {
                this.isSuccessfulField = value;
            }
        }
        
        /// <remarks/>
        public RegistrationStep RegistrationStep {
            get {
                return this.registrationStepField;
            }
            set {
                this.registrationStepField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public enum RegistrationStep {
        
        /// <remarks/>
        CreateUser,
        
        /// <remarks/>
        UserIdentityCheck,
        
        /// <remarks/>
        CreateLicense,
        
        /// <remarks/>
        RegistrationCompleted,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetRegistrantIdProofingLoaRequest : ePrescribeSvcRequest {
        
        private long registrantIdField;
        
        private string shieldIdentityTokenField;
        
        /// <remarks/>
        public long RegistrantId {
            get {
                return this.registrantIdField;
            }
            set {
                this.registrantIdField = value;
            }
        }
        
        /// <remarks/>
        public string ShieldIdentityToken {
            get {
                return this.shieldIdentityTokenField;
            }
            set {
                this.shieldIdentityTokenField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class CompleteRegistrationRequest : ePrescribeSvcRequest {
        
        private long registrantIdField;
        
        private RegistrantPractice registrantPracticeField;
        
        private System.Guid shieldObjectIdField;
        
        private string shieldIdentityTokenField;
        
        /// <remarks/>
        public long RegistrantId {
            get {
                return this.registrantIdField;
            }
            set {
                this.registrantIdField = value;
            }
        }
        
        /// <remarks/>
        public RegistrantPractice RegistrantPractice {
            get {
                return this.registrantPracticeField;
            }
            set {
                this.registrantPracticeField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid ShieldObjectId {
            get {
                return this.shieldObjectIdField;
            }
            set {
                this.shieldObjectIdField = value;
            }
        }
        
        /// <remarks/>
        public string ShieldIdentityToken {
            get {
                return this.shieldIdentityTokenField;
            }
            set {
                this.shieldIdentityTokenField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class CreateRegistrantUserRequest : ePrescribeSvcRequest {
        
        private RegistrantUser registrantUserField;
        
        private SecretAnswer[] secretAnswersField;
        
        private string iPAddressField;
        
        private bool isLinkExistingShieldUserField;
        
        /// <remarks/>
        public RegistrantUser RegistrantUser {
            get {
                return this.registrantUserField;
            }
            set {
                this.registrantUserField = value;
            }
        }
        
        /// <remarks/>
        public SecretAnswer[] SecretAnswers {
            get {
                return this.secretAnswersField;
            }
            set {
                this.secretAnswersField = value;
            }
        }
        
        /// <remarks/>
        public string IPAddress {
            get {
                return this.iPAddressField;
            }
            set {
                this.iPAddressField = value;
            }
        }
        
        /// <remarks/>
        public bool IsLinkExistingShieldUser {
            get {
                return this.isLinkExistingShieldUserField;
            }
            set {
                this.isLinkExistingShieldUserField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class ShieldAuditEventRequest : ePrescribeSvcRequest {
        
        private bool outcomeField;
        
        private string outcomeMessageField;
        
        private string userTokenField;
        
        private System.Guid userIdField;
        
        private System.Guid rxIdField;
        
        private System.Guid correlationIdField;
        
        private string appInstanceIdField;
        
        private string externalTenantIdField;
        
        /// <remarks/>
        public bool Outcome {
            get {
                return this.outcomeField;
            }
            set {
                this.outcomeField = value;
            }
        }
        
        /// <remarks/>
        public string OutcomeMessage {
            get {
                return this.outcomeMessageField;
            }
            set {
                this.outcomeMessageField = value;
            }
        }
        
        /// <remarks/>
        public string UserToken {
            get {
                return this.userTokenField;
            }
            set {
                this.userTokenField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid RxId {
            get {
                return this.rxIdField;
            }
            set {
                this.rxIdField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid CorrelationId {
            get {
                return this.correlationIdField;
            }
            set {
                this.correlationIdField = value;
            }
        }
        
        /// <remarks/>
        public string AppInstanceId {
            get {
                return this.appInstanceIdField;
            }
            set {
                this.appInstanceIdField = value;
            }
        }
        
        /// <remarks/>
        public string ExternalTenantId {
            get {
                return this.externalTenantIdField;
            }
            set {
                this.externalTenantIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class RtpsCRxDispositionRequest : ePrescribeSvcRequest {
        
        private string txIdField;
        
        private string relatesToTxIdField;
        
        private System.DateTime sentTimeField;
        
        private Disposition dispositionField;
        
        private string patientIdField;
        
        /// <remarks/>
        public string TxId {
            get {
                return this.txIdField;
            }
            set {
                this.txIdField = value;
            }
        }
        
        /// <remarks/>
        public string RelatesToTxId {
            get {
                return this.relatesToTxIdField;
            }
            set {
                this.relatesToTxIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime SentTime {
            get {
                return this.sentTimeField;
            }
            set {
                this.sentTimeField = value;
            }
        }
        
        /// <remarks/>
        public Disposition Disposition {
            get {
                return this.dispositionField;
            }
            set {
                this.dispositionField = value;
            }
        }
        
        /// <remarks/>
        public string PatientId {
            get {
                return this.patientIdField;
            }
            set {
                this.patientIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public enum Disposition {
        
        /// <remarks/>
        D,
        
        /// <remarks/>
        A,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetUserShieldCspStatusInfoRequest : ePrescribeSvcRequest {
        
        private string identityTokenField;
        
        private string shieldExternalTenantIdField;
        
        /// <remarks/>
        public string IdentityToken {
            get {
                return this.identityTokenField;
            }
            set {
                this.identityTokenField = value;
            }
        }
        
        /// <remarks/>
        public string ShieldExternalTenantId {
            get {
                return this.shieldExternalTenantIdField;
            }
            set {
                this.shieldExternalTenantIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class CreateAndSignMobileAccessTokenRequest : ePrescribeSvcRequest {
        
        private string mobileSessionTokenField;
        
        private string medicationTextField;
        
        /// <remarks/>
        public string MobileSessionToken {
            get {
                return this.mobileSessionTokenField;
            }
            set {
                this.mobileSessionTokenField = value;
            }
        }
        
        /// <remarks/>
        public string MedicationText {
            get {
                return this.medicationTextField;
            }
            set {
                this.medicationTextField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class ConvertFromHtmlToPdfRequest : ePrescribeSvcRequest {
        
        private string htmlStringField;
        
        private PdfDocumentSettingsType pdfDocSettingsField;
        
        /// <remarks/>
        public string HtmlString {
            get {
                return this.htmlStringField;
            }
            set {
                this.htmlStringField = value;
            }
        }
        
        /// <remarks/>
        public PdfDocumentSettingsType PdfDocSettings {
            get {
                return this.pdfDocSettingsField;
            }
            set {
                this.pdfDocSettingsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public enum PdfDocumentSettingsType {
        
        /// <remarks/>
        GENERAL,
        
        /// <remarks/>
        SCRIPT,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class SetDocumentAsPrintedRequest : ePrescribeSvcRequest {
        
        private System.Guid retrievalCodeField;
        
        private System.Guid licenseIdField;
        
        private string ipAddressField;
        
        private int licenseStandingField;
        
        /// <remarks/>
        public System.Guid RetrievalCode {
            get {
                return this.retrievalCodeField;
            }
            set {
                this.retrievalCodeField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid LicenseId {
            get {
                return this.licenseIdField;
            }
            set {
                this.licenseIdField = value;
            }
        }
        
        /// <remarks/>
        public string IpAddress {
            get {
                return this.ipAddressField;
            }
            set {
                this.ipAddressField = value;
            }
        }
        
        /// <remarks/>
        public int LicenseStanding {
            get {
                return this.licenseStandingField;
            }
            set {
                this.licenseStandingField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class RetrieveItemFromDocumentStoreRequest : ePrescribeSvcRequest {
        
        private System.Guid retrievalCodeField;
        
        /// <remarks/>
        public System.Guid RetrievalCode {
            get {
                return this.retrievalCodeField;
            }
            set {
                this.retrievalCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class PrintRxRequest : ePrescribeSvcRequest {
        
        private System.Guid licenseIdField;
        
        private int siteIdField;
        
        private System.Guid delegateProviderIdField;
        
        private UserCategory userTypeField;
        
        private System.Guid[] rxIdListField;
        
        private PrintMode printModeField;
        
        private PrintAction printActionField;
        
        private string stateField;
        
        private string timeZoneField;
        
        /// <remarks/>
        public System.Guid LicenseId {
            get {
                return this.licenseIdField;
            }
            set {
                this.licenseIdField = value;
            }
        }
        
        /// <remarks/>
        public int SiteId {
            get {
                return this.siteIdField;
            }
            set {
                this.siteIdField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid DelegateProviderId {
            get {
                return this.delegateProviderIdField;
            }
            set {
                this.delegateProviderIdField = value;
            }
        }
        
        /// <remarks/>
        public UserCategory UserType {
            get {
                return this.userTypeField;
            }
            set {
                this.userTypeField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid[] RxIdList {
            get {
                return this.rxIdListField;
            }
            set {
                this.rxIdListField = value;
            }
        }
        
        /// <remarks/>
        public PrintMode PrintMode {
            get {
                return this.printModeField;
            }
            set {
                this.printModeField = value;
            }
        }
        
        /// <remarks/>
        public PrintAction PrintAction {
            get {
                return this.printActionField;
            }
            set {
                this.printActionField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string TimeZone {
            get {
                return this.timeZoneField;
            }
            set {
                this.timeZoneField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public enum UserCategory {
        
        /// <remarks/>
        GENERAL_USER,
        
        /// <remarks/>
        PROVIDER,
        
        /// <remarks/>
        POB_LIMITED,
        
        /// <remarks/>
        POB_REGULAR,
        
        /// <remarks/>
        PHYSICIAN_ASSISTANT,
        
        /// <remarks/>
        PHYSICIAN_ASSISTANT_SUPERVISED,
        
        /// <remarks/>
        POB_SUPER,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public enum PrintMode {
        
        /// <remarks/>
        ONE_UP,
        
        /// <remarks/>
        FOUR_UP,
        
        /// <remarks/>
        FOUR_ROW,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public enum PrintAction {
        
        /// <remarks/>
        OUTPUT_PDF,
        
        /// <remarks/>
        OUTPUT_HTML,
        
        /// <remarks/>
        PDF_TO_DOC_STORE,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetMessageTrackingAckRequest : ePrescribeSvcRequest {
        
        private System.Guid userGuidField;
        
        /// <remarks/>
        public System.Guid UserGuid {
            get {
                return this.userGuidField;
            }
            set {
                this.userGuidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class AddMessageTrackingAckRequest : ePrescribeSvcRequest {
        
        private System.Guid userGuidField;
        
        private System.Guid configKeyIDField;
        
        /// <remarks/>
        public System.Guid UserGuid {
            get {
                return this.userGuidField;
            }
            set {
                this.userGuidField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid ConfigKeyID {
            get {
                return this.configKeyIDField;
            }
            set {
                this.configKeyIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class SearchAccountsByNameRequest : ePrescribeSvcRequest {
        
        private string accountsNameSearchField;
        
        /// <remarks/>
        public string AccountsNameSearch {
            get {
                return this.accountsNameSearchField;
            }
            set {
                this.accountsNameSearchField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetMatchingPharmacyRequest : ePrescribeSvcRequest {
        
        private string pharmacyNpiOrNabpField;
        
        /// <remarks/>
        public string PharmacyNpiOrNabp {
            get {
                return this.pharmacyNpiOrNabpField;
            }
            set {
                this.pharmacyNpiOrNabpField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetPdmpEnrollmentFormInfoRequest : ePrescribeSvcRequest {
        
        private string userGuidField;
        
        private string licenseIDField;
        
        /// <remarks/>
        public string UserGuid {
            get {
                return this.userGuidField;
            }
            set {
                this.userGuidField = value;
            }
        }
        
        /// <remarks/>
        public string LicenseID {
            get {
                return this.licenseIDField;
            }
            set {
                this.licenseIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public partial class GetPPTPlusSamlTokenRequest : ePrescribeSvcRequest {
        
        private string identityTokenField;
        
        private string shieldTenantIdField;
        
        /// <remarks/>
        public string IdentityToken {
            get {
                return this.identityTokenField;
            }
            set {
                this.identityTokenField = value;
            }
        }
        
        /// <remarks/>
        public string ShieldTenantId {
            get {
                return this.shieldTenantIdField;
            }
            set {
                this.shieldTenantIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public enum UMPUserStatus {
        
        /// <remarks/>
        Not_Registered,
        
        /// <remarks/>
        Registered,
        
        /// <remarks/>
        Error,
        
        /// <remarks/>
        Bulk_Imported,
        
        /// <remarks/>
        Bulk_Import_Error,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/")]
    public enum UMPLicenseStatus {
        
        /// <remarks/>
        Not_Registered,
        
        /// <remarks/>
        Registered,
        
        /// <remarks/>
        Error,
        
        /// <remarks/>
        Bulk_Imported,
        
        /// <remarks/>
        Bulk_Import_Error,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetPDMPSamlTokenCompletedEventHandler(object sender, GetPDMPSamlTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPDMPSamlTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPDMPSamlTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetPDMPSamlTokenResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetPDMPSamlTokenResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void RefreshPPTPlusSamlTokenCompletedEventHandler(object sender, RefreshPPTPlusSamlTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RefreshPPTPlusSamlTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RefreshPPTPlusSamlTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetPPTPlusSamlTokenResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetPPTPlusSamlTokenResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void RefreshPDMPSamlTokenCompletedEventHandler(object sender, RefreshPDMPSamlTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RefreshPDMPSamlTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RefreshPDMPSamlTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetPDMPSamlTokenResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetPDMPSamlTokenResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetPdmpEnrollmentFormInfoCompletedEventHandler(object sender, GetPdmpEnrollmentFormInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPdmpEnrollmentFormInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPdmpEnrollmentFormInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetPdmpEnrollmentFormInfoResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetPdmpEnrollmentFormInfoResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetMatchingPharmacyCompletedEventHandler(object sender, GetMatchingPharmacyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMatchingPharmacyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMatchingPharmacyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetMatchingPharmacyResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetMatchingPharmacyResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SearchAccountsByNameCompletedEventHandler(object sender, SearchAccountsByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchAccountsByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchAccountsByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SearchAccountsByNameResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SearchAccountsByNameResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetShieldPasswordExpirationDateCompletedEventHandler(object sender, GetShieldPasswordExpirationDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetShieldPasswordExpirationDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetShieldPasswordExpirationDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AddMessageTrackingAckCompletedEventHandler(object sender, AddMessageTrackingAckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddMessageTrackingAckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddMessageTrackingAckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ePrescribeSvcResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ePrescribeSvcResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetMessageTrackingAcksOfUserCompletedEventHandler(object sender, GetMessageTrackingAcksOfUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMessageTrackingAcksOfUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMessageTrackingAcksOfUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetMessageTrackingAcksResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetMessageTrackingAcksResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void PrintRxsCompletedEventHandler(object sender, PrintRxsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PrintRxsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PrintRxsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PrintRxResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PrintRxResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void RetrieveItemFromDocumentStoreCompletedEventHandler(object sender, RetrieveItemFromDocumentStoreCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveItemFromDocumentStoreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveItemFromDocumentStoreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RetrieveItemFromDocumentStoreResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RetrieveItemFromDocumentStoreResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SetRxDocumentStoreItemToPrintedStatusCompletedEventHandler(object sender, SetRxDocumentStoreItemToPrintedStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetRxDocumentStoreItemToPrintedStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetRxDocumentStoreItemToPrintedStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ePrescribeSvcResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ePrescribeSvcResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ConvertFromHtmlToPdfCompletedEventHandler(object sender, ConvertFromHtmlToPdfCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConvertFromHtmlToPdfCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConvertFromHtmlToPdfCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ConvertFromHtmlToPdfResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ConvertFromHtmlToPdfResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void RetrieveEncryptedRegistrationKeyCompletedEventHandler(object sender, RetrieveEncryptedRegistrationKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveEncryptedRegistrationKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveEncryptedRegistrationKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MobileSsoRegistrationResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MobileSsoRegistrationResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void RetrieveRegistrationSsoResponseCompletedEventHandler(object sender, RetrieveRegistrationSsoResponseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveRegistrationSsoResponseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveRegistrationSsoResponseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RegistrationSsoResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RegistrationSsoResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CreateAndSignMobileAccessTokenCompletedEventHandler(object sender, CreateAndSignMobileAccessTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateAndSignMobileAccessTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateAndSignMobileAccessTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CreateAndSignMobileAccessTokenResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CreateAndSignMobileAccessTokenResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetUserShieldCspStatusInfoCompletedEventHandler(object sender, GetUserShieldCspStatusInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserShieldCspStatusInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserShieldCspStatusInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetUserShieldCspStatusInfoResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetUserShieldCspStatusInfoResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void RtpsSendDispositionCompletedEventHandler(object sender, RtpsSendDispositionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RtpsSendDispositionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RtpsSendDispositionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ePrescribeSvcResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ePrescribeSvcResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void LogShieldAuditEventCompletedEventHandler(object sender, LogShieldAuditEventCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LogShieldAuditEventCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LogShieldAuditEventCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ShieldAuditEventResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ShieldAuditEventResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CreateRegistrantUserCompletedEventHandler(object sender, CreateRegistrantUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateRegistrantUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateRegistrantUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CreateRegistrantUserResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CreateRegistrantUserResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CompleteRegistrationCompletedEventHandler(object sender, CompleteRegistrationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CompleteRegistrationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CompleteRegistrationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ePrescribeSvcResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ePrescribeSvcResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetRegistrantIdProofingLevelOfAssuranceCompletedEventHandler(object sender, GetRegistrantIdProofingLevelOfAssuranceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRegistrantIdProofingLevelOfAssuranceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRegistrantIdProofingLevelOfAssuranceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetRegistrantIdProofingLoaResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetRegistrantIdProofingLoaResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void LogRegistrationStepCompletedEventHandler(object sender, LogRegistrationStepCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LogRegistrationStepCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LogRegistrationStepCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ePrescribeSvcResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ePrescribeSvcResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void PassUserIdProofingAndNpiCheckForAutomationCompletedEventHandler(object sender, PassUserIdProofingAndNpiCheckForAutomationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PassUserIdProofingAndNpiCheckForAutomationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PassUserIdProofingAndNpiCheckForAutomationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ePrescribeSvcResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ePrescribeSvcResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void InsertTestPatientsCompletedEventHandler(object sender, InsertTestPatientsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertTestPatientsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertTestPatientsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ePrescribeSvcResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ePrescribeSvcResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ProcessHubMailboxHeaderListCompletedEventHandler(object sender, ProcessHubMailboxHeaderListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProcessHubMailboxHeaderListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProcessHubMailboxHeaderListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProcessHubMailboxHeaderListResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProcessHubMailboxHeaderListResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SaveEPADecisionRequestCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SendEPATxHubConnectorMessageCompletedEventHandler(object sender, SendEPATxHubConnectorMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendEPATxHubConnectorMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendEPATxHubConnectorMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public HubResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HubResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ProcessNCPDPEPAMessageCompletedEventHandler(object sender, ProcessNCPDPEPAMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProcessNCPDPEPAMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProcessNCPDPEPAMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AddLicenseToUMPCompletedEventHandler(object sender, AddLicenseToUMPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddLicenseToUMPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddLicenseToUMPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AddLicenseToUMPResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AddLicenseToUMPResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdateLicenseInUMPCompletedEventHandler(object sender, UpdateLicenseInUMPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateLicenseInUMPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateLicenseInUMPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UpdateLicenseInUMPResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UpdateLicenseInUMPResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AddUserToUMPCompletedEventHandler(object sender, AddUserToUMPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUserToUMPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUserToUMPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AddUserToUMPResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AddUserToUMPResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdateUserInUMPCompletedEventHandler(object sender, UpdateUserInUMPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUserInUMPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUserInUMPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UpdateUserInUMPResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UpdateUserInUMPResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdateLicenseInUMPByLicenseIDCompletedEventHandler(object sender, UpdateLicenseInUMPByLicenseIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateLicenseInUMPByLicenseIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateLicenseInUMPByLicenseIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void LoadLicenseForUMPCompletedEventHandler(object sender, LoadLicenseForUMPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadLicenseForUMPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadLicenseForUMPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LicenseInfoForUMP Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LicenseInfoForUMP)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetUMPInformationCompletedEventHandler(object sender, GetUMPInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUMPInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUMPInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UMPInfoByLicenseID Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UMPInfoByLicenseID)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetUserUMPStatusCompletedEventHandler(object sender, GetUserUMPStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserUMPStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserUMPStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdateUMPUserStatusCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetLicenseUMPStatusCompletedEventHandler(object sender, GetLicenseUMPStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLicenseUMPStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLicenseUMPStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdateUMPLicenseStatusCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetProviderProgramEnrollmentsCompletedEventHandler(object sender, GetProviderProgramEnrollmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProviderProgramEnrollmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProviderProgramEnrollmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetProviderProgramEnrollmentsResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetProviderProgramEnrollmentsResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void RxInfoConfirmOfferCompletedEventHandler(object sender, RxInfoConfirmOfferCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RxInfoConfirmOfferCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RxInfoConfirmOfferCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DXCClientUserResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DXCClientUserResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetRxInfoCompletedEventHandler(object sender, GetRxInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRxInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRxInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DXCClientUserResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DXCClientUserResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void IsProviderEnrolledInSpecialtyMedCompletedEventHandler(object sender, IsProviderEnrolledInSpecialtyMedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsProviderEnrolledInSpecialtyMedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsProviderEnrolledInSpecialtyMedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ProcessInitiationRequestCompletedEventHandler(object sender, ProcessInitiationRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProcessInitiationRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProcessInitiationRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InitiationResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InitiationResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetStatusUpdateCompletedEventHandler(object sender, GetStatusUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStatusUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStatusUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StatusMessageResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StatusMessageResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetStatusAndUpdateDatabaseCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetStatusByActivityIdAndUpdateDatabaseCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetStatusUpdateByActivityIDCompletedEventHandler(object sender, GetStatusUpdateByActivityIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStatusUpdateByActivityIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStatusUpdateByActivityIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StatusMessageResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StatusMessageResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ConfirmOfferCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DXCClientSyncWhitelistCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void IsRxInfoAvailableForDDICompletedEventHandler(object sender, IsRxInfoAvailableForDDICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsRxInfoAvailableForDDICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsRxInfoAvailableForDDICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetRxInfoDetailsLiteByRxIDCompletedEventHandler(object sender, GetRxInfoDetailsLiteByRxIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRxInfoDetailsLiteByRxIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRxInfoDetailsLiteByRxIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetRxInfoDetailsLiteByRxIDResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetRxInfoDetailsLiteByRxIDResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetRxInfoHtmlContentCompletedEventHandler(object sender, GetRxInfoHtmlContentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRxInfoHtmlContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRxInfoHtmlContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AddOfficeLocationCompletedEventHandler(object sender, AddOfficeLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddOfficeLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddOfficeLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AddOfficeLocationResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AddOfficeLocationResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdateOfficeLocationCompletedEventHandler(object sender, UpdateOfficeLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateOfficeLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateOfficeLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UpdateOfficeLocationResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UpdateOfficeLocationResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetOfficeLocationsCompletedEventHandler(object sender, GetOfficeLocationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOfficeLocationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOfficeLocationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetOfficeLocationsResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetOfficeLocationsResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdatePatientProblemCompletedEventHandler(object sender, UpdatePatientProblemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePatientProblemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePatientProblemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UpdatePatientProblemResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UpdatePatientProblemResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SavePatientProblemCompletedEventHandler(object sender, SavePatientProblemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SavePatientProblemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SavePatientProblemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SavePatientProblemResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SavePatientProblemResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetPatientProblemsByPatientIDCompletedEventHandler(object sender, GetPatientProblemsByPatientIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientProblemsByPatientIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientProblemsByPatientIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PatientProblem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PatientProblem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SavePatientCCDCompletedEventHandler(object sender, SavePatientCCDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SavePatientCCDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SavePatientCCDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SavePatientCCDResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SavePatientCCDResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SearchDiagnosisCompletedEventHandler(object sender, SearchDiagnosisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchDiagnosisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchDiagnosisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SearchDiagnosisResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SearchDiagnosisResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void TypeAheadDiagnosisSearchCompletedEventHandler(object sender, TypeAheadDiagnosisSearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TypeAheadDiagnosisSearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TypeAheadDiagnosisSearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetRepresentativeDDIForRxNormNameCodeCompletedEventHandler(object sender, GetRepresentativeDDIForRxNormNameCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRepresentativeDDIForRxNormNameCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRepresentativeDDIForRxNormNameCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetRepresentativeMedispanIdForNDFRTCodeCompletedEventHandler(object sender, GetRepresentativeMedispanIdForNDFRTCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRepresentativeMedispanIdForNDFRTCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRepresentativeMedispanIdForNDFRTCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetPartnersBeingLoggedCompletedEventHandler(object sender, GetPartnersBeingLoggedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPartnersBeingLoggedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPartnersBeingLoggedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PartnersBeingLoggedResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PartnersBeingLoggedResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void IsPartnerLoggingEnabledCompletedEventHandler(object sender, IsPartnerLoggingEnabledCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsPartnerLoggingEnabledCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsPartnerLoggingEnabledCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EnableLoggingForPartnerCompletedEventHandler(object sender, EnableLoggingForPartnerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnableLoggingForPartnerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EnableLoggingForPartnerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DisableLoggingForPartnerByPartnerIDCompletedEventHandler(object sender, DisableLoggingForPartnerByPartnerIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DisableLoggingForPartnerByPartnerIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DisableLoggingForPartnerByPartnerIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DeleteAllRecordsFromSvcInstrumentationLogCompletedEventHandler(object sender, DeleteAllRecordsFromSvcInstrumentationLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteAllRecordsFromSvcInstrumentationLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteAllRecordsFromSvcInstrumentationLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void IsValidPartnerLicenseRelationshipCompletedEventHandler(object sender, IsValidPartnerLicenseRelationshipCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsValidPartnerLicenseRelationshipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsValidPartnerLicenseRelationshipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetAllProvidersAndTraitsForLicenseCompletedEventHandler(object sender, GetAllProvidersAndTraitsForLicenseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllProvidersAndTraitsForLicenseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllProvidersAndTraitsForLicenseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetAllProvidersAndTraitsForLicenseResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetAllProvidersAndTraitsForLicenseResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetShieldOtpFormsCompletedEventHandler(object sender, GetShieldOtpFormsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetShieldOtpFormsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetShieldOtpFormsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetShieldOTPFormsResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetShieldOTPFormsResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetShieldSendOtpCompletedEventHandler(object sender, GetShieldSendOtpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetShieldSendOtpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetShieldSendOtpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetShieldSendOTPResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetShieldSendOTPResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AuthenicateOTPCompletedEventHandler(object sender, AuthenicateOTPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthenicateOTPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthenicateOTPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetShieldAuthenicateOTPFormsResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetShieldAuthenicateOTPFormsResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DoesActivationCodeExistCompletedEventHandler(object sender, DoesActivationCodeExistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DoesActivationCodeExistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DoesActivationCodeExistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ActivateAndUpdateUserCompletedEventHandler(object sender, ActivateAndUpdateUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ActivateAndUpdateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ActivateAndUpdateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ActivateAndUpdateUserResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ActivateAndUpdateUserResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ActivateAndUpdateUtilitiesUserCompletedEventHandler(object sender, ActivateAndUpdateUtilitiesUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ActivateAndUpdateUtilitiesUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ActivateAndUpdateUtilitiesUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ActivateAndUpdateUserResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ActivateAndUpdateUserResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CreateLicenseForExistingShieldTenantCompletedEventHandler(object sender, CreateLicenseForExistingShieldTenantCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateLicenseForExistingShieldTenantCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateLicenseForExistingShieldTenantCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CreateLicenseForExistingShieldTenantResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CreateLicenseForExistingShieldTenantResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void LinkExistingShieldUserToeRxUserCompletedEventHandler(object sender, LinkExistingShieldUserToeRxUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LinkExistingShieldUserToeRxUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LinkExistingShieldUserToeRxUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LinkExistingShieldUserToeRxUserResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LinkExistingShieldUserToeRxUserResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void LinkExistingShieldUserToUtilitiesUserCompletedEventHandler(object sender, LinkExistingShieldUserToUtilitiesUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LinkExistingShieldUserToUtilitiesUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LinkExistingShieldUserToUtilitiesUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LinkExistingShieldUserToeRxUserResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LinkExistingShieldUserToeRxUserResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AuthenticateOtpForSigningCompletedEventHandler(object sender, AuthenticateOtpForSigningCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthenticateOtpForSigningCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthenticateOtpForSigningCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AuthenticateOtpFormsForSigningResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AuthenticateOtpFormsForSigningResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetShieldExternalTenantIDCompletedEventHandler(object sender, GetShieldExternalTenantIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetShieldExternalTenantIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetShieldExternalTenantIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetTeaserAdFromServiceAlertCompletedEventHandler(object sender, GetTeaserAdFromServiceAlertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTeaserAdFromServiceAlertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTeaserAdFromServiceAlertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TeaserAdResponse[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TeaserAdResponse[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void InsertAllUsersInEnterpriseForHubEnrollmentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void InsertAllUsersInLicenseForHubEnrollmentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AddUserToIlearnCompletedEventHandler(object sender, AddUserToIlearnCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUserToIlearnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUserToIlearnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetiAssistSamlTokenCompletedEventHandler(object sender, GetiAssistSamlTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetiAssistSamlTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetiAssistSamlTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetiAssistSamlTokenResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetiAssistSamlTokenResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetPPTPlusSamlTokenCompletedEventHandler(object sender, GetPPTPlusSamlTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPPTPlusSamlTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPPTPlusSamlTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetPPTPlusSamlTokenResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetPPTPlusSamlTokenResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetDenialReasonsCompletedEventHandler(object sender, GetDenialReasonsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDenialReasonsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDenialReasonsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DenialReasonResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DenialReasonResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void LoadMedicationByDDIAndCoverageCompletedEventHandler(object sender, LoadMedicationByDDIAndCoverageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadMedicationByDDIAndCoverageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadMedicationByDDIAndCoverageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MedicationResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MedicationResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetOtpFormsForSigningCompletedEventHandler(object sender, GetOtpFormsForSigningCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOtpFormsForSigningCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOtpFormsForSigningCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetShieldOTPFormsResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetShieldOTPFormsResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void RequestOTPCompletedEventHandler(object sender, RequestOTPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RequestOTPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RequestOTPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetShieldSendOTPResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetShieldSendOTPResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SignRxMockCompletedEventHandler(object sender, SignRxMockCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SignRxMockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SignRxMockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ActivateDeativateUserAccountCompletedEventHandler(object sender, ActivateDeativateUserAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ActivateDeativateUserAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ActivateDeativateUserAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UpdateUserResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UpdateUserResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void MarkUserAdminStatusCompletedEventHandler(object sender, MarkUserAdminStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MarkUserAdminStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MarkUserAdminStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UpdateUserResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UpdateUserResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdateShieldUserTenantAdminStatusCompletedEventHandler(object sender, UpdateShieldUserTenantAdminStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateShieldUserTenantAdminStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateShieldUserTenantAdminStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UpdateShieldUserTenantAdminStatusResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UpdateShieldUserTenantAdminStatusResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SetShieldUserTraitCompletedEventHandler(object sender, SetShieldUserTraitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetShieldUserTraitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetShieldUserTraitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SetShieldUserTraitResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SetShieldUserTraitResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SetProviderTraitsCompletedEventHandler(object sender, SetProviderTraitsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetProviderTraitsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetProviderTraitsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SetProviderTraitsResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SetProviderTraitsResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetPartnersCompletedEventHandler(object sender, GetPartnersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPartnersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPartnersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Partner[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Partner[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SetShieldUserTraitUsingUserTokenCompletedEventHandler(object sender, SetShieldUserTraitUsingUserTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetShieldUserTraitUsingUserTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetShieldUserTraitUsingUserTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SetShieldUserTraitResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SetShieldUserTraitResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetShieldUserTraitUsingUserTokenCompletedEventHandler(object sender, GetShieldUserTraitUsingUserTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetShieldUserTraitUsingUserTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetShieldUserTraitUsingUserTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetShieldUserTraitsResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetShieldUserTraitsResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetIdProofingUrlCompletedEventHandler(object sender, GetIdProofingUrlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetIdProofingUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetIdProofingUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetIdProofingUrlResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetIdProofingUrlResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetShieldUserTraitsCompletedEventHandler(object sender, GetShieldUserTraitsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetShieldUserTraitsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetShieldUserTraitsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetShieldUserTraitsResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetShieldUserTraitsResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SearchMedicationCompletedEventHandler(object sender, SearchMedicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchMedicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchMedicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SearchMedicationResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SearchMedicationResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SearchMedicationAndClassCompletedEventHandler(object sender, SearchMedicationAndClassCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchMedicationAndClassCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchMedicationAndClassCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SearchMedicationAndClassResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SearchMedicationAndClassResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void LoadMedicationByNameCompletedEventHandler(object sender, LoadMedicationByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadMedicationByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadMedicationByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LoadMedicationResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LoadMedicationResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetECouponCompletedEventHandler(object sender, GetECouponCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetECouponCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetECouponCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DXCClientUserResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DXCClientUserResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void IsECouponAvailableForDDICompletedEventHandler(object sender, IsECouponAvailableForDDICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsECouponAvailableForDDICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsECouponAvailableForDDICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetECouponDetailByRxIDCompletedEventHandler(object sender, GetECouponDetailByRxIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetECouponDetailByRxIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetECouponDetailByRxIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetECouponDetailByRxIDResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetECouponDetailByRxIDResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ECouponConfirmOfferCompletedEventHandler(object sender, ECouponConfirmOfferCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ECouponConfirmOfferCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ECouponConfirmOfferCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DXCClientUserResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DXCClientUserResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AreECouponNotesToRxPharmacyNotesUpdatedCompletedEventHandler(object sender, AreECouponNotesToRxPharmacyNotesUpdatedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AreECouponNotesToRxPharmacyNotesUpdatedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AreECouponNotesToRxPharmacyNotesUpdatedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetECouponDetailsLiteByIDCompletedEventHandler(object sender, GetECouponDetailsLiteByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetECouponDetailsLiteByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetECouponDetailsLiteByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetECouponDetailsLiteByIDResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetECouponDetailsLiteByIDResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetECouponTransactionDetailCompletedEventHandler(object sender, GetECouponTransactionDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetECouponTransactionDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetECouponTransactionDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetECouponTransactionDetailResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetECouponTransactionDetailResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetECouponDxcResponseXmlCompletedEventHandler(object sender, GetECouponDxcResponseXmlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetECouponDxcResponseXmlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetECouponDxcResponseXmlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SendMessageTwilioCompletedEventHandler(object sender, SendMessageTwilioCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendMessageTwilioCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendMessageTwilioCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ePrescribeSvcResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ePrescribeSvcResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void IsSMSAlertDailyCountReachedCompletedEventHandler(object sender, IsSMSAlertDailyCountReachedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsSMSAlertDailyCountReachedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsSMSAlertDailyCountReachedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ECouponRefillRequestCompletedEventHandler(object sender, ECouponRefillRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ECouponRefillRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ECouponRefillRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ECouponRefillResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ECouponRefillResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ECouponRefillPrintRequestCompletedEventHandler(object sender, ECouponRefillPrintRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ECouponRefillPrintRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ECouponRefillPrintRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ECouponRefillPrintResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ECouponRefillPrintResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SaveRxErrorCompletedEventHandler(object sender, SaveRxErrorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveRxErrorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveRxErrorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SaveRxErrorResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SaveRxErrorResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void InsertMessageQueueTxCompletedEventHandler(object sender, InsertMessageQueueTxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertMessageQueueTxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertMessageQueueTxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InsertMessageQueueResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InsertMessageQueueResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdateMessageQueueTxCompletedEventHandler(object sender, UpdateMessageQueueTxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateMessageQueueTxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateMessageQueueTxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UpdateMessageQueueResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UpdateMessageQueueResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void LoadMessageQueueTxCompletedEventHandler(object sender, LoadMessageQueueTxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadMessageQueueTxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadMessageQueueTxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LoadMessageQueueTxResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LoadMessageQueueTxResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetPendingScriptsCompletedEventHandler(object sender, GetPendingScriptsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPendingScriptsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPendingScriptsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetPendingScriptsResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetPendingScriptsResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetFailedScriptsCompletedEventHandler(object sender, GetFailedScriptsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFailedScriptsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFailedScriptsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetFailedScriptsResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetFailedScriptsResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void IsValidPasswordCompletedEventHandler(object sender, IsValidPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsValidPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsValidPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public IsValidPasswordResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((IsValidPasswordResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetStateLicenseAndDeaExpiryDateForUserCompletedEventHandler(object sender, GetStateLicenseAndDeaExpiryDateForUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStateLicenseAndDeaExpiryDateForUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStateLicenseAndDeaExpiryDateForUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetStateLicenseAndDeaExpiryDateForUserResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetStateLicenseAndDeaExpiryDateForUserResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetEnterpriseInfoByPartnerIDCompletedEventHandler(object sender, GetEnterpriseInfoByPartnerIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEnterpriseInfoByPartnerIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEnterpriseInfoByPartnerIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetEnterpriseInfoResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetEnterpriseInfoResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetACRCommunitiesCompletedEventHandler(object sender, GetACRCommunitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetACRCommunitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetACRCommunitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ACRCommunityResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ACRCommunityResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void LaunchClinicalViewerCompletedEventHandler(object sender, LaunchClinicalViewerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LaunchClinicalViewerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LaunchClinicalViewerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ClinicalViewerLaunchResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClinicalViewerLaunchResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SubmitAcrPixFeedForPatientCompletedEventHandler(object sender, SubmitAcrPixFeedForPatientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubmitAcrPixFeedForPatientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubmitAcrPixFeedForPatientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetPatientCCDCompletedEventHandler(object sender, GetPatientCCDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientCCDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientCCDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetPatientCCDResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetPatientCCDResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ExportCCDToDBMotionCompletedEventHandler(object sender, ExportCCDToDBMotionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExportCCDToDBMotionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExportCCDToDBMotionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExportCCDToDBMotionResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExportCCDToDBMotionResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void IsUserLoggingEnabledCompletedEventHandler(object sender, IsUserLoggingEnabledCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsUserLoggingEnabledCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsUserLoggingEnabledCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EnableLoggingForUserCompletedEventHandler(object sender, EnableLoggingForUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnableLoggingForUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EnableLoggingForUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DisableLoggingForUserByUserIDCompletedEventHandler(object sender, DisableLoggingForUserByUserIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DisableLoggingForUserByUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DisableLoggingForUserByUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ToggleActiveStatusCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetUsersBeingLoggedCompletedEventHandler(object sender, GetUsersBeingLoggedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUsersBeingLoggedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUsersBeingLoggedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetUsersBeingLoggedResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetUsersBeingLoggedResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetMainAppLogRecordsCompletedEventHandler(object sender, GetMainAppLogRecordsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMainAppLogRecordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMainAppLogRecordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetMainAppLogRecordsResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetMainAppLogRecordsResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DeleteAllRecordsFromInstrumentationLogCompletedEventHandler(object sender, DeleteAllRecordsFromInstrumentationLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteAllRecordsFromInstrumentationLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteAllRecordsFromInstrumentationLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetInfoScriptsMessageListCompletedEventHandler(object sender, GetInfoScriptsMessageListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInfoScriptsMessageListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInfoScriptsMessageListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InfoScriptsMessageListResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InfoScriptsMessageListResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetInfoScriptsMessageCompletedEventHandler(object sender, GetInfoScriptsMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInfoScriptsMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInfoScriptsMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InfoScriptsMessageResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InfoScriptsMessageResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AddInfoScriptsMessageCompletedEventHandler(object sender, AddInfoScriptsMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddInfoScriptsMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddInfoScriptsMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdateInfoScriptsMessageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SaveEPAQuestionSetRequestCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SendPAInitiationRequestCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SendPARequestCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SendToEPATaskListCompletedEventHandler(object sender, SendToEPATaskListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendToEPATaskListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendToEPATaskListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EPAServiceResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EPAServiceResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void InsertEPARequestsAdditionalInfoCompletedEventHandler(object sender, InsertEPARequestsAdditionalInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertEPARequestsAdditionalInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertEPARequestsAdditionalInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EPAServiceResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EPAServiceResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SendToEPARequestCompletedEventHandler(object sender, SendToEPARequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendToEPARequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendToEPARequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EPAServiceResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EPAServiceResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdateEPATaskStatusCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SendePACancelRequestCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SaveePAUserPreferneceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetAllBackdoorSitesCompletedEventHandler(object sender, GetAllBackdoorSitesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllBackdoorSitesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllBackdoorSitesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetBackdoorSitesResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetBackdoorSitesResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CreateBackdoorUserAuditLogEntryCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetPatientRxHubMatchCompletedEventHandler(object sender, GetPatientRxHubMatchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientRxHubMatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientRxHubMatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Patient Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Patient)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetFullAppversionCompletedEventHandler(object sender, GetFullAppversionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFullAppversionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFullAppversionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetApplicationShieldStatusCompletedEventHandler(object sender, GetApplicationShieldStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetApplicationShieldStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetApplicationShieldStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ApplicationResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ApplicationResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetLicenseShieldStatusCompletedEventHandler(object sender, GetLicenseShieldStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLicenseShieldStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLicenseShieldStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetLicenseShieldStatusResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetLicenseShieldStatusResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CacheResetCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetEligAndMedHxStatusCompletedEventHandler(object sender, GetEligAndMedHxStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEligAndMedHxStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEligAndMedHxStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetEligAndMedHxStatusResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetEligAndMedHxStatusResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AuditLogPatientInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AuditLogPatientRxInsertCompletedEventHandler(object sender, AuditLogPatientRxInsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuditLogPatientRxInsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuditLogPatientRxInsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AuditLogPatientRxResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AuditLogPatientRxResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AuditLogPatientRxCSInsertCompletedEventHandler(object sender, AuditLogPatientRxCSInsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuditLogPatientRxCSInsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuditLogPatientRxCSInsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AuditLogPatientRxCSResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AuditLogPatientRxCSResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AuditLogUserInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AuditLogLicenseInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetUsersCompletedEventHandler(object sender, GetUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetUsersResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetUsersResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SearchShieldUsersCompletedEventHandler(object sender, SearchShieldUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchShieldUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchShieldUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetUsersResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetUsersResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetUsersFromePrescribeCompletedEventHandler(object sender, GetUsersFromePrescribeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUsersFromePrescribeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUsersFromePrescribeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetUsersFromePrescribeResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetUsersFromePrescribeResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetShieldInternalAppIDCompletedEventHandler(object sender, GetShieldInternalAppIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetShieldInternalAppIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetShieldInternalAppIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetShieldInternalEnvironmentIDCompletedEventHandler(object sender, GetShieldInternalEnvironmentIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetShieldInternalEnvironmentIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetShieldInternalEnvironmentIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetShieldInternalTenantIDCompletedEventHandler(object sender, GetShieldInternalTenantIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetShieldInternalTenantIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetShieldInternalTenantIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetShieldInternalAppInstanceIDCompletedEventHandler(object sender, GetShieldInternalAppInstanceIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetShieldInternalAppInstanceIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetShieldInternalAppInstanceIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetShieldExternalAppInstanceIDCompletedEventHandler(object sender, GetShieldExternalAppInstanceIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetShieldExternalAppInstanceIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetShieldExternalAppInstanceIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetRolesForApplicationCompletedEventHandler(object sender, GetRolesForApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRolesForApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRolesForApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Role[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Role[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetShieldUserCompletedEventHandler(object sender, GetShieldUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetShieldUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetShieldUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetShieldUserResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetShieldUserResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AuthenticateAndAuthorizeUserCompletedEventHandler(object sender, AuthenticateAndAuthorizeUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthenticateAndAuthorizeUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthenticateAndAuthorizeUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AuthenticateAndAuthorizeUserResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AuthenticateAndAuthorizeUserResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AuthorizeUserCompletedEventHandler(object sender, AuthorizeUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthorizeUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthorizeUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AuthenticateAndAuthorizeUserResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AuthenticateAndAuthorizeUserResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AuthenticateSsoUserCompletedEventHandler(object sender, AuthenticateSsoUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthenticateSsoUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthenticateSsoUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AuthenticateSsoResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AuthenticateSsoResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void RefreshSamlTokenCompletedEventHandler(object sender, RefreshSamlTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RefreshSamlTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RefreshSamlTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RefreshSamlTokenResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RefreshSamlTokenResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetServiceAccountShieldTokenCompletedEventHandler(object sender, GetServiceAccountShieldTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServiceAccountShieldTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServiceAccountShieldTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetServiceAccountShieldSamlTokenCompletedEventHandler(object sender, GetServiceAccountShieldSamlTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServiceAccountShieldSamlTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServiceAccountShieldSamlTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetServiceAccountShieldSamlTokenResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetServiceAccountShieldSamlTokenResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetNewShieldActivationCodeCompletedEventHandler(object sender, GetNewShieldActivationCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNewShieldActivationCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNewShieldActivationCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetNewActivationCodeResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetNewActivationCodeResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CreateShieldTenantAndUserCompletedEventHandler(object sender, CreateShieldTenantAndUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateShieldTenantAndUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateShieldTenantAndUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CreateTenantAndUserResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CreateTenantAndUserResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AuditLogShieldInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ValidateShieldConnectivityCompletedEventHandler(object sender, ValidateShieldConnectivityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateShieldConnectivityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateShieldConnectivityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AuthenticateAndAuthorizeUserAgainstShieldDebugCompletedEventHandler(object sender, AuthenticateAndAuthorizeUserAgainstShieldDebugCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthenticateAndAuthorizeUserAgainstShieldDebugCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthenticateAndAuthorizeUserAgainstShieldDebugCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ResetAndGeneratePasswordForUserCompletedEventHandler(object sender, ResetAndGeneratePasswordForUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResetAndGeneratePasswordForUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResetAndGeneratePasswordForUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetNewPasswordResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetNewPasswordResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SaveUserAppPropertyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetUserCountForLicenseCompletedEventHandler(object sender, GetUserCountForLicenseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserCountForLicenseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserCountForLicenseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CreateShieldTenantCompletedEventHandler(object sender, CreateShieldTenantCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateShieldTenantCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateShieldTenantCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CreateShieldTenantResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CreateShieldTenantResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdateShieldTenantCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ChangeUserPasswordCompletedEventHandler(object sender, ChangeUserPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangeUserPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeUserPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ePrescribeSvcResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ePrescribeSvcResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void LinkAndAuthorizeFederatedUserCompletedEventHandler(object sender, LinkAndAuthorizeFederatedUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LinkAndAuthorizeFederatedUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LinkAndAuthorizeFederatedUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AuthenticateAndAuthorizeUserResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AuthenticateAndAuthorizeUserResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void LinkFederatedIdentityToShieldAccountCompletedEventHandler(object sender, LinkFederatedIdentityToShieldAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LinkFederatedIdentityToShieldAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LinkFederatedIdentityToShieldAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LinkAndAuthorizeFederatedUserResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LinkAndAuthorizeFederatedUserResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CreateTrustedTenantCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetAllShieldSecretQuestionsCompletedEventHandler(object sender, GetAllShieldSecretQuestionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllShieldSecretQuestionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllShieldSecretQuestionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetAllSecretQuestionsResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetAllSecretQuestionsResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SaveSecretQuestionAnswersCompletedEventHandler(object sender, SaveSecretQuestionAnswersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveSecretQuestionAnswersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveSecretQuestionAnswersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SaveSecretQuestionAnswersResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SaveSecretQuestionAnswersResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EnrollProviderCompletedEventHandler(object sender, EnrollProviderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnrollProviderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EnrollProviderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EnrollProviderResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EnrollProviderResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetUserShieldSecretQuestionsCompletedEventHandler(object sender, GetUserShieldSecretQuestionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserShieldSecretQuestionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserShieldSecretQuestionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetUserSecretQuestionsResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetUserSecretQuestionsResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ResetForgottenPasswordCompletedEventHandler(object sender, ResetForgottenPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResetForgottenPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResetForgottenPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResetForgottenPasswordResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResetForgottenPasswordResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AuthenticateAndAuthorizeUtilUserCompletedEventHandler(object sender, AuthenticateAndAuthorizeUtilUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthenticateAndAuthorizeUtilUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthenticateAndAuthorizeUtilUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AuthenticateAndAuthorizeUtilUserResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AuthenticateAndAuthorizeUtilUserResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetEnterpriseePAStatusByPartnerIDCompletedEventHandler(object sender, GetEnterpriseePAStatusByPartnerIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEnterpriseePAStatusByPartnerIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEnterpriseePAStatusByPartnerIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetEnterpriseePAStatusByClientIDCompletedEventHandler(object sender, GetEnterpriseePAStatusByClientIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEnterpriseePAStatusByClientIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEnterpriseePAStatusByClientIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdateSecUsersInfoAnd3rdPartiesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AddUserCompletedEventHandler(object sender, AddUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CreateUserResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CreateUserResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdateUserCompletedEventHandler(object sender, UpdateUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UpdateUserResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UpdateUserResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CreateShieldUserCompletedEventHandler(object sender, CreateShieldUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateShieldUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateShieldUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CreateShieldUserResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CreateShieldUserResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdateShieldUserCompletedEventHandler(object sender, UpdateShieldUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateShieldUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateShieldUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UpdateShieldUserResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UpdateShieldUserResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SetDEARegistrantStatusCompletedEventHandler(object sender, SetDEARegistrantStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetDEARegistrantStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetDEARegistrantStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SetDEARegistrantStatusResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SetDEARegistrantStatusResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetReconciledControlledSubstanceCodeCompletedEventHandler(object sender, GetReconciledControlledSubstanceCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReconciledControlledSubstanceCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReconciledControlledSubstanceCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void RxOptionsUsedInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetProviderDEALicensesCompletedEventHandler(object sender, GetProviderDEALicensesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProviderDEALicensesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProviderDEALicensesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReponseDEALicenses Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReponseDEALicenses)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdateDEALicensesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DeleteDEALicenseCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetAdminCountForLicenseCompletedEventHandler(object sender, GetAdminCountForLicenseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAdminCountForLicenseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAdminCountForLicenseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SignPrescriptionAndInsertSignedScriptMessageCompletedEventHandler(object sender, SignPrescriptionAndInsertSignedScriptMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SignPrescriptionAndInsertSignedScriptMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SignPrescriptionAndInsertSignedScriptMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SignPrescriptionsResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SignPrescriptionsResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetPatientsByLicenseCompletedEventHandler(object sender, GetPatientsByLicenseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientsByLicenseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientsByLicenseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Patient[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Patient[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetPatientsCompletedEventHandler(object sender, GetPatientsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Patient[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Patient[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetPatientsLoadByIDCompletedEventHandler(object sender, GetPatientsLoadByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientsLoadByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientsLoadByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Patient Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Patient)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetPatientsLoadByDateCompletedEventHandler(object sender, GetPatientsLoadByDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientsLoadByDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientsLoadByDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Patient Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Patient)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetAllergyByPatientCompletedEventHandler(object sender, GetAllergyByPatientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllergyByPatientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllergyByPatientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Allergy[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Allergy[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetRxByPatientCompletedEventHandler(object sender, GetRxByPatientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRxByPatientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRxByPatientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Rx[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Rx[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetDiagnosisByPatientCompletedEventHandler(object sender, GetDiagnosisByPatientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDiagnosisByPatientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDiagnosisByPatientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Problem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Problem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetPatientLastPharmacyCompletedEventHandler(object sender, GetPatientLastPharmacyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientLastPharmacyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientLastPharmacyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Patient Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Patient)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetProviderFavoritesCompletedEventHandler(object sender, GetProviderFavoritesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProviderFavoritesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProviderFavoritesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProviderFavoritesResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProviderFavoritesResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetProviderByLicenseCompletedEventHandler(object sender, GetProviderByLicenseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProviderByLicenseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProviderByLicenseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RxUser[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RxUser[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetPatientDemographicsCompletedEventHandler(object sender, GetPatientDemographicsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatientDemographicsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatientDemographicsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Patient Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Patient)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetLicenseByIDCompletedEventHandler(object sender, GetLicenseByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLicenseByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLicenseByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public License Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((License)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetLicenseCreationDateCompletedEventHandler(object sender, GetLicenseCreationDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLicenseCreationDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLicenseCreationDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LicenseCreationDateResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LicenseCreationDateResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetLicenseSiteByIDCompletedEventHandler(object sender, GetLicenseSiteByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLicenseSiteByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLicenseSiteByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LicenseSite Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LicenseSite)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetAllSitesByLicenseIDCompletedEventHandler(object sender, GetAllSitesByLicenseIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllSitesByLicenseIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllSitesByLicenseIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LicenseSite[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LicenseSite[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetLicenseByPatientIDCompletedEventHandler(object sender, GetLicenseByPatientIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLicenseByPatientIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLicenseByPatientIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public License Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((License)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetLicensePreferencesCompletedEventHandler(object sender, GetLicensePreferencesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLicensePreferencesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLicensePreferencesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Preference[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Preference[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SaveLicensePreferenceCompletedEventHandler(object sender, SaveLicensePreferenceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveLicensePreferenceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveLicensePreferenceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LicensePreferenceSaveResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LicensePreferenceSaveResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DURCheckSingleRxByDDICompletedEventHandler(object sender, DURCheckSingleRxByDDICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DURCheckSingleRxByDDICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DURCheckSingleRxByDDICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DURInformation Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DURInformation)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DURCheckSingleRxByRxIDCompletedEventHandler(object sender, DURCheckSingleRxByRxIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DURCheckSingleRxByRxIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DURCheckSingleRxByRxIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DURInformation Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DURInformation)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SaveRxDURCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SendRxToAssistantCompletedEventHandler(object sender, SendRxToAssistantCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendRxToAssistantCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendRxToAssistantCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SendRxToAssistantResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SendRxToAssistantResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdateRxTaskCompletedEventHandler(object sender, UpdateRxTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateRxTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateRxTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdatePrescriptionStatusCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdateProviderOfRecordCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdatePrescriptionRxDetailStatusCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdatePrescriptionPharmacyIDCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CreateScriptMessageCompletedEventHandler(object sender, CreateScriptMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateScriptMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateScriptMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DeleteScriptMessagesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CreateVerifyMessageCompletedEventHandler(object sender, CreateVerifyMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateVerifyMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateVerifyMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CreateVerifyMessageResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CreateVerifyMessageResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CreateErrorMessageCompletedEventHandler(object sender, CreateErrorMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateErrorMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateErrorMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CreateErrorMessageResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CreateErrorMessageResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CreateDUREVTScriptMessageCompletedEventHandler(object sender, CreateDUREVTScriptMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateDUREVTScriptMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateDUREVTScriptMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SendScriptMessageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SendOutboundInfoScriptMessageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ApproveScriptMessageCompletedEventHandler(object sender, ApproveScriptMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApproveScriptMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApproveScriptMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void RejectScriptMessageCompletedEventHandler(object sender, RejectScriptMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RejectScriptMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RejectScriptMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RejectScriptMessageResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RejectScriptMessageResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetAuditInfoByUserNameCompletedEventHandler(object sender, GetAuditInfoByUserNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAuditInfoByUserNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAuditInfoByUserNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AuditInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AuditInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void PrescriptionUpdateCreationTypeCompletedEventHandler(object sender, PrescriptionUpdateCreationTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PrescriptionUpdateCreationTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PrescriptionUpdateCreationTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PrescriptionUpdateCreationTypeResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PrescriptionUpdateCreationTypeResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetNewUniqueUserNameCompletedEventHandler(object sender, GetNewUniqueUserNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNewUniqueUserNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNewUniqueUserNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetUserInfoByUAISessionTokenCompletedEventHandler(object sender, GetUserInfoByUAISessionTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserInfoByUAISessionTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserInfoByUAISessionTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UAISecurityTokenResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UAISecurityTokenResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetUserInfoByMobileServiceSessionTokenCompletedEventHandler(object sender, GetUserInfoByMobileServiceSessionTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserInfoByMobileServiceSessionTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserInfoByMobileServiceSessionTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MobileServiceSecurityTokenResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MobileServiceSecurityTokenResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UserNameExistsCompletedEventHandler(object sender, UserNameExistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserNameExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserNameExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SearchUsersInAllDatabasesCompletedEventHandler(object sender, SearchUsersInAllDatabasesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchUsersInAllDatabasesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchUsersInAllDatabasesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SearchUsersResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SearchUsersResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SearchUsersInShieldCompletedEventHandler(object sender, SearchUsersInShieldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchUsersInShieldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchUsersInShieldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SearchUsersResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SearchUsersResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetUserCompletedEventHandler(object sender, GetUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetUserResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetUserResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetUserBasicCompletedEventHandler(object sender, GetUserBasicCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserBasicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserBasicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetUserResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetUserResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DenyTaskRxCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetEULACompletedEventHandler(object sender, GetEULACompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEULACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEULACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetAdPrivacyPolicyCompletedEventHandler(object sender, GetAdPrivacyPolicyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAdPrivacyPolicyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAdPrivacyPolicyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EULARecentlyUpdatedCompletedEventHandler(object sender, EULARecentlyUpdatedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EULARecentlyUpdatedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EULARecentlyUpdatedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AddMedToScriptPadCompletedEventHandler(object sender, AddMedToScriptPadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddMedToScriptPadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddMedToScriptPadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Rx[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Rx[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SaveCSDetailsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EditScriptPadCompletedEventHandler(object sender, EditScriptPadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EditScriptPadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EditScriptPadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Rx[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Rx[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DeleteFromScriptPadCompletedEventHandler(object sender, DeleteFromScriptPadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteFromScriptPadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteFromScriptPadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Rx[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Rx[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void InsertRxHeaderCanceledCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void MarkAsFulfilledCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void LoadRxLiteByIDCompletedEventHandler(object sender, LoadRxLiteByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadRxLiteByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadRxLiteByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Rx Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Rx)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SetAsSelfReportedCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetScriptPadCompletedEventHandler(object sender, GetScriptPadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetScriptPadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetScriptPadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Rx[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Rx[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DurScriptPadRxCompletedEventHandler(object sender, DurScriptPadRxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DurScriptPadRxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DurScriptPadRxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DURScriptPad Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DURScriptPad)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SavePatientCompletedEventHandler(object sender, SavePatientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SavePatientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SavePatientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591