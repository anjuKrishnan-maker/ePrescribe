//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace eRxWeb.DataManagerSvc {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DataManagerSvcSoap", Namespace="https://eprescribe.allscripts.com/DataManagerService")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IResponse))]
    public partial class DataManagerSvc : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback VersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDatabasePointerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDatabasePointerForNewAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateLicenseXrefOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteLicenseXrefOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateUserXrefOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteUserXrefOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDBIDCacheOperationCompleted;
        
        private System.Threading.SendOrPostCallback ForceDBIDCacheRefreshOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public DataManagerSvc() {
            this.Url = global::eRxWeb.Properties.Settings.Default.eRxWeb_DataManagerSvc_DataManagerSvc;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event VersionCompletedEventHandler VersionCompleted;
        
        /// <remarks/>
        public event GetDatabasePointerCompletedEventHandler GetDatabasePointerCompleted;
        
        /// <remarks/>
        public event GetDatabasePointerForNewAccountCompletedEventHandler GetDatabasePointerForNewAccountCompleted;
        
        /// <remarks/>
        public event CreateLicenseXrefCompletedEventHandler CreateLicenseXrefCompleted;
        
        /// <remarks/>
        public event DeleteLicenseXrefCompletedEventHandler DeleteLicenseXrefCompleted;
        
        /// <remarks/>
        public event CreateUserXrefCompletedEventHandler CreateUserXrefCompleted;
        
        /// <remarks/>
        public event DeleteUserXrefCompletedEventHandler DeleteUserXrefCompleted;
        
        /// <remarks/>
        public event GetDBIDCacheCompletedEventHandler GetDBIDCacheCompleted;
        
        /// <remarks/>
        public event ForceDBIDCacheRefreshCompletedEventHandler ForceDBIDCacheRefreshCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/DataManagerService/Version", RequestNamespace="https://eprescribe.allscripts.com/DataManagerService", ResponseNamespace="https://eprescribe.allscripts.com/DataManagerService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Version() {
            object[] results = this.Invoke("Version", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VersionAsync() {
            this.VersionAsync(null);
        }
        
        /// <remarks/>
        public void VersionAsync(object userState) {
            if ((this.VersionOperationCompleted == null)) {
                this.VersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVersionOperationCompleted);
            }
            this.InvokeAsync("Version", new object[0], this.VersionOperationCompleted, userState);
        }
        
        private void OnVersionOperationCompleted(object arg) {
            if ((this.VersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VersionCompleted(this, new VersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/DataManagerService/GetDatabasePointer", RequestNamespace="https://eprescribe.allscripts.com/DataManagerService", ResponseNamespace="https://eprescribe.allscripts.com/DataManagerService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ConnectionStringPointer GetDatabasePointer(EntityIdentifier entityID) {
            object[] results = this.Invoke("GetDatabasePointer", new object[] {
                        entityID});
            return ((ConnectionStringPointer)(results[0]));
        }
        
        /// <remarks/>
        public void GetDatabasePointerAsync(EntityIdentifier entityID) {
            this.GetDatabasePointerAsync(entityID, null);
        }
        
        /// <remarks/>
        public void GetDatabasePointerAsync(EntityIdentifier entityID, object userState) {
            if ((this.GetDatabasePointerOperationCompleted == null)) {
                this.GetDatabasePointerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDatabasePointerOperationCompleted);
            }
            this.InvokeAsync("GetDatabasePointer", new object[] {
                        entityID}, this.GetDatabasePointerOperationCompleted, userState);
        }
        
        private void OnGetDatabasePointerOperationCompleted(object arg) {
            if ((this.GetDatabasePointerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDatabasePointerCompleted(this, new GetDatabasePointerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/DataManagerService/GetDatabasePointerForNewAcco" +
            "unt", RequestNamespace="https://eprescribe.allscripts.com/DataManagerService", ResponseNamespace="https://eprescribe.allscripts.com/DataManagerService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ConnectionStringPointer GetDatabasePointerForNewAccount(NewAccountRequest newAccountRequest) {
            object[] results = this.Invoke("GetDatabasePointerForNewAccount", new object[] {
                        newAccountRequest});
            return ((ConnectionStringPointer)(results[0]));
        }
        
        /// <remarks/>
        public void GetDatabasePointerForNewAccountAsync(NewAccountRequest newAccountRequest) {
            this.GetDatabasePointerForNewAccountAsync(newAccountRequest, null);
        }
        
        /// <remarks/>
        public void GetDatabasePointerForNewAccountAsync(NewAccountRequest newAccountRequest, object userState) {
            if ((this.GetDatabasePointerForNewAccountOperationCompleted == null)) {
                this.GetDatabasePointerForNewAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDatabasePointerForNewAccountOperationCompleted);
            }
            this.InvokeAsync("GetDatabasePointerForNewAccount", new object[] {
                        newAccountRequest}, this.GetDatabasePointerForNewAccountOperationCompleted, userState);
        }
        
        private void OnGetDatabasePointerForNewAccountOperationCompleted(object arg) {
            if ((this.GetDatabasePointerForNewAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDatabasePointerForNewAccountCompleted(this, new GetDatabasePointerForNewAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/DataManagerService/CreateLicenseXref", RequestNamespace="https://eprescribe.allscripts.com/DataManagerService", ResponseNamespace="https://eprescribe.allscripts.com/DataManagerService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CreateLicenseXrefResponse CreateLicenseXref(CreateLicenseXrefRequest createLicenseXrefRequest) {
            object[] results = this.Invoke("CreateLicenseXref", new object[] {
                        createLicenseXrefRequest});
            return ((CreateLicenseXrefResponse)(results[0]));
        }
        
        /// <remarks/>
        public void CreateLicenseXrefAsync(CreateLicenseXrefRequest createLicenseXrefRequest) {
            this.CreateLicenseXrefAsync(createLicenseXrefRequest, null);
        }
        
        /// <remarks/>
        public void CreateLicenseXrefAsync(CreateLicenseXrefRequest createLicenseXrefRequest, object userState) {
            if ((this.CreateLicenseXrefOperationCompleted == null)) {
                this.CreateLicenseXrefOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateLicenseXrefOperationCompleted);
            }
            this.InvokeAsync("CreateLicenseXref", new object[] {
                        createLicenseXrefRequest}, this.CreateLicenseXrefOperationCompleted, userState);
        }
        
        private void OnCreateLicenseXrefOperationCompleted(object arg) {
            if ((this.CreateLicenseXrefCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateLicenseXrefCompleted(this, new CreateLicenseXrefCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/DataManagerService/DeleteLicenseXref", RequestNamespace="https://eprescribe.allscripts.com/DataManagerService", ResponseNamespace="https://eprescribe.allscripts.com/DataManagerService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DeleteLicenseXrefResponse DeleteLicenseXref(DeleteLicenseXrefRequest deleteLicenseXrefRequest) {
            object[] results = this.Invoke("DeleteLicenseXref", new object[] {
                        deleteLicenseXrefRequest});
            return ((DeleteLicenseXrefResponse)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteLicenseXrefAsync(DeleteLicenseXrefRequest deleteLicenseXrefRequest) {
            this.DeleteLicenseXrefAsync(deleteLicenseXrefRequest, null);
        }
        
        /// <remarks/>
        public void DeleteLicenseXrefAsync(DeleteLicenseXrefRequest deleteLicenseXrefRequest, object userState) {
            if ((this.DeleteLicenseXrefOperationCompleted == null)) {
                this.DeleteLicenseXrefOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteLicenseXrefOperationCompleted);
            }
            this.InvokeAsync("DeleteLicenseXref", new object[] {
                        deleteLicenseXrefRequest}, this.DeleteLicenseXrefOperationCompleted, userState);
        }
        
        private void OnDeleteLicenseXrefOperationCompleted(object arg) {
            if ((this.DeleteLicenseXrefCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteLicenseXrefCompleted(this, new DeleteLicenseXrefCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/DataManagerService/CreateUserXref", RequestNamespace="https://eprescribe.allscripts.com/DataManagerService", ResponseNamespace="https://eprescribe.allscripts.com/DataManagerService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CreateUserXrefResponse CreateUserXref(CreateUserXrefRequest createUserXrefRequest) {
            object[] results = this.Invoke("CreateUserXref", new object[] {
                        createUserXrefRequest});
            return ((CreateUserXrefResponse)(results[0]));
        }
        
        /// <remarks/>
        public void CreateUserXrefAsync(CreateUserXrefRequest createUserXrefRequest) {
            this.CreateUserXrefAsync(createUserXrefRequest, null);
        }
        
        /// <remarks/>
        public void CreateUserXrefAsync(CreateUserXrefRequest createUserXrefRequest, object userState) {
            if ((this.CreateUserXrefOperationCompleted == null)) {
                this.CreateUserXrefOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateUserXrefOperationCompleted);
            }
            this.InvokeAsync("CreateUserXref", new object[] {
                        createUserXrefRequest}, this.CreateUserXrefOperationCompleted, userState);
        }
        
        private void OnCreateUserXrefOperationCompleted(object arg) {
            if ((this.CreateUserXrefCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateUserXrefCompleted(this, new CreateUserXrefCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/DataManagerService/DeleteUserXref", RequestNamespace="https://eprescribe.allscripts.com/DataManagerService", ResponseNamespace="https://eprescribe.allscripts.com/DataManagerService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DeleteUserXrefResponse DeleteUserXref(DeleteUserXrefRequest deleteUserXrefRequest) {
            object[] results = this.Invoke("DeleteUserXref", new object[] {
                        deleteUserXrefRequest});
            return ((DeleteUserXrefResponse)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteUserXrefAsync(DeleteUserXrefRequest deleteUserXrefRequest) {
            this.DeleteUserXrefAsync(deleteUserXrefRequest, null);
        }
        
        /// <remarks/>
        public void DeleteUserXrefAsync(DeleteUserXrefRequest deleteUserXrefRequest, object userState) {
            if ((this.DeleteUserXrefOperationCompleted == null)) {
                this.DeleteUserXrefOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteUserXrefOperationCompleted);
            }
            this.InvokeAsync("DeleteUserXref", new object[] {
                        deleteUserXrefRequest}, this.DeleteUserXrefOperationCompleted, userState);
        }
        
        private void OnDeleteUserXrefOperationCompleted(object arg) {
            if ((this.DeleteUserXrefCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteUserXrefCompleted(this, new DeleteUserXrefCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/DataManagerService/GetDBIDCache", RequestNamespace="https://eprescribe.allscripts.com/DataManagerService", ResponseNamespace="https://eprescribe.allscripts.com/DataManagerService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDBIDCache() {
            object[] results = this.Invoke("GetDBIDCache", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDBIDCacheAsync() {
            this.GetDBIDCacheAsync(null);
        }
        
        /// <remarks/>
        public void GetDBIDCacheAsync(object userState) {
            if ((this.GetDBIDCacheOperationCompleted == null)) {
                this.GetDBIDCacheOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDBIDCacheOperationCompleted);
            }
            this.InvokeAsync("GetDBIDCache", new object[0], this.GetDBIDCacheOperationCompleted, userState);
        }
        
        private void OnGetDBIDCacheOperationCompleted(object arg) {
            if ((this.GetDBIDCacheCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDBIDCacheCompleted(this, new GetDBIDCacheCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://eprescribe.allscripts.com/DataManagerService/ForceDBIDCacheRefresh", RequestNamespace="https://eprescribe.allscripts.com/DataManagerService", ResponseNamespace="https://eprescribe.allscripts.com/DataManagerService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ForceDBIDCacheRefresh() {
            object[] results = this.Invoke("ForceDBIDCacheRefresh", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ForceDBIDCacheRefreshAsync() {
            this.ForceDBIDCacheRefreshAsync(null);
        }
        
        /// <remarks/>
        public void ForceDBIDCacheRefreshAsync(object userState) {
            if ((this.ForceDBIDCacheRefreshOperationCompleted == null)) {
                this.ForceDBIDCacheRefreshOperationCompleted = new System.Threading.SendOrPostCallback(this.OnForceDBIDCacheRefreshOperationCompleted);
            }
            this.InvokeAsync("ForceDBIDCacheRefresh", new object[0], this.ForceDBIDCacheRefreshOperationCompleted, userState);
        }
        
        private void OnForceDBIDCacheRefreshOperationCompleted(object arg) {
            if ((this.ForceDBIDCacheRefreshCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ForceDBIDCacheRefreshCompleted(this, new ForceDBIDCacheRefreshCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/DataManagerService")]
    public partial class EntityIdentifier {
        
        private string valueField;
        
        private IdentifierType typeField;
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        public IdentifierType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/DataManagerService")]
    public enum IdentifierType {
        
        /// <remarks/>
        AccountID,
        
        /// <remarks/>
        LicenseGUID,
        
        /// <remarks/>
        UserGUID,
        
        /// <remarks/>
        UserName,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/DataManagerService")]
    public partial class DeleteUserXrefResponse {
        
        private bool successField;
        
        private string messageField;
        
        /// <remarks/>
        public bool Success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/DataManagerService")]
    public partial class DeleteUserXrefRequest {
        
        private string userNameField;
        
        private string userGUIDField;
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string UserGUID {
            get {
                return this.userGUIDField;
            }
            set {
                this.userGUIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/DataManagerService")]
    public partial class CreateUserXrefRequest {
        
        private ConnectionStringPointer dBIDField;
        
        private string userNameField;
        
        private string licenseIDField;
        
        private int accountIDField;
        
        private bool createNewLicenseField;
        
        private string partnerIDField;
        
        private string enterpriseClientIDField;
        
        private CallingApplication callingApplicationField;
        
        private string userGUIDField;
        
        /// <remarks/>
        public ConnectionStringPointer DBID {
            get {
                return this.dBIDField;
            }
            set {
                this.dBIDField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string LicenseID {
            get {
                return this.licenseIDField;
            }
            set {
                this.licenseIDField = value;
            }
        }
        
        /// <remarks/>
        public int AccountID {
            get {
                return this.accountIDField;
            }
            set {
                this.accountIDField = value;
            }
        }
        
        /// <remarks/>
        public bool CreateNewLicense {
            get {
                return this.createNewLicenseField;
            }
            set {
                this.createNewLicenseField = value;
            }
        }
        
        /// <remarks/>
        public string PartnerID {
            get {
                return this.partnerIDField;
            }
            set {
                this.partnerIDField = value;
            }
        }
        
        /// <remarks/>
        public string EnterpriseClientID {
            get {
                return this.enterpriseClientIDField;
            }
            set {
                this.enterpriseClientIDField = value;
            }
        }
        
        /// <remarks/>
        public CallingApplication CallingApplication {
            get {
                return this.callingApplicationField;
            }
            set {
                this.callingApplicationField = value;
            }
        }
        
        /// <remarks/>
        public string UserGUID {
            get {
                return this.userGUIDField;
            }
            set {
                this.userGUIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/DataManagerService")]
    public enum ConnectionStringPointer {
        
        /// <remarks/>
        SHARED_DB,
        
        /// <remarks/>
        ERXDB_SERVER_1,
        
        /// <remarks/>
        ERXDB_SERVER_2,
        
        /// <remarks/>
        ERXDB_SERVER_3,
        
        /// <remarks/>
        ERXDB_SERVER_4,
        
        /// <remarks/>
        ERXDB_SERVER_5,
        
        /// <remarks/>
        ERXDB_SERVER_6,
        
        /// <remarks/>
        ERXDB_SERVER_7,
        
        /// <remarks/>
        ERXDB_SERVER_8,
        
        /// <remarks/>
        ERXDB_SERVER_9,
        
        /// <remarks/>
        ERXDB_SERVER_10,
        
        /// <remarks/>
        ERXDB_DEFAULT,
        
        /// <remarks/>
        SERVICE_MGR_DB,
        
        /// <remarks/>
        REPLICA_DB,
        
        /// <remarks/>
        REGISTRATION_DB,
        
        /// <remarks/>
        UTILITIES_DB,
        
        /// <remarks/>
        DEBUG_DB,
        
        /// <remarks/>
        REPORTING_DB,
        
        /// <remarks/>
        AUDIT_ERXDB_SERVER_1,
        
        /// <remarks/>
        AUDIT_ERXDB_SERVER_2,
        
        /// <remarks/>
        AUDIT_ERXDB_SERVER_3,
        
        /// <remarks/>
        AUDIT_ERXDB_SERVER_4,
        
        /// <remarks/>
        AUDIT_ERXDB_SERVER_5,
        
        /// <remarks/>
        AUDIT_ERXDB_SERVER_6,
        
        /// <remarks/>
        AUDIT_ERXDB_SERVER_7,
        
        /// <remarks/>
        AUDIT_ERXDB_SERVER_8,
        
        /// <remarks/>
        AUDIT_ERXDB_SERVER_9,
        
        /// <remarks/>
        AUDIT_ERXDB_SERVER_10,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/DataManagerService")]
    public enum CallingApplication {
        
        /// <remarks/>
        FullRegistration,
        
        /// <remarks/>
        PartnerRegistration,
        
        /// <remarks/>
        RegWebService,
        
        /// <remarks/>
        Utilities,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/DataManagerService")]
    public partial class DeleteLicenseXrefResponse {
        
        private bool successField;
        
        private string messageField;
        
        /// <remarks/>
        public bool Success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/DataManagerService")]
    public partial class DeleteLicenseXrefRequest {
        
        private int accountIDField;
        
        private string licenseIDField;
        
        /// <remarks/>
        public int AccountID {
            get {
                return this.accountIDField;
            }
            set {
                this.accountIDField = value;
            }
        }
        
        /// <remarks/>
        public string LicenseID {
            get {
                return this.licenseIDField;
            }
            set {
                this.licenseIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CreateUserXrefResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CreateLicenseXrefResponse))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/DataManagerService")]
    public partial class IResponse {
        
        private ResponseStatus responseStatusField;
        
        private string messageField;
        
        /// <remarks/>
        public ResponseStatus ResponseStatus {
            get {
                return this.responseStatusField;
            }
            set {
                this.responseStatusField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/DataManagerService")]
    public enum ResponseStatus {
        
        /// <remarks/>
        SUCCESS,
        
        /// <remarks/>
        FAILURE,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/DataManagerService")]
    public partial class CreateUserXrefResponse : IResponse {
        
        private ConnectionStringPointer dBIDField;
        
        private string userGUIDField;
        
        private string userNameField;
        
        private string licenseIDField;
        
        private int accountIDField;
        
        /// <remarks/>
        public ConnectionStringPointer DBID {
            get {
                return this.dBIDField;
            }
            set {
                this.dBIDField = value;
            }
        }
        
        /// <remarks/>
        public string UserGUID {
            get {
                return this.userGUIDField;
            }
            set {
                this.userGUIDField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string LicenseID {
            get {
                return this.licenseIDField;
            }
            set {
                this.licenseIDField = value;
            }
        }
        
        /// <remarks/>
        public int AccountID {
            get {
                return this.accountIDField;
            }
            set {
                this.accountIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/DataManagerService")]
    public partial class CreateLicenseXrefResponse : IResponse {
        
        private ConnectionStringPointer dBIDField;
        
        private string licenseIDField;
        
        private int accountIDField;
        
        /// <remarks/>
        public ConnectionStringPointer DBID {
            get {
                return this.dBIDField;
            }
            set {
                this.dBIDField = value;
            }
        }
        
        /// <remarks/>
        public string LicenseID {
            get {
                return this.licenseIDField;
            }
            set {
                this.licenseIDField = value;
            }
        }
        
        /// <remarks/>
        public int AccountID {
            get {
                return this.accountIDField;
            }
            set {
                this.accountIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/DataManagerService")]
    public partial class CreateLicenseXrefRequest {
        
        private string partnerIDField;
        
        private string enterpriseClientIDField;
        
        private CallingApplication callingApplicationField;
        
        /// <remarks/>
        public string PartnerID {
            get {
                return this.partnerIDField;
            }
            set {
                this.partnerIDField = value;
            }
        }
        
        /// <remarks/>
        public string EnterpriseClientID {
            get {
                return this.enterpriseClientIDField;
            }
            set {
                this.enterpriseClientIDField = value;
            }
        }
        
        /// <remarks/>
        public CallingApplication CallingApplication {
            get {
                return this.callingApplicationField;
            }
            set {
                this.callingApplicationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://eprescribe.allscripts.com/DataManagerService")]
    public partial class NewAccountRequest {
        
        private string partnerIDField;
        
        private string enterpriseClientIDField;
        
        private CallingApplication callingApplicationField;
        
        /// <remarks/>
        public string PartnerID {
            get {
                return this.partnerIDField;
            }
            set {
                this.partnerIDField = value;
            }
        }
        
        /// <remarks/>
        public string EnterpriseClientID {
            get {
                return this.enterpriseClientIDField;
            }
            set {
                this.enterpriseClientIDField = value;
            }
        }
        
        /// <remarks/>
        public CallingApplication CallingApplication {
            get {
                return this.callingApplicationField;
            }
            set {
                this.callingApplicationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void VersionCompletedEventHandler(object sender, VersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetDatabasePointerCompletedEventHandler(object sender, GetDatabasePointerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDatabasePointerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDatabasePointerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ConnectionStringPointer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ConnectionStringPointer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetDatabasePointerForNewAccountCompletedEventHandler(object sender, GetDatabasePointerForNewAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDatabasePointerForNewAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDatabasePointerForNewAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ConnectionStringPointer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ConnectionStringPointer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CreateLicenseXrefCompletedEventHandler(object sender, CreateLicenseXrefCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateLicenseXrefCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateLicenseXrefCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CreateLicenseXrefResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CreateLicenseXrefResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void DeleteLicenseXrefCompletedEventHandler(object sender, DeleteLicenseXrefCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteLicenseXrefCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteLicenseXrefCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DeleteLicenseXrefResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DeleteLicenseXrefResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CreateUserXrefCompletedEventHandler(object sender, CreateUserXrefCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateUserXrefCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateUserXrefCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CreateUserXrefResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CreateUserXrefResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void DeleteUserXrefCompletedEventHandler(object sender, DeleteUserXrefCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteUserXrefCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteUserXrefCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DeleteUserXrefResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DeleteUserXrefResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetDBIDCacheCompletedEventHandler(object sender, GetDBIDCacheCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDBIDCacheCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDBIDCacheCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ForceDBIDCacheRefreshCompletedEventHandler(object sender, ForceDBIDCacheRefreshCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ForceDBIDCacheRefreshCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ForceDBIDCacheRefreshCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591